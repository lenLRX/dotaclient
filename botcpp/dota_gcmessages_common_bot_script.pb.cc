// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_common_bot_script.proto

#include "dota_gcmessages_common_bot_script.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Ability;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_AttackTarget;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_Buyback;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_Cast;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_CastTarget;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_CastToggle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_CastTree;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_Chat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_Courier;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_DisassembleItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_GetActualIncomingDamage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_GetEstimatedDamageToTarget;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_Glyph;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_HoldLocation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_MoveToTarget;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_OceanReplayCorrectTime;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_OceanWinGame;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_PickUpItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_PickupRune;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_PurchaseItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawClear;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawScreenText;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_SellItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_SetCombineLockItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_SoftReset;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_Stop;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_SwapItems;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_TrainAbility;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_UseShrine;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Actions_Header;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Actions_OceanAnnotation_Hero;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Courier;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_EventCourierKilled;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_EventDamage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_EventRoshanKilled;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Modifier;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Player;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Vector;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_Action_AttackMove;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_Action_CastLocation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_Action_DropItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_Action_MoveToLocation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawBox;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawCircle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawLine;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawText;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_Actions_OceanAnnotation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_AvoidanceZone;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_DroppedItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_EventAbility;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_EventTree;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_LinearProjectile;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_RuneInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_TeleportInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_TrackingProjectile;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<37> scc_info_CMsgBotWorldState_Action;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_CMsgBotWorldState_Unit;
}  // namespace protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto
class CMsgBotWorldState_VectorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Vector>
      _instance;
} _CMsgBotWorldState_Vector_default_instance_;
class CMsgBotWorldState_PlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Player>
      _instance;
} _CMsgBotWorldState_Player_default_instance_;
class CMsgBotWorldState_AbilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Ability>
      _instance;
} _CMsgBotWorldState_Ability_default_instance_;
class CMsgBotWorldState_DroppedItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_DroppedItem>
      _instance;
} _CMsgBotWorldState_DroppedItem_default_instance_;
class CMsgBotWorldState_RuneInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_RuneInfo>
      _instance;
} _CMsgBotWorldState_RuneInfo_default_instance_;
class CMsgBotWorldState_TeleportInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_TeleportInfo>
      _instance;
} _CMsgBotWorldState_TeleportInfo_default_instance_;
class CMsgBotWorldState_ModifierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Modifier>
      _instance;
} _CMsgBotWorldState_Modifier_default_instance_;
class CMsgBotWorldState_LinearProjectileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_LinearProjectile>
      _instance;
} _CMsgBotWorldState_LinearProjectile_default_instance_;
class CMsgBotWorldState_TrackingProjectileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_TrackingProjectile>
      _instance;
} _CMsgBotWorldState_TrackingProjectile_default_instance_;
class CMsgBotWorldState_AvoidanceZoneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_AvoidanceZone>
      _instance;
} _CMsgBotWorldState_AvoidanceZone_default_instance_;
class CMsgBotWorldState_CourierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Courier>
      _instance;
} _CMsgBotWorldState_Courier_default_instance_;
class CMsgBotWorldState_EventAbilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_EventAbility>
      _instance;
} _CMsgBotWorldState_EventAbility_default_instance_;
class CMsgBotWorldState_EventDamageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_EventDamage>
      _instance;
} _CMsgBotWorldState_EventDamage_default_instance_;
class CMsgBotWorldState_EventCourierKilledDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_EventCourierKilled>
      _instance;
} _CMsgBotWorldState_EventCourierKilled_default_instance_;
class CMsgBotWorldState_EventRoshanKilledDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_EventRoshanKilled>
      _instance;
} _CMsgBotWorldState_EventRoshanKilled_default_instance_;
class CMsgBotWorldState_EventTreeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_EventTree>
      _instance;
} _CMsgBotWorldState_EventTree_default_instance_;
class CMsgBotWorldState_UnitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Unit>
      _instance;
} _CMsgBotWorldState_Unit_default_instance_;
class CMsgBotWorldState_Actions_OceanAnnotation_HeroDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Actions_OceanAnnotation_Hero>
      _instance;
} _CMsgBotWorldState_Actions_OceanAnnotation_Hero_default_instance_;
class CMsgBotWorldState_Actions_OceanAnnotationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Actions_OceanAnnotation>
      _instance;
} _CMsgBotWorldState_Actions_OceanAnnotation_default_instance_;
class CMsgBotWorldState_Actions_HeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Actions_Header>
      _instance;
} _CMsgBotWorldState_Actions_Header_default_instance_;
class CMsgBotWorldState_ActionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Actions>
      _instance;
} _CMsgBotWorldState_Actions_default_instance_;
class CMsgBotWorldState_Action_MoveToLocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_MoveToLocation>
      _instance;
} _CMsgBotWorldState_Action_MoveToLocation_default_instance_;
class CMsgBotWorldState_Action_MoveToTargetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_MoveToTarget>
      _instance;
} _CMsgBotWorldState_Action_MoveToTarget_default_instance_;
class CMsgBotWorldState_Action_AttackMoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_AttackMove>
      _instance;
} _CMsgBotWorldState_Action_AttackMove_default_instance_;
class CMsgBotWorldState_Action_AttackTargetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_AttackTarget>
      _instance;
} _CMsgBotWorldState_Action_AttackTarget_default_instance_;
class CMsgBotWorldState_Action_HoldLocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_HoldLocation>
      _instance;
} _CMsgBotWorldState_Action_HoldLocation_default_instance_;
class CMsgBotWorldState_Action_StopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_Stop>
      _instance;
} _CMsgBotWorldState_Action_Stop_default_instance_;
class CMsgBotWorldState_Action_CastLocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_CastLocation>
      _instance;
} _CMsgBotWorldState_Action_CastLocation_default_instance_;
class CMsgBotWorldState_Action_CastTargetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_CastTarget>
      _instance;
} _CMsgBotWorldState_Action_CastTarget_default_instance_;
class CMsgBotWorldState_Action_CastTreeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_CastTree>
      _instance;
} _CMsgBotWorldState_Action_CastTree_default_instance_;
class CMsgBotWorldState_Action_CastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_Cast>
      _instance;
} _CMsgBotWorldState_Action_Cast_default_instance_;
class CMsgBotWorldState_Action_CastToggleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_CastToggle>
      _instance;
} _CMsgBotWorldState_Action_CastToggle_default_instance_;
class CMsgBotWorldState_Action_TrainAbilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_TrainAbility>
      _instance;
} _CMsgBotWorldState_Action_TrainAbility_default_instance_;
class CMsgBotWorldState_Action_DropItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_DropItem>
      _instance;
} _CMsgBotWorldState_Action_DropItem_default_instance_;
class CMsgBotWorldState_Action_PickUpItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_PickUpItem>
      _instance;
} _CMsgBotWorldState_Action_PickUpItem_default_instance_;
class CMsgBotWorldState_Action_PurchaseItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_PurchaseItem>
      _instance;
} _CMsgBotWorldState_Action_PurchaseItem_default_instance_;
class CMsgBotWorldState_Action_SellItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_SellItem>
      _instance;
} _CMsgBotWorldState_Action_SellItem_default_instance_;
class CMsgBotWorldState_Action_SwapItemsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_SwapItems>
      _instance;
} _CMsgBotWorldState_Action_SwapItems_default_instance_;
class CMsgBotWorldState_Action_DisassembleItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_DisassembleItem>
      _instance;
} _CMsgBotWorldState_Action_DisassembleItem_default_instance_;
class CMsgBotWorldState_Action_SetCombineLockItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_SetCombineLockItem>
      _instance;
} _CMsgBotWorldState_Action_SetCombineLockItem_default_instance_;
class CMsgBotWorldState_Action_PickupRuneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_PickupRune>
      _instance;
} _CMsgBotWorldState_Action_PickupRune_default_instance_;
class CMsgBotWorldState_Action_ChatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_Chat>
      _instance;
} _CMsgBotWorldState_Action_Chat_default_instance_;
class CMsgBotWorldState_Action_UseShrineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_UseShrine>
      _instance;
} _CMsgBotWorldState_Action_UseShrine_default_instance_;
class CMsgBotWorldState_Action_CourierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_Courier>
      _instance;
} _CMsgBotWorldState_Action_Courier_default_instance_;
class CMsgBotWorldState_Action_GetActualIncomingDamageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_GetActualIncomingDamage>
      _instance;
} _CMsgBotWorldState_Action_GetActualIncomingDamage_default_instance_;
class CMsgBotWorldState_Action_GetEstimatedDamageToTargetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_GetEstimatedDamageToTarget>
      _instance;
} _CMsgBotWorldState_Action_GetEstimatedDamageToTarget_default_instance_;
class CMsgBotWorldState_Action_GlyphDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_Glyph>
      _instance;
} _CMsgBotWorldState_Action_Glyph_default_instance_;
class CMsgBotWorldState_Action_SoftResetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_SoftReset>
      _instance;
} _CMsgBotWorldState_Action_SoftReset_default_instance_;
class CMsgBotWorldState_Action_BuybackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_Buyback>
      _instance;
} _CMsgBotWorldState_Action_Buyback_default_instance_;
class CMsgBotWorldState_Action_ScriptingDebugDrawTextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_ScriptingDebugDrawText>
      _instance;
} _CMsgBotWorldState_Action_ScriptingDebugDrawText_default_instance_;
class CMsgBotWorldState_Action_ScriptingDebugDrawLineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_ScriptingDebugDrawLine>
      _instance;
} _CMsgBotWorldState_Action_ScriptingDebugDrawLine_default_instance_;
class CMsgBotWorldState_Action_ScriptingDebugDrawScreenTextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_ScriptingDebugDrawScreenText>
      _instance;
} _CMsgBotWorldState_Action_ScriptingDebugDrawScreenText_default_instance_;
class CMsgBotWorldState_Action_ScriptingDebugScreenTextPrettyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty>
      _instance;
} _CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty_default_instance_;
class CMsgBotWorldState_Action_ScriptingDebugDrawBoxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_ScriptingDebugDrawBox>
      _instance;
} _CMsgBotWorldState_Action_ScriptingDebugDrawBox_default_instance_;
class CMsgBotWorldState_Action_ScriptingDebugDrawCircleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_ScriptingDebugDrawCircle>
      _instance;
} _CMsgBotWorldState_Action_ScriptingDebugDrawCircle_default_instance_;
class CMsgBotWorldState_Action_ScriptingDebugDrawClearDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_ScriptingDebugDrawClear>
      _instance;
} _CMsgBotWorldState_Action_ScriptingDebugDrawClear_default_instance_;
class CMsgBotWorldState_Action_OceanWinGameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_OceanWinGame>
      _instance;
} _CMsgBotWorldState_Action_OceanWinGame_default_instance_;
class CMsgBotWorldState_Action_OceanReplayCorrectTimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action_OceanReplayCorrectTime>
      _instance;
} _CMsgBotWorldState_Action_OceanReplayCorrectTime_default_instance_;
class CMsgBotWorldState_ActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState_Action>
      _instance;
  const ::CMsgBotWorldState_Action_MoveToLocation* movetolocation_;
  const ::CMsgBotWorldState_Action_MoveToTarget* movetotarget_;
  const ::CMsgBotWorldState_Action_AttackMove* attackmove_;
  const ::CMsgBotWorldState_Action_AttackTarget* attacktarget_;
  const ::CMsgBotWorldState_Action_CastLocation* castlocation_;
  const ::CMsgBotWorldState_Action_CastTarget* casttarget_;
  const ::CMsgBotWorldState_Action_CastTree* casttree_;
  const ::CMsgBotWorldState_Action_Cast* cast_;
  const ::CMsgBotWorldState_Action_CastToggle* casttoggle_;
  const ::CMsgBotWorldState_Action_HoldLocation* holdlocation_;
  const ::CMsgBotWorldState_Action_TrainAbility* trainability_;
  const ::CMsgBotWorldState_Action_DropItem* dropitem_;
  const ::CMsgBotWorldState_Action_PickUpItem* pickupitem_;
  const ::CMsgBotWorldState_Action_PickupRune* pickuprune_;
  const ::CMsgBotWorldState_Action_PurchaseItem* purchaseitem_;
  const ::CMsgBotWorldState_Action_SellItem* sellitem_;
  const ::CMsgBotWorldState_Action_DisassembleItem* disassembleitem_;
  const ::CMsgBotWorldState_Action_SetCombineLockItem* setcombinelockitem_;
  const ::CMsgBotWorldState_Action_Stop* stop_;
  const ::CMsgBotWorldState_Action_Chat* chat_;
  const ::CMsgBotWorldState_Action_SwapItems* swapitems_;
  const ::CMsgBotWorldState_Action_UseShrine* useshrine_;
  const ::CMsgBotWorldState_Action_Courier* courier_;
  const ::CMsgBotWorldState_Action_GetActualIncomingDamage* getactualincomingdamage_;
  const ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget* getestimateddamagetotarget_;
  const ::CMsgBotWorldState_Action_Glyph* glyph_;
  const ::CMsgBotWorldState_Action_SoftReset* softreset_;
  const ::CMsgBotWorldState_Action_Buyback* buyback_;
  const ::CMsgBotWorldState_Action_ScriptingDebugDrawText* scriptingdebugdrawtext_;
  const ::CMsgBotWorldState_Action_ScriptingDebugDrawLine* scriptingdebugdrawline_;
  const ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* scriptingdebugdrawscreentext_;
  const ::CMsgBotWorldState_Action_ScriptingDebugDrawBox* scriptingdebugdrawbox_;
  const ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle* scriptingdebugdrawcircle_;
  const ::CMsgBotWorldState_Action_ScriptingDebugDrawClear* scriptingdebugdrawclear_;
  const ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* scriptingdebugscreentextpretty_;
  const ::CMsgBotWorldState_Action_MoveToLocation* movedirectly_;
  const ::CMsgBotWorldState_Action_OceanWinGame* oceanwingame_;
  const ::CMsgBotWorldState_Action_OceanReplayCorrectTime* oceanreplaycorrecttime_;
} _CMsgBotWorldState_Action_default_instance_;
class CMsgBotWorldStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBotWorldState>
      _instance;
} _CMsgBotWorldState_default_instance_;
namespace protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto {
static void InitDefaultsCMsgBotWorldState_Vector() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Vector_default_instance_;
    new (ptr) ::CMsgBotWorldState_Vector();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Vector::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Vector =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Vector}, {}};

static void InitDefaultsCMsgBotWorldState_Player() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Player_default_instance_;
    new (ptr) ::CMsgBotWorldState_Player();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Player::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Player =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Player}, {}};

static void InitDefaultsCMsgBotWorldState_Ability() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Ability_default_instance_;
    new (ptr) ::CMsgBotWorldState_Ability();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Ability::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Ability =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Ability}, {}};

static void InitDefaultsCMsgBotWorldState_DroppedItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_DroppedItem_default_instance_;
    new (ptr) ::CMsgBotWorldState_DroppedItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_DroppedItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_DroppedItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgBotWorldState_DroppedItem}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base,}};

static void InitDefaultsCMsgBotWorldState_RuneInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_RuneInfo_default_instance_;
    new (ptr) ::CMsgBotWorldState_RuneInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_RuneInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_RuneInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgBotWorldState_RuneInfo}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base,}};

static void InitDefaultsCMsgBotWorldState_TeleportInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_TeleportInfo_default_instance_;
    new (ptr) ::CMsgBotWorldState_TeleportInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_TeleportInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_TeleportInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgBotWorldState_TeleportInfo}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base,}};

static void InitDefaultsCMsgBotWorldState_Modifier() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Modifier_default_instance_;
    new (ptr) ::CMsgBotWorldState_Modifier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Modifier::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Modifier =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Modifier}, {}};

static void InitDefaultsCMsgBotWorldState_LinearProjectile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_LinearProjectile_default_instance_;
    new (ptr) ::CMsgBotWorldState_LinearProjectile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_LinearProjectile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_LinearProjectile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgBotWorldState_LinearProjectile}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base,}};

static void InitDefaultsCMsgBotWorldState_TrackingProjectile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_TrackingProjectile_default_instance_;
    new (ptr) ::CMsgBotWorldState_TrackingProjectile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_TrackingProjectile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_TrackingProjectile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgBotWorldState_TrackingProjectile}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base,}};

static void InitDefaultsCMsgBotWorldState_AvoidanceZone() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_AvoidanceZone_default_instance_;
    new (ptr) ::CMsgBotWorldState_AvoidanceZone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_AvoidanceZone::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_AvoidanceZone =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgBotWorldState_AvoidanceZone}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base,}};

static void InitDefaultsCMsgBotWorldState_Courier() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Courier_default_instance_;
    new (ptr) ::CMsgBotWorldState_Courier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Courier::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Courier =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Courier}, {}};

static void InitDefaultsCMsgBotWorldState_EventAbility() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_EventAbility_default_instance_;
    new (ptr) ::CMsgBotWorldState_EventAbility();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_EventAbility::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_EventAbility =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgBotWorldState_EventAbility}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base,}};

static void InitDefaultsCMsgBotWorldState_EventDamage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_EventDamage_default_instance_;
    new (ptr) ::CMsgBotWorldState_EventDamage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_EventDamage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_EventDamage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_EventDamage}, {}};

static void InitDefaultsCMsgBotWorldState_EventCourierKilled() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_EventCourierKilled_default_instance_;
    new (ptr) ::CMsgBotWorldState_EventCourierKilled();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_EventCourierKilled::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_EventCourierKilled =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_EventCourierKilled}, {}};

static void InitDefaultsCMsgBotWorldState_EventRoshanKilled() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_EventRoshanKilled_default_instance_;
    new (ptr) ::CMsgBotWorldState_EventRoshanKilled();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_EventRoshanKilled::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_EventRoshanKilled =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_EventRoshanKilled}, {}};

static void InitDefaultsCMsgBotWorldState_EventTree() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_EventTree_default_instance_;
    new (ptr) ::CMsgBotWorldState_EventTree();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_EventTree::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_EventTree =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgBotWorldState_EventTree}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base,}};

static void InitDefaultsCMsgBotWorldState_Unit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Unit_default_instance_;
    new (ptr) ::CMsgBotWorldState_Unit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Unit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_CMsgBotWorldState_Unit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsCMsgBotWorldState_Unit}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Ability.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Modifier.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_TrackingProjectile.base,}};

static void InitDefaultsCMsgBotWorldState_Actions_OceanAnnotation_Hero() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Actions_OceanAnnotation_Hero_default_instance_;
    new (ptr) ::CMsgBotWorldState_Actions_OceanAnnotation_Hero();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Actions_OceanAnnotation_Hero::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Actions_OceanAnnotation_Hero =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Actions_OceanAnnotation_Hero}, {}};

static void InitDefaultsCMsgBotWorldState_Actions_OceanAnnotation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Actions_OceanAnnotation_default_instance_;
    new (ptr) ::CMsgBotWorldState_Actions_OceanAnnotation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Actions_OceanAnnotation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_Actions_OceanAnnotation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgBotWorldState_Actions_OceanAnnotation}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Actions_OceanAnnotation_Hero.base,}};

static void InitDefaultsCMsgBotWorldState_Actions_Header() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Actions_Header_default_instance_;
    new (ptr) ::CMsgBotWorldState_Actions_Header();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Actions_Header::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Actions_Header =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Actions_Header}, {}};

static void InitDefaultsCMsgBotWorldState_Actions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Actions_default_instance_;
    new (ptr) ::CMsgBotWorldState_Actions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Actions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CMsgBotWorldState_Actions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCMsgBotWorldState_Actions}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Actions_OceanAnnotation.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Actions_Header.base,}};

static void InitDefaultsCMsgBotWorldState_Action_MoveToLocation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_MoveToLocation_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_MoveToLocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_MoveToLocation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_Action_MoveToLocation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgBotWorldState_Action_MoveToLocation}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base,}};

static void InitDefaultsCMsgBotWorldState_Action_MoveToTarget() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_MoveToTarget_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_MoveToTarget();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_MoveToTarget::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_MoveToTarget =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_MoveToTarget}, {}};

static void InitDefaultsCMsgBotWorldState_Action_AttackMove() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_AttackMove_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_AttackMove();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_AttackMove::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_Action_AttackMove =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgBotWorldState_Action_AttackMove}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base,}};

static void InitDefaultsCMsgBotWorldState_Action_AttackTarget() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_AttackTarget_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_AttackTarget();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_AttackTarget::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_AttackTarget =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_AttackTarget}, {}};

static void InitDefaultsCMsgBotWorldState_Action_HoldLocation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_HoldLocation_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_HoldLocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_HoldLocation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_HoldLocation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_HoldLocation}, {}};

static void InitDefaultsCMsgBotWorldState_Action_Stop() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_Stop_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_Stop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_Stop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_Stop =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_Stop}, {}};

static void InitDefaultsCMsgBotWorldState_Action_CastLocation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_CastLocation_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_CastLocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_CastLocation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_Action_CastLocation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgBotWorldState_Action_CastLocation}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base,}};

static void InitDefaultsCMsgBotWorldState_Action_CastTarget() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_CastTarget_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_CastTarget();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_CastTarget::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_CastTarget =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_CastTarget}, {}};

static void InitDefaultsCMsgBotWorldState_Action_CastTree() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_CastTree_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_CastTree();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_CastTree::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_CastTree =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_CastTree}, {}};

static void InitDefaultsCMsgBotWorldState_Action_Cast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_Cast_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_Cast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_Cast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_Cast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_Cast}, {}};

static void InitDefaultsCMsgBotWorldState_Action_CastToggle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_CastToggle_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_CastToggle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_CastToggle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_CastToggle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_CastToggle}, {}};

static void InitDefaultsCMsgBotWorldState_Action_TrainAbility() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_TrainAbility_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_TrainAbility();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_TrainAbility::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_TrainAbility =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_TrainAbility}, {}};

static void InitDefaultsCMsgBotWorldState_Action_DropItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_DropItem_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_DropItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_DropItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_Action_DropItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgBotWorldState_Action_DropItem}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base,}};

static void InitDefaultsCMsgBotWorldState_Action_PickUpItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_PickUpItem_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_PickUpItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_PickUpItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_PickUpItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_PickUpItem}, {}};

static void InitDefaultsCMsgBotWorldState_Action_PurchaseItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_PurchaseItem_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_PurchaseItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_PurchaseItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_PurchaseItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_PurchaseItem}, {}};

static void InitDefaultsCMsgBotWorldState_Action_SellItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_SellItem_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_SellItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_SellItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_SellItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_SellItem}, {}};

static void InitDefaultsCMsgBotWorldState_Action_SwapItems() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_SwapItems_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_SwapItems();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_SwapItems::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_SwapItems =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_SwapItems}, {}};

static void InitDefaultsCMsgBotWorldState_Action_DisassembleItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_DisassembleItem_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_DisassembleItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_DisassembleItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_DisassembleItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_DisassembleItem}, {}};

static void InitDefaultsCMsgBotWorldState_Action_SetCombineLockItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_SetCombineLockItem_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_SetCombineLockItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_SetCombineLockItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_SetCombineLockItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_SetCombineLockItem}, {}};

static void InitDefaultsCMsgBotWorldState_Action_PickupRune() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_PickupRune_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_PickupRune();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_PickupRune::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_PickupRune =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_PickupRune}, {}};

static void InitDefaultsCMsgBotWorldState_Action_Chat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_Chat_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_Chat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_Chat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_Chat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_Chat}, {}};

static void InitDefaultsCMsgBotWorldState_Action_UseShrine() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_UseShrine_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_UseShrine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_UseShrine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_UseShrine =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_UseShrine}, {}};

static void InitDefaultsCMsgBotWorldState_Action_Courier() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_Courier_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_Courier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_Courier::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_Courier =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_Courier}, {}};

static void InitDefaultsCMsgBotWorldState_Action_GetActualIncomingDamage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_GetActualIncomingDamage_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_GetActualIncomingDamage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_GetActualIncomingDamage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_GetActualIncomingDamage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_GetActualIncomingDamage}, {}};

static void InitDefaultsCMsgBotWorldState_Action_GetEstimatedDamageToTarget() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_GetEstimatedDamageToTarget_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_GetEstimatedDamageToTarget =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_GetEstimatedDamageToTarget}, {}};

static void InitDefaultsCMsgBotWorldState_Action_Glyph() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_Glyph_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_Glyph();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_Glyph::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_Glyph =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_Glyph}, {}};

static void InitDefaultsCMsgBotWorldState_Action_SoftReset() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_SoftReset_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_SoftReset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_SoftReset::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_SoftReset =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_SoftReset}, {}};

static void InitDefaultsCMsgBotWorldState_Action_Buyback() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_Buyback_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_Buyback();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_Buyback::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_Buyback =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_Buyback}, {}};

static void InitDefaultsCMsgBotWorldState_Action_ScriptingDebugDrawText() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_ScriptingDebugDrawText_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_ScriptingDebugDrawText();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_ScriptingDebugDrawText::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawText =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgBotWorldState_Action_ScriptingDebugDrawText}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base,}};

static void InitDefaultsCMsgBotWorldState_Action_ScriptingDebugDrawLine() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_ScriptingDebugDrawLine_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_ScriptingDebugDrawLine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_ScriptingDebugDrawLine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawLine =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgBotWorldState_Action_ScriptingDebugDrawLine}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base,}};

static void InitDefaultsCMsgBotWorldState_Action_ScriptingDebugDrawScreenText() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_ScriptingDebugDrawScreenText_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawScreenText =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_ScriptingDebugDrawScreenText}, {}};

static void InitDefaultsCMsgBotWorldState_Action_ScriptingDebugScreenTextPretty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_ScriptingDebugScreenTextPretty}, {}};

static void InitDefaultsCMsgBotWorldState_Action_ScriptingDebugDrawBox() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_ScriptingDebugDrawBox_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_ScriptingDebugDrawBox();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_ScriptingDebugDrawBox::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawBox =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgBotWorldState_Action_ScriptingDebugDrawBox}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base,}};

static void InitDefaultsCMsgBotWorldState_Action_ScriptingDebugDrawCircle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_ScriptingDebugDrawCircle_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawCircle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgBotWorldState_Action_ScriptingDebugDrawCircle}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base,}};

static void InitDefaultsCMsgBotWorldState_Action_ScriptingDebugDrawClear() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_ScriptingDebugDrawClear_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_ScriptingDebugDrawClear();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_ScriptingDebugDrawClear::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawClear =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_ScriptingDebugDrawClear}, {}};

static void InitDefaultsCMsgBotWorldState_Action_OceanWinGame() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_OceanWinGame_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_OceanWinGame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_OceanWinGame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_OceanWinGame =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_OceanWinGame}, {}};

static void InitDefaultsCMsgBotWorldState_Action_OceanReplayCorrectTime() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_OceanReplayCorrectTime_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action_OceanReplayCorrectTime();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action_OceanReplayCorrectTime::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBotWorldState_Action_OceanReplayCorrectTime =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBotWorldState_Action_OceanReplayCorrectTime}, {}};

static void InitDefaultsCMsgBotWorldState_Action() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_Action_default_instance_;
    new (ptr) ::CMsgBotWorldState_Action();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState_Action::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<37> scc_info_CMsgBotWorldState_Action =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 37, InitDefaultsCMsgBotWorldState_Action}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_MoveToLocation.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_MoveToTarget.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_AttackMove.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_AttackTarget.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_CastLocation.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_CastTarget.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_CastTree.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_Cast.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_CastToggle.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_HoldLocation.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_TrainAbility.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_DropItem.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_PickUpItem.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_PickupRune.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_PurchaseItem.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_SellItem.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_DisassembleItem.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_SetCombineLockItem.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_Stop.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_Chat.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_SwapItems.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_UseShrine.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_Courier.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_GetActualIncomingDamage.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_GetEstimatedDamageToTarget.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_Glyph.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_SoftReset.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_Buyback.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawText.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawLine.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawScreenText.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawBox.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawCircle.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawClear.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_OceanWinGame.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_OceanReplayCorrectTime.base,}};

static void InitDefaultsCMsgBotWorldState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgBotWorldState_default_instance_;
    new (ptr) ::CMsgBotWorldState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgBotWorldState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<13> scc_info_CMsgBotWorldState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 13, InitDefaultsCMsgBotWorldState}, {
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Player.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Unit.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_DroppedItem.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_RuneInfo.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_TeleportInfo.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_LinearProjectile.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_AvoidanceZone.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Courier.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_EventAbility.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_EventDamage.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_EventCourierKilled.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_EventRoshanKilled.base,
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_EventTree.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Vector.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Player.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Ability.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_DroppedItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_RuneInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_TeleportInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Modifier.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_LinearProjectile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_TrackingProjectile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_AvoidanceZone.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Courier.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_EventAbility.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_EventDamage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_EventCourierKilled.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_EventRoshanKilled.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_EventTree.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Unit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Actions_OceanAnnotation_Hero.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Actions_OceanAnnotation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Actions_Header.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Actions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_MoveToLocation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_MoveToTarget.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_AttackMove.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_AttackTarget.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_HoldLocation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_Stop.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_CastLocation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_CastTarget.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_CastTree.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_Cast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_CastToggle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_TrainAbility.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_DropItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_PickUpItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_PurchaseItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_SellItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_SwapItems.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_DisassembleItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_SetCombineLockItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_PickupRune.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_Chat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_UseShrine.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_Courier.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_GetActualIncomingDamage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_GetEstimatedDamageToTarget.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_Glyph.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_SoftReset.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_Buyback.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawText.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawLine.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawScreenText.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawBox.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawCircle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawClear.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_OceanWinGame.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action_OceanReplayCorrectTime.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState_Action.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBotWorldState.base);
}

::google::protobuf::Metadata file_level_metadata[60];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Vector, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Vector, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Vector, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Vector, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Vector, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Player, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Player, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Player, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Player, hero_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Player, is_alive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Player, respawn_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Player, kills_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Player, deaths_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Player, assists_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Player, team_id_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, ability_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, caster_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, cast_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, channel_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, cooldown_remaining_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, is_activated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, is_toggled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, is_in_ability_phase_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, is_channeling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, is_stolen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, is_fully_castable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, charges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, secondary_charges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, is_combined_locked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Ability, power_treads_stat_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  15,
  16,
  14,
  17,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_DroppedItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_DroppedItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_DroppedItem, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_DroppedItem, location_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_RuneInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_RuneInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_RuneInfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_RuneInfo, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_RuneInfo, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_RuneInfo, time_since_seen_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_TeleportInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_TeleportInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_TeleportInfo, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_TeleportInfo, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_TeleportInfo, time_remaining_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Modifier, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Modifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Modifier, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Modifier, stack_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Modifier, ability_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Modifier, ability_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Modifier, remaining_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Modifier, auxiliary_units_handles_),
  0,
  1,
  2,
  3,
  4,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_LinearProjectile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_LinearProjectile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_LinearProjectile, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_LinearProjectile, caster_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_LinearProjectile, caster_unit_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_LinearProjectile, caster_player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_LinearProjectile, ability_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_LinearProjectile, ability_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_LinearProjectile, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_LinearProjectile, velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_LinearProjectile, radius_),
  2,
  3,
  8,
  4,
  5,
  6,
  0,
  1,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_TrackingProjectile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_TrackingProjectile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_TrackingProjectile, caster_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_TrackingProjectile, caster_unit_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_TrackingProjectile, caster_player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_TrackingProjectile, ability_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_TrackingProjectile, ability_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_TrackingProjectile, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_TrackingProjectile, velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_TrackingProjectile, is_dodgeable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_TrackingProjectile, is_attack_),
  1,
  8,
  2,
  3,
  4,
  0,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_AvoidanceZone, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_AvoidanceZone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_AvoidanceZone, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_AvoidanceZone, caster_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_AvoidanceZone, caster_unit_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_AvoidanceZone, caster_player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_AvoidanceZone, ability_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_AvoidanceZone, ability_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_AvoidanceZone, radius_),
  0,
  1,
  6,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Courier, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Courier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Courier, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Courier, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Courier, player_id_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventAbility, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventAbility, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventAbility, ability_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventAbility, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventAbility, unit_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventAbility, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventAbility, is_channel_start_),
  1,
  2,
  3,
  0,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventDamage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventDamage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventDamage, damage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventDamage, victim_player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventDamage, victim_unit_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventDamage, attacker_player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventDamage, attacker_unit_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventDamage, ability_id_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventCourierKilled, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventCourierKilled, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventCourierKilled, team_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventCourierKilled, courier_unit_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventCourierKilled, killer_player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventCourierKilled, killer_unit_handle_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventRoshanKilled, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventRoshanKilled, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventRoshanKilled, killer_player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventRoshanKilled, killer_unit_handle_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventTree, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventTree, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventTree, tree_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventTree, destroyed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventTree, respawned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventTree, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_EventTree, delayed_),
  1,
  2,
  3,
  0,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, unit_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, team_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_alive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, bounding_radius_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, facing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, ground_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, vision_range_daytime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, vision_range_nighttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, health_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, health_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, health_regen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, mana_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, mana_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, mana_regen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, base_movement_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, current_movement_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, anim_activity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, anim_cycle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, base_damage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, base_damage_variance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, bonus_damage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, attack_damage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, attack_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, attack_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, attack_anim_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, attack_acquisition_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, attack_projectile_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, attack_target_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, attack_target_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, attacks_per_second_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, last_attack_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, bounty_xp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, bounty_gold_min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, bounty_gold_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_channeling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, active_ability_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_attack_immune_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_blind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_block_disabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_disarmed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_dominated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_evade_disabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_hexed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_invisible_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_invulnerable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_magic_immune_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_muted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_nightmared_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_rooted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_silenced_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_specially_deniable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_stunned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_unable_to_miss_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, has_scepter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, abilities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, modifiers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, incoming_tracking_projectiles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, action_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, ability_target_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, ability_target_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_using_ability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, primary_attribute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_illusion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, respawn_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, buyback_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, buyback_cooldown_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, spell_amplification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, armor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, magic_resist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, evasion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, xp_needed_to_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, ability_points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, reliable_gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, unreliable_gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, last_hits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, denies_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, net_worth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, strength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, agility_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, intelligence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, remaining_lifespan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, flying_courier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, shrine_cooldown_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Unit, is_shrine_healing_),
  4,
  5,
  0,
  6,
  7,
  3,
  34,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  32,
  33,
  1,
  82,
  83,
  38,
  39,
  40,
  35,
  41,
  36,
  37,
  42,
  43,
  44,
  45,
  46,
  47,
  48,
  49,
  50,
  51,
  52,
  53,
  54,
  55,
  56,
  57,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  58,
  59,
  2,
  73,
  60,
  74,
  61,
  62,
  63,
  64,
  65,
  66,
  67,
  68,
  69,
  84,
  85,
  70,
  71,
  72,
  77,
  78,
  79,
  80,
  75,
  81,
  76,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_OceanAnnotation_Hero, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_OceanAnnotation_Hero, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_OceanAnnotation_Hero, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_OceanAnnotation_Hero, valuefunction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_OceanAnnotation_Hero, actionlogp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_OceanAnnotation_Hero, reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_OceanAnnotation_Hero, internalaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_OceanAnnotation_Hero, actionname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_OceanAnnotation_Hero, detailedstats_),
  2,
  3,
  4,
  5,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_OceanAnnotation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_OceanAnnotation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_OceanAnnotation, heroes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_OceanAnnotation, agentid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_OceanAnnotation, rewards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_OceanAnnotation, reward_names_),
  ~0u,
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_Header, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_Header, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_Header, starttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions_Header, name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions, dota_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions, actions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions, extradata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions, oceanannotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Actions, header_),
  3,
  ~0u,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_MoveToLocation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_MoveToLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_MoveToLocation, units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_MoveToLocation, location_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_MoveToTarget, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_MoveToTarget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_MoveToTarget, units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_MoveToTarget, target_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_AttackMove, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_AttackMove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_AttackMove, units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_AttackMove, location_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_AttackTarget, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_AttackTarget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_AttackTarget, units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_AttackTarget, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_AttackTarget, once_),
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_HoldLocation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_HoldLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_HoldLocation, units_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Stop, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Stop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Stop, units_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastLocation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastLocation, units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastLocation, abilityslot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastLocation, location_),
  ~0u,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastTarget, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastTarget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastTarget, units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastTarget, abilityslot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastTarget, target_),
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastTree, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastTree, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastTree, units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastTree, abilityslot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastTree, tree_),
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Cast, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Cast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Cast, units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Cast, abilityslot_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastToggle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastToggle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastToggle, units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_CastToggle, abilityslot_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_TrainAbility, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_TrainAbility, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_TrainAbility, ability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_TrainAbility, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_TrainAbility, unit_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_DropItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_DropItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_DropItem, unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_DropItem, slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_DropItem, location_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_PickUpItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_PickUpItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_PickUpItem, unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_PickUpItem, itemid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_PurchaseItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_PurchaseItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_PurchaseItem, item_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_PurchaseItem, item_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_PurchaseItem, unit_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_SellItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_SellItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_SellItem, item_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_SellItem, slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_SellItem, unit_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_SwapItems, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_SwapItems, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_SwapItems, slot_a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_SwapItems, slot_b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_SwapItems, unit_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_DisassembleItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_DisassembleItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_DisassembleItem, slot_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_SetCombineLockItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_SetCombineLockItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_SetCombineLockItem, slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_SetCombineLockItem, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_PickupRune, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_PickupRune, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_PickupRune, units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_PickupRune, rune_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Chat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Chat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Chat, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Chat, to_allchat_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_UseShrine, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_UseShrine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_UseShrine, units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_UseShrine, shrine_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Courier, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Courier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Courier, unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Courier, courier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Courier, action_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_GetActualIncomingDamage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_GetActualIncomingDamage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_GetActualIncomingDamage, unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_GetActualIncomingDamage, ndamage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_GetActualIncomingDamage, ndamagetype_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_GetEstimatedDamageToTarget, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_GetEstimatedDamageToTarget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_GetEstimatedDamageToTarget, unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_GetEstimatedDamageToTarget, bcurrentlyavailable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_GetEstimatedDamageToTarget, htarget_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_GetEstimatedDamageToTarget, fduration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_GetEstimatedDamageToTarget, ndamagetypes_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Glyph, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Glyph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Glyph, unit_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_SoftReset, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_SoftReset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_SoftReset, minigameconfig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_SoftReset, snapshotdata_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Buyback, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Buyback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_Buyback, unit_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawText, origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawText, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawText, bviewcheck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawText, duration_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawLine, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawLine, origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawLine, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawLine, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawLine, g_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawLine, b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawLine, ztest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawLine, duration_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText, lineoffset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText, g_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText, b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText, duration_),
  1,
  2,
  3,
  0,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty, lineoffset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty, g_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty, b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty, font_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty, bbold_),
  2,
  3,
  4,
  0,
  5,
  6,
  7,
  8,
  9,
  1,
  10,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawBox, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawBox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawBox, origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawBox, minimum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawBox, maximum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawBox, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawBox, g_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawBox, b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawBox, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawBox, duration_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawCircle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawCircle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawCircle, center_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawCircle, vrgb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawCircle, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawCircle, rad_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawCircle, ztest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawCircle, duration_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawClear, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_ScriptingDebugDrawClear, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_OceanWinGame, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_OceanWinGame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_OceanWinGame, team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_OceanWinGame, reward_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_OceanReplayCorrectTime, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_OceanReplayCorrectTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action_OceanReplayCorrectTime, delta_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action, actiontype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action, player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action, actionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action, actiondelay_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, movetolocation_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, movetotarget_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, attackmove_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, attacktarget_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, castlocation_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, casttarget_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, casttree_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, cast_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, casttoggle_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, holdlocation_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, trainability_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, dropitem_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, pickupitem_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, pickuprune_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, purchaseitem_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, sellitem_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, disassembleitem_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, setcombinelockitem_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, stop_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, chat_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, swapitems_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, useshrine_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, courier_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, getactualincomingdamage_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, getestimateddamagetotarget_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, glyph_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, softreset_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, buyback_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, scriptingdebugdrawtext_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, scriptingdebugdrawline_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, scriptingdebugdrawscreentext_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, scriptingdebugdrawbox_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, scriptingdebugdrawcircle_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, scriptingdebugdrawclear_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, scriptingdebugscreentextpretty_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, movedirectly_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, oceanwingame_),
  offsetof(::CMsgBotWorldState_ActionDefaultTypeInternal, oceanreplaycorrecttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState_Action, ActionData_),
  0,
  2,
  3,
  1,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, team_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, game_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, dota_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, game_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, hero_pick_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, time_of_day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, glyph_cooldown_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, glyph_cooldown_enemy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, players_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, dropped_items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, rune_infos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, incoming_teleports_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, linear_projectiles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, avoidance_zones_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, couriers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, ability_events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, damage_events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, courier_killed_events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, roshan_killed_events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgBotWorldState, tree_events_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::CMsgBotWorldState_Vector)},
  { 11, 24, sizeof(::CMsgBotWorldState_Player)},
  { 32, 55, sizeof(::CMsgBotWorldState_Ability)},
  { 73, 80, sizeof(::CMsgBotWorldState_DroppedItem)},
  { 82, 91, sizeof(::CMsgBotWorldState_RuneInfo)},
  { 95, 103, sizeof(::CMsgBotWorldState_TeleportInfo)},
  { 106, 117, sizeof(::CMsgBotWorldState_Modifier)},
  { 123, 137, sizeof(::CMsgBotWorldState_LinearProjectile)},
  { 146, 160, sizeof(::CMsgBotWorldState_TrackingProjectile)},
  { 169, 181, sizeof(::CMsgBotWorldState_AvoidanceZone)},
  { 188, 196, sizeof(::CMsgBotWorldState_Courier)},
  { 199, 209, sizeof(::CMsgBotWorldState_EventAbility)},
  { 214, 225, sizeof(::CMsgBotWorldState_EventDamage)},
  { 231, 240, sizeof(::CMsgBotWorldState_EventCourierKilled)},
  { 244, 251, sizeof(::CMsgBotWorldState_EventRoshanKilled)},
  { 253, 263, sizeof(::CMsgBotWorldState_EventTree)},
  { 268, 363, sizeof(::CMsgBotWorldState_Unit)},
  { 453, 465, sizeof(::CMsgBotWorldState_Actions_OceanAnnotation_Hero)},
  { 472, 481, sizeof(::CMsgBotWorldState_Actions_OceanAnnotation)},
  { 485, 492, sizeof(::CMsgBotWorldState_Actions_Header)},
  { 494, 504, sizeof(::CMsgBotWorldState_Actions)},
  { 509, 516, sizeof(::CMsgBotWorldState_Action_MoveToLocation)},
  { 518, 525, sizeof(::CMsgBotWorldState_Action_MoveToTarget)},
  { 527, 534, sizeof(::CMsgBotWorldState_Action_AttackMove)},
  { 536, 544, sizeof(::CMsgBotWorldState_Action_AttackTarget)},
  { 547, 553, sizeof(::CMsgBotWorldState_Action_HoldLocation)},
  { 554, 560, sizeof(::CMsgBotWorldState_Action_Stop)},
  { 561, 569, sizeof(::CMsgBotWorldState_Action_CastLocation)},
  { 572, 580, sizeof(::CMsgBotWorldState_Action_CastTarget)},
  { 583, 591, sizeof(::CMsgBotWorldState_Action_CastTree)},
  { 594, 601, sizeof(::CMsgBotWorldState_Action_Cast)},
  { 603, 610, sizeof(::CMsgBotWorldState_Action_CastToggle)},
  { 612, 620, sizeof(::CMsgBotWorldState_Action_TrainAbility)},
  { 623, 631, sizeof(::CMsgBotWorldState_Action_DropItem)},
  { 634, 641, sizeof(::CMsgBotWorldState_Action_PickUpItem)},
  { 643, 651, sizeof(::CMsgBotWorldState_Action_PurchaseItem)},
  { 654, 662, sizeof(::CMsgBotWorldState_Action_SellItem)},
  { 665, 673, sizeof(::CMsgBotWorldState_Action_SwapItems)},
  { 676, 682, sizeof(::CMsgBotWorldState_Action_DisassembleItem)},
  { 683, 690, sizeof(::CMsgBotWorldState_Action_SetCombineLockItem)},
  { 692, 699, sizeof(::CMsgBotWorldState_Action_PickupRune)},
  { 701, 708, sizeof(::CMsgBotWorldState_Action_Chat)},
  { 710, 717, sizeof(::CMsgBotWorldState_Action_UseShrine)},
  { 719, 727, sizeof(::CMsgBotWorldState_Action_Courier)},
  { 730, 738, sizeof(::CMsgBotWorldState_Action_GetActualIncomingDamage)},
  { 741, 751, sizeof(::CMsgBotWorldState_Action_GetEstimatedDamageToTarget)},
  { 756, 762, sizeof(::CMsgBotWorldState_Action_Glyph)},
  { 763, 770, sizeof(::CMsgBotWorldState_Action_SoftReset)},
  { 772, 778, sizeof(::CMsgBotWorldState_Action_Buyback)},
  { 779, 788, sizeof(::CMsgBotWorldState_Action_ScriptingDebugDrawText)},
  { 792, 804, sizeof(::CMsgBotWorldState_Action_ScriptingDebugDrawLine)},
  { 811, 825, sizeof(::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText)},
  { 834, 851, sizeof(::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty)},
  { 863, 876, sizeof(::CMsgBotWorldState_Action_ScriptingDebugDrawBox)},
  { 884, 895, sizeof(::CMsgBotWorldState_Action_ScriptingDebugDrawCircle)},
  { 901, 906, sizeof(::CMsgBotWorldState_Action_ScriptingDebugDrawClear)},
  { 906, 913, sizeof(::CMsgBotWorldState_Action_OceanWinGame)},
  { 915, 921, sizeof(::CMsgBotWorldState_Action_OceanReplayCorrectTime)},
  { 922, 970, sizeof(::CMsgBotWorldState_Action)},
  { 1012, 1038, sizeof(::CMsgBotWorldState)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Vector_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Player_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Ability_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_DroppedItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_RuneInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_TeleportInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Modifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_LinearProjectile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_TrackingProjectile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_AvoidanceZone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Courier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_EventAbility_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_EventDamage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_EventCourierKilled_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_EventRoshanKilled_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_EventTree_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Unit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Actions_OceanAnnotation_Hero_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Actions_OceanAnnotation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Actions_Header_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Actions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_MoveToLocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_MoveToTarget_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_AttackMove_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_AttackTarget_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_HoldLocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_Stop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_CastLocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_CastTarget_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_CastTree_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_Cast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_CastToggle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_TrainAbility_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_DropItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_PickUpItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_PurchaseItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_SellItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_SwapItems_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_DisassembleItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_SetCombineLockItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_PickupRune_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_Chat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_UseShrine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_Courier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_GetActualIncomingDamage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_GetEstimatedDamageToTarget_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_Glyph_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_SoftReset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_Buyback_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_ScriptingDebugDrawText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_ScriptingDebugDrawLine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_ScriptingDebugDrawScreenText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_ScriptingDebugDrawBox_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_ScriptingDebugDrawCircle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_ScriptingDebugDrawClear_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_OceanWinGame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_OceanReplayCorrectTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_Action_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgBotWorldState_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "dota_gcmessages_common_bot_script.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 60);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\'dota_gcmessages_common_bot_script.prot"
      "o\"\345m\n\021CMsgBotWorldState\022\017\n\007team_id\030\001 \001(\r"
      "\022\021\n\tgame_time\030\002 \001(\002\022\021\n\tdota_time\030\003 \001(\002\022\022"
      "\n\ngame_state\030\004 \001(\r\022\027\n\017hero_pick_state\030\005 "
      "\001(\r\022\023\n\013time_of_day\030\006 \001(\002\022\026\n\016glyph_cooldo"
      "wn\030\007 \001(\002\022\034\n\024glyph_cooldown_enemy\030\010 \001(\r\022*"
      "\n\007players\030\n \003(\0132\031.CMsgBotWorldState.Play"
      "er\022&\n\005units\030\013 \003(\0132\027.CMsgBotWorldState.Un"
      "it\0225\n\rdropped_items\030\014 \003(\0132\036.CMsgBotWorld"
      "State.DroppedItem\022/\n\nrune_infos\030\r \003(\0132\033."
      "CMsgBotWorldState.RuneInfo\022;\n\022incoming_t"
      "eleports\030\016 \003(\0132\037.CMsgBotWorldState.Telep"
      "ortInfo\022\?\n\022linear_projectiles\030\017 \003(\0132#.CM"
      "sgBotWorldState.LinearProjectile\0229\n\017avoi"
      "dance_zones\030\020 \003(\0132 .CMsgBotWorldState.Av"
      "oidanceZone\022,\n\010couriers\030\021 \003(\0132\032.CMsgBotW"
      "orldState.Courier\0227\n\016ability_events\030\024 \003("
      "\0132\037.CMsgBotWorldState.EventAbility\0225\n\rda"
      "mage_events\030\025 \003(\0132\036.CMsgBotWorldState.Ev"
      "entDamage\022D\n\025courier_killed_events\030\026 \003(\013"
      "2%.CMsgBotWorldState.EventCourierKilled\022"
      "B\n\024roshan_killed_events\030\027 \003(\0132$.CMsgBotW"
      "orldState.EventRoshanKilled\0221\n\013tree_even"
      "ts\030\030 \003(\0132\034.CMsgBotWorldState.EventTree\032)"
      "\n\006Vector\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030\002 \002(\002\022\t\n\001z\030\003 \002("
      "\002\032\225\001\n\006Player\022\021\n\tplayer_id\030\001 \001(\005\022\017\n\007hero_"
      "id\030\002 \001(\r\022\020\n\010is_alive\030\003 \001(\010\022\024\n\014respawn_ti"
      "me\030\004 \001(\002\022\r\n\005kills\030\005 \001(\r\022\016\n\006deaths\030\006 \001(\r\022"
      "\017\n\007assists\030\007 \001(\r\022\017\n\007team_id\030\010 \001(\r\032\235\003\n\007Ab"
      "ility\022\016\n\006handle\030\001 \001(\r\022\022\n\nability_id\030\002 \001("
      "\r\022\014\n\004slot\030\003 \001(\r\022\025\n\rcaster_handle\030\005 \001(\r\022\r"
      "\n\005level\030\006 \001(\r\022\022\n\ncast_range\030\n \001(\r\022\024\n\014cha"
      "nnel_time\030\013 \001(\002\022\035\n\022cooldown_remaining\030\014 "
      "\001(\002:\0010\022\024\n\014is_activated\030\024 \001(\010\022\022\n\nis_toggl"
      "ed\030\025 \001(\010\022\033\n\023is_in_ability_phase\030\026 \001(\010\022\025\n"
      "\ris_channeling\030\027 \001(\010\022\021\n\tis_stolen\030\030 \001(\010\022"
      "\031\n\021is_fully_castable\030\031 \001(\010\022\017\n\007charges\030\036 "
      "\001(\r\022\031\n\021secondary_charges\030\037 \001(\r\022\032\n\022is_com"
      "bined_locked\030( \001(\010\022\035\n\021power_treads_stat\030"
      "2 \001(\005:\002-1\032K\n\013DroppedItem\022\017\n\007item_id\030\001 \001("
      "\r\022+\n\010location\030\002 \001(\0132\031.CMsgBotWorldState."
      "Vector\032n\n\010RuneInfo\022\014\n\004type\030\001 \001(\005\022+\n\010loca"
      "tion\030\002 \001(\0132\031.CMsgBotWorldState.Vector\022\016\n"
      "\006status\030\003 \001(\r\022\027\n\017time_since_seen\030\004 \001(\002\032f"
      "\n\014TeleportInfo\022\021\n\tplayer_id\030\001 \001(\005\022+\n\010loc"
      "ation\030\002 \001(\0132\031.CMsgBotWorldState.Vector\022\026"
      "\n\016time_remaining\030\003 \001(\002\032\226\001\n\010Modifier\022\014\n\004n"
      "ame\030\001 \001(\t\022\023\n\013stack_count\030\002 \001(\r\022\026\n\016abilit"
      "y_handle\030\003 \001(\r\022\022\n\nability_id\030\004 \001(\r\022\032\n\022re"
      "maining_duration\030\005 \001(\002\022\037\n\027auxiliary_unit"
      "s_handles\030\006 \003(\r\032\251\002\n\020LinearProjectile\022\016\n\006"
      "handle\030\001 \001(\r\022\025\n\rcaster_handle\030\002 \001(\r\022>\n\020c"
      "aster_unit_type\030\t \001(\0162\033.CMsgBotWorldStat"
      "e.UnitType:\007INVALID\022\030\n\020caster_player_id\030"
      "\003 \001(\005\022\026\n\016ability_handle\030\004 \001(\r\022\022\n\nability"
      "_id\030\005 \001(\r\022+\n\010location\030\006 \001(\0132\031.CMsgBotWor"
      "ldState.Vector\022+\n\010velocity\030\007 \001(\0132\031.CMsgB"
      "otWorldState.Vector\022\016\n\006radius\030\010 \001(\r\032\231\002\n\022"
      "TrackingProjectile\022\025\n\rcaster_handle\030\001 \001("
      "\r\022>\n\020caster_unit_type\030\t \001(\0162\033.CMsgBotWor"
      "ldState.UnitType:\007INVALID\022\030\n\020caster_play"
      "er_id\030\002 \001(\005\022\026\n\016ability_handle\030\003 \001(\r\022\022\n\na"
      "bility_id\030\004 \001(\r\022+\n\010location\030\005 \001(\0132\031.CMsg"
      "BotWorldState.Vector\022\020\n\010velocity\030\006 \001(\r\022\024"
      "\n\014is_dodgeable\030\007 \001(\010\022\021\n\tis_attack\030\010 \001(\010\032"
      "\351\001\n\rAvoidanceZone\022+\n\010location\030\001 \001(\0132\031.CM"
      "sgBotWorldState.Vector\022\025\n\rcaster_handle\030"
      "\002 \001(\r\022>\n\020caster_unit_type\030\007 \001(\0162\033.CMsgBo"
      "tWorldState.UnitType:\007INVALID\022\030\n\020caster_"
      "player_id\030\003 \001(\005\022\026\n\016ability_handle\030\004 \001(\r\022"
      "\022\n\nability_id\030\005 \001(\r\022\016\n\006radius\030\006 \001(\r\032p\n\007C"
      "ourier\022\016\n\006handle\030\001 \001(\r\022B\n\005state\030\002 \001(\0162\037."
      "CMsgBotWorldState.CourierState:\022COURIER_"
      "STATE_INIT\022\021\n\tplayer_id\030\003 \001(\005\032\221\001\n\014EventA"
      "bility\022\022\n\nability_id\030\001 \001(\r\022\021\n\tplayer_id\030"
      "\002 \001(\005\022\023\n\013unit_handle\030\003 \001(\r\022+\n\010location\030\004"
      " \001(\0132\031.CMsgBotWorldState.Vector\022\030\n\020is_ch"
      "annel_start\030\005 \001(\010\032\241\001\n\013EventDamage\022\016\n\006dam"
      "age\030\001 \001(\r\022\030\n\020victim_player_id\030\002 \001(\005\022\032\n\022v"
      "ictim_unit_handle\030\003 \001(\r\022\032\n\022attacker_play"
      "er_id\030\004 \001(\005\022\034\n\024attacker_unit_handle\030\005 \001("
      "\r\022\022\n\nability_id\030\006 \001(\r\032x\n\022EventCourierKil"
      "led\022\017\n\007team_id\030\001 \001(\r\022\033\n\023courier_unit_han"
      "dle\030\002 \001(\r\022\030\n\020killer_player_id\030\003 \001(\005\022\032\n\022k"
      "iller_unit_handle\030\004 \001(\r\032I\n\021EventRoshanKi"
      "lled\022\030\n\020killer_player_id\030\001 \001(\005\022\032\n\022killer"
      "_unit_handle\030\002 \001(\r\032\200\001\n\tEventTree\022\017\n\007tree"
      "_id\030\001 \001(\r\022\021\n\tdestroyed\030\002 \001(\010\022\021\n\trespawne"
      "d\030\003 \001(\010\022+\n\010location\030\004 \001(\0132\031.CMsgBotWorld"
      "State.Vector\022\017\n\007delayed\030\005 \001(\010\032\360\021\n\004Unit\022\016"
      "\n\006handle\030\001 \001(\r\0227\n\tunit_type\030\002 \001(\0162\033.CMsg"
      "BotWorldState.UnitType:\007INVALID\022\014\n\004name\030"
      "\003 \001(\t\022\017\n\007team_id\030\004 \001(\r\022\r\n\005level\030\005 \001(\r\022+\n"
      "\010location\030\006 \001(\0132\031.CMsgBotWorldState.Vect"
      "or\022\020\n\010is_alive\030\007 \001(\010\022\021\n\tplayer_id\030\010 \001(\005\022"
      "\027\n\017bounding_radius\030\n \001(\005\022\016\n\006facing\030\013 \001(\005"
      "\022\025\n\rground_height\030\014 \001(\r\022\034\n\024vision_range_"
      "daytime\030\017 \001(\r\022\036\n\026vision_range_nighttime\030"
      "\020 \001(\r\022\016\n\006health\030\024 \001(\005\022\022\n\nhealth_max\030\025 \001("
      "\005\022\024\n\014health_regen\030\026 \001(\002\022\014\n\004mana\030\031 \001(\005\022\020\n"
      "\010mana_max\030\032 \001(\005\022\022\n\nmana_regen\030\033 \001(\002\022\033\n\023b"
      "ase_movement_speed\030\036 \001(\005\022\036\n\026current_move"
      "ment_speed\030\037 \001(\005\022\025\n\ranim_activity\030# \001(\005\022"
      "\022\n\nanim_cycle\030$ \001(\002\022\023\n\013base_damage\030( \001(\005"
      "\022\034\n\024base_damage_variance\030) \001(\005\022\024\n\014bonus_"
      "damage\030* \001(\005\022\025\n\rattack_damage\030+ \001(\005\022\024\n\014a"
      "ttack_range\030, \001(\005\022\024\n\014attack_speed\030- \001(\002\022"
      "\031\n\021attack_anim_point\030. \001(\002\022 \n\030attack_acq"
      "uisition_range\030/ \001(\005\022\037\n\027attack_projectil"
      "e_speed\0300 \001(\005\022\034\n\024attack_target_handle\0301 "
      "\001(\r\022\032\n\022attack_target_name\0304 \001(\t\022\036\n\022attac"
      "ks_per_second\0302 \001(\005:\002-1\022\034\n\020last_attack_t"
      "ime\0303 \001(\002:\002-1\022\021\n\tbounty_xp\030< \001(\r\022\027\n\017boun"
      "ty_gold_min\030= \001(\r\022\027\n\017bounty_gold_max\030> \001"
      "(\r\022\025\n\ris_channeling\030A \001(\010\022\035\n\025active_abil"
      "ity_handle\030B \001(\r\022\030\n\020is_attack_immune\030F \001"
      "(\010\022\020\n\010is_blind\030G \001(\010\022\031\n\021is_block_disable"
      "d\030H \001(\010\022\023\n\013is_disarmed\030I \001(\010\022\024\n\014is_domin"
      "ated\030J \001(\010\022\031\n\021is_evade_disabled\030K \001(\010\022\020\n"
      "\010is_hexed\030L \001(\010\022\024\n\014is_invisible\030M \001(\010\022\027\n"
      "\017is_invulnerable\030N \001(\010\022\027\n\017is_magic_immun"
      "e\030O \001(\010\022\020\n\010is_muted\030P \001(\010\022\025\n\ris_nightmar"
      "ed\030R \001(\010\022\021\n\tis_rooted\030S \001(\010\022\023\n\013is_silenc"
      "ed\030T \001(\010\022\035\n\025is_specially_deniable\030U \001(\010\022"
      "\022\n\nis_stunned\030V \001(\010\022\031\n\021is_unable_to_miss"
      "\030W \001(\010\022\023\n\013has_scepter\030X \001(\010\022-\n\tabilities"
      "\030Z \003(\0132\032.CMsgBotWorldState.Ability\022)\n\005it"
      "ems\030[ \003(\0132\032.CMsgBotWorldState.Ability\022.\n"
      "\tmodifiers\030\\ \003(\0132\033.CMsgBotWorldState.Mod"
      "ifier\022L\n\035incoming_tracking_projectiles\030]"
      " \003(\0132%.CMsgBotWorldState.TrackingProject"
      "ile\022\023\n\013action_type\030d \001(\r\022\035\n\025ability_targ"
      "et_handle\030e \001(\r\022\033\n\023ability_target_name\030g"
      " \001(\t\022\030\n\020is_using_ability\030f \001(\010\022\031\n\021primar"
      "y_attribute\030n \001(\r\022\023\n\013is_illusion\030o \001(\010\022\024"
      "\n\014respawn_time\030p \001(\002\022\024\n\014buyback_cost\030q \001"
      "(\r\022\030\n\020buyback_cooldown\030r \001(\002\022\033\n\023spell_am"
      "plification\030s \001(\002\022\r\n\005armor\030t \001(\002\022\024\n\014magi"
      "c_resist\030u \001(\002\022\017\n\007evasion\030v \001(\002\022\032\n\022xp_ne"
      "eded_to_level\030x \001(\r\022\026\n\016ability_points\030y "
      "\001(\r\022\031\n\rreliable_gold\030z \001(\005:\002-1\022\033\n\017unreli"
      "able_gold\030{ \001(\005:\002-1\022\021\n\tlast_hits\030| \001(\r\022\016"
      "\n\006denies\030} \001(\r\022\021\n\tnet_worth\030~ \001(\r\022\020\n\010str"
      "ength\030\177 \001(\r\022\020\n\007agility\030\200\001 \001(\r\022\025\n\014intelli"
      "gence\030\201\001 \001(\r\022\033\n\022remaining_lifespan\030\202\001 \001("
      "\002\022\027\n\016flying_courier\030\214\001 \001(\010\022\030\n\017shrine_coo"
      "ldown\030\226\001 \001(\002\022\032\n\021is_shrine_healing\030\227\001 \001(\010"
      "\032\252\004\n\007Actions\022\027\n\tdota_time\030\001 \001(\002:\004-100\022*\n"
      "\007actions\030\002 \003(\0132\031.CMsgBotWorldState.Actio"
      "n\022\021\n\textraData\030\003 \001(\t\022C\n\017oceanAnnotation\030"
      "\004 \001(\0132*.CMsgBotWorldState.Actions.OceanA"
      "nnotation\0221\n\006header\030\005 \001(\0132!.CMsgBotWorld"
      "State.Actions.Header\032\243\002\n\017OceanAnnotation"
      "\022\?\n\006heroes\030\001 \003(\0132/.CMsgBotWorldState.Act"
      "ions.OceanAnnotation.Hero\022\017\n\007agentID\030\005 \001"
      "(\t\022\017\n\007rewards\030\006 \003(\002\022\024\n\014reward_names\030\007 \003("
      "\t\032\226\001\n\004Hero\022\020\n\010playerID\030\001 \002(\005\022\025\n\rvalueFun"
      "ction\030\002 \001(\002\022\022\n\nactionLogp\030\003 \001(\002\022\016\n\006rewar"
      "d\030\004 \001(\002\022\026\n\016internalAction\030\005 \003(\005\022\022\n\nactio"
      "nName\030\006 \001(\t\022\025\n\rdetailedStats\030\007 \001(\014\032)\n\006He"
      "ader\022\021\n\tstartTime\030\001 \001(\002\022\014\n\004name\030\002 \001(\t\032\3238"
      "\n\006Action\022H\n\nactionType\030\001 \002(\0162\036.CMsgBotWo"
      "rldState.Action.Type:\024DOTA_UNIT_ORDER_NO"
      "NE\022\022\n\006player\030\002 \001(\005:\002-1\022\024\n\010actionID\030\004 \001(\005"
      ":\002-1\022\026\n\013actionDelay\030\n \001(\005:\0010\022B\n\016moveToLo"
      "cation\030e \001(\0132(.CMsgBotWorldState.Action."
      "MoveToLocationH\000\022>\n\014moveToTarget\030f \001(\0132&"
      ".CMsgBotWorldState.Action.MoveToTargetH\000"
      "\022:\n\nattackMove\030g \001(\0132$.CMsgBotWorldState"
      ".Action.AttackMoveH\000\022>\n\014attackTarget\030h \001"
      "(\0132&.CMsgBotWorldState.Action.AttackTarg"
      "etH\000\022>\n\014castLocation\030i \001(\0132&.CMsgBotWorl"
      "dState.Action.CastLocationH\000\022:\n\ncastTarg"
      "et\030j \001(\0132$.CMsgBotWorldState.Action.Cast"
      "TargetH\000\0226\n\010castTree\030k \001(\0132\".CMsgBotWorl"
      "dState.Action.CastTreeH\000\022.\n\004cast\030l \001(\0132\036"
      ".CMsgBotWorldState.Action.CastH\000\022:\n\ncast"
      "Toggle\030m \001(\0132$.CMsgBotWorldState.Action."
      "CastToggleH\000\022>\n\014holdLocation\030n \001(\0132&.CMs"
      "gBotWorldState.Action.HoldLocationH\000\022>\n\014"
      "trainAbility\030o \001(\0132&.CMsgBotWorldState.A"
      "ction.TrainAbilityH\000\0226\n\010dropItem\030p \001(\0132\""
      ".CMsgBotWorldState.Action.DropItemH\000\022:\n\n"
      "pickUpItem\030r \001(\0132$.CMsgBotWorldState.Act"
      "ion.PickUpItemH\000\022:\n\npickupRune\030s \001(\0132$.C"
      "MsgBotWorldState.Action.PickupRuneH\000\022>\n\014"
      "purchaseItem\030t \001(\0132&.CMsgBotWorldState.A"
      "ction.PurchaseItemH\000\0226\n\010sellItem\030u \001(\0132\""
      ".CMsgBotWorldState.Action.SellItemH\000\022D\n\017"
      "disassembleItem\030v \001(\0132).CMsgBotWorldStat"
      "e.Action.DisassembleItemH\000\022K\n\022setCombine"
      "LockItem\030\204\001 \001(\0132,.CMsgBotWorldState.Acti"
      "on.SetCombineLockItemH\000\022.\n\004stop\030y \001(\0132\036."
      "CMsgBotWorldState.Action.StopH\000\022/\n\004chat\030"
      "\214\001 \001(\0132\036.CMsgBotWorldState.Action.ChatH\000"
      "\0229\n\tswapItems\030\215\001 \001(\0132#.CMsgBotWorldState"
      ".Action.SwapItemsH\000\0229\n\tuseShrine\030\216\001 \001(\0132"
      "#.CMsgBotWorldState.Action.UseShrineH\000\0225"
      "\n\007courier\030\217\001 \001(\0132!.CMsgBotWorldState.Act"
      "ion.CourierH\000\022U\n\027getActualIncomingDamage"
      "\030\220\001 \001(\01321.CMsgBotWorldState.Action.GetAc"
      "tualIncomingDamageH\000\022[\n\032getEstimatedDama"
      "geToTarget\030\221\001 \001(\01324.CMsgBotWorldState.Ac"
      "tion.GetEstimatedDamageToTargetH\000\0221\n\005gly"
      "ph\030\222\001 \001(\0132\037.CMsgBotWorldState.Action.Gly"
      "phH\000\0229\n\tsoftReset\030\224\001 \001(\0132#.CMsgBotWorldS"
      "tate.Action.SoftResetH\000\0225\n\007buyback\030\225\001 \001("
      "\0132!.CMsgBotWorldState.Action.BuybackH\000\022S"
      "\n\026scriptingDebugDrawText\030\226\001 \001(\01320.CMsgBo"
      "tWorldState.Action.ScriptingDebugDrawTex"
      "tH\000\022S\n\026scriptingDebugDrawLine\030\227\001 \001(\01320.C"
      "MsgBotWorldState.Action.ScriptingDebugDr"
      "awLineH\000\022_\n\034scriptingDebugDrawScreenText"
      "\030\230\001 \001(\01326.CMsgBotWorldState.Action.Scrip"
      "tingDebugDrawScreenTextH\000\022Q\n\025scriptingDe"
      "bugDrawBox\030\231\001 \001(\0132/.CMsgBotWorldState.Ac"
      "tion.ScriptingDebugDrawBoxH\000\022W\n\030scriptin"
      "gDebugDrawCircle\030\232\001 \001(\01322.CMsgBotWorldSt"
      "ate.Action.ScriptingDebugDrawCircleH\000\022U\n"
      "\027scriptingDebugDrawClear\030\233\001 \001(\01321.CMsgBo"
      "tWorldState.Action.ScriptingDebugDrawCle"
      "arH\000\022c\n\036scriptingDebugScreenTextPretty\030\237"
      "\001 \001(\01328.CMsgBotWorldState.Action.Scripti"
      "ngDebugScreenTextPrettyH\000\022A\n\014moveDirectl"
      "y\030\234\001 \001(\0132(.CMsgBotWorldState.Action.Move"
      "ToLocationH\000\022\?\n\014oceanWinGame\030\235\001 \001(\0132&.CM"
      "sgBotWorldState.Action.OceanWinGameH\000\022S\n"
      "\026oceanReplayCorrectTime\030\236\001 \001(\01320.CMsgBot"
      "WorldState.Action.OceanReplayCorrectTime"
      "H\000\032L\n\016MoveToLocation\022\r\n\005units\030\001 \003(\005\022+\n\010l"
      "ocation\030\002 \002(\0132\031.CMsgBotWorldState.Vector"
      "\032-\n\014MoveToTarget\022\r\n\005units\030\001 \003(\005\022\016\n\006targe"
      "t\030\002 \002(\005\032H\n\nAttackMove\022\r\n\005units\030\001 \003(\005\022+\n\010"
      "location\030\002 \002(\0132\031.CMsgBotWorldState.Vecto"
      "r\032;\n\014AttackTarget\022\r\n\005units\030\001 \003(\005\022\016\n\006targ"
      "et\030\002 \002(\005\022\014\n\004once\030\003 \001(\010\032\035\n\014HoldLocation\022\r"
      "\n\005units\030\001 \003(\005\032\025\n\004Stop\022\r\n\005units\030\001 \003(\005\032_\n\014"
      "CastLocation\022\r\n\005units\030\001 \003(\005\022\023\n\013abilitySl"
      "ot\030\002 \002(\005\022+\n\010location\030\003 \002(\0132\031.CMsgBotWorl"
      "dState.Vector\032@\n\nCastTarget\022\r\n\005units\030\001 \003"
      "(\005\022\023\n\013abilitySlot\030\002 \002(\005\022\016\n\006target\030\003 \002(\005\032"
      "<\n\010CastTree\022\r\n\005units\030\001 \003(\005\022\023\n\013abilitySlo"
      "t\030\002 \002(\005\022\014\n\004tree\030\003 \002(\005\032*\n\004Cast\022\r\n\005units\030\001"
      " \003(\005\022\023\n\013abilitySlot\030\002 \002(\005\0320\n\nCastToggle\022"
      "\r\n\005units\030\001 \003(\005\022\023\n\013abilitySlot\030\002 \002(\005\032<\n\014T"
      "rainAbility\022\017\n\007ability\030\001 \002(\t\022\r\n\005level\030\002 "
      "\001(\005\022\014\n\004unit\030\003 \001(\005\032S\n\010DropItem\022\014\n\004unit\030\001 "
      "\001(\005\022\014\n\004slot\030\002 \001(\005\022+\n\010location\030\003 \001(\0132\031.CM"
      "sgBotWorldState.Vector\032*\n\nPickUpItem\022\014\n\004"
      "unit\030\001 \001(\005\022\016\n\006itemId\030\002 \001(\005\032=\n\014PurchaseIt"
      "em\022\014\n\004item\030\001 \001(\005\022\021\n\titem_name\030\002 \001(\t\022\014\n\004u"
      "nit\030\003 \001(\005\0324\n\010SellItem\022\014\n\004item\030\001 \001(\005\022\014\n\004s"
      "lot\030\002 \001(\005\022\014\n\004unit\030\003 \001(\005\0329\n\tSwapItems\022\016\n\006"
      "slot_a\030\001 \002(\005\022\016\n\006slot_b\030\002 \002(\005\022\014\n\004unit\030\003 \001"
      "(\005\032\037\n\017DisassembleItem\022\014\n\004slot\030\001 \002(\005\0321\n\022S"
      "etCombineLockItem\022\014\n\004slot\030\001 \002(\005\022\r\n\005value"
      "\030\002 \002(\010\032)\n\nPickupRune\022\r\n\005units\030\001 \003(\005\022\014\n\004r"
      "une\030\002 \002(\005\032+\n\004Chat\022\017\n\007message\030\001 \002(\t\022\022\n\nto"
      "_allchat\030\002 \002(\010\032*\n\tUseShrine\022\r\n\005units\030\001 \003"
      "(\005\022\016\n\006shrine\030\002 \002(\005\0328\n\007Courier\022\014\n\004unit\030\001 "
      "\002(\005\022\017\n\007courier\030\002 \002(\005\022\016\n\006action\030\003 \002(\005\032M\n\027"
      "GetActualIncomingDamage\022\014\n\004unit\030\001 \002(\005\022\017\n"
      "\007nDamage\030\002 \002(\002\022\023\n\013nDamageType\030\003 \002(\005\032\201\001\n\032"
      "GetEstimatedDamageToTarget\022\014\n\004unit\030\001 \002(\005"
      "\022\033\n\023bCurrentlyAvailable\030\002 \002(\010\022\017\n\007hTarget"
      "\030\003 \002(\005\022\021\n\tfDuration\030\004 \002(\002\022\024\n\014nDamageType"
      "s\030\005 \002(\005\032\025\n\005Glyph\022\014\n\004unit\030\001 \002(\005\0329\n\tSoftRe"
      "set\022\026\n\016minigameConfig\030\001 \001(\t\022\024\n\014snapshotD"
      "ata\030\002 \001(\t\032\027\n\007Buyback\022\014\n\004unit\030\001 \002(\005\032w\n\026Sc"
      "riptingDebugDrawText\022)\n\006origin\030\001 \002(\0132\031.C"
      "MsgBotWorldState.Vector\022\014\n\004text\030\002 \002(\t\022\022\n"
      "\nbViewCheck\030\003 \002(\010\022\020\n\010duration\030\004 \002(\002\032\260\001\n\026"
      "ScriptingDebugDrawLine\022)\n\006origin\030\001 \002(\0132\031"
      ".CMsgBotWorldState.Vector\022)\n\006target\030\002 \002("
      "\0132\031.CMsgBotWorldState.Vector\022\t\n\001r\030\003 \002(\005\022"
      "\t\n\001g\030\004 \002(\005\022\t\n\001b\030\005 \002(\005\022\r\n\005ztest\030\006 \002(\010\022\020\n\010"
      "duration\030\007 \002(\002\032\224\001\n\034ScriptingDebugDrawScr"
      "eenText\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030\002 \002(\002\022\022\n\nlineOff"
      "set\030\003 \002(\005\022\014\n\004text\030\004 \002(\t\022\t\n\001r\030\005 \002(\005\022\t\n\001g\030"
      "\006 \002(\005\022\t\n\001b\030\007 \002(\005\022\t\n\001a\030\010 \002(\005\022\020\n\010duration\030"
      "\t \002(\002\032\301\001\n\036ScriptingDebugScreenTextPretty"
      "\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030\002 \002(\002\022\022\n\nlineOffset\030\003 \002"
      "(\005\022\014\n\004text\030\004 \002(\t\022\t\n\001r\030\005 \002(\005\022\t\n\001g\030\006 \002(\005\022\t"
      "\n\001b\030\007 \002(\005\022\t\n\001a\030\010 \002(\005\022\020\n\010duration\030\t \002(\002\022\014"
      "\n\004font\030\n \002(\t\022\014\n\004size\030\013 \002(\002\022\r\n\005bBold\030\014 \002("
      "\010\032\330\001\n\025ScriptingDebugDrawBox\022)\n\006origin\030\001 "
      "\002(\0132\031.CMsgBotWorldState.Vector\022*\n\007minimu"
      "m\030\002 \002(\0132\031.CMsgBotWorldState.Vector\022*\n\007ma"
      "ximum\030\003 \002(\0132\031.CMsgBotWorldState.Vector\022\t"
      "\n\001r\030\004 \002(\005\022\t\n\001g\030\005 \002(\005\022\t\n\001b\030\006 \002(\005\022\t\n\001a\030\007 \002"
      "(\005\022\020\n\010duration\030\010 \002(\002\032\247\001\n\030ScriptingDebugD"
      "rawCircle\022)\n\006center\030\001 \002(\0132\031.CMsgBotWorld"
      "State.Vector\022\'\n\004vRgb\030\002 \002(\0132\031.CMsgBotWorl"
      "dState.Vector\022\t\n\001a\030\003 \002(\002\022\013\n\003rad\030\004 \002(\002\022\r\n"
      "\005ztest\030\005 \002(\010\022\020\n\010duration\030\006 \002(\002\032\031\n\027Script"
      "ingDebugDrawClear\032,\n\014OceanWinGame\022\014\n\004tea"
      "m\030\001 \002(\t\022\016\n\006reward\030\002 \001(\002\032\'\n\026OceanReplayCo"
      "rrectTime\022\r\n\005delta\030\001 \002(\002\"\352\r\n\004Type\022\030\n\024DOT"
      "A_UNIT_ORDER_NONE\020\000\022$\n DOTA_UNIT_ORDER_M"
      "OVE_TO_POSITION\020\001\022\"\n\036DOTA_UNIT_ORDER_MOV"
      "E_TO_TARGET\020\002\022\037\n\033DOTA_UNIT_ORDER_ATTACK_"
      "MOVE\020\003\022!\n\035DOTA_UNIT_ORDER_ATTACK_TARGET\020"
      "\004\022!\n\035DOTA_UNIT_ORDER_CAST_POSITION\020\005\022\037\n\033"
      "DOTA_UNIT_ORDER_CAST_TARGET\020\006\022$\n DOTA_UN"
      "IT_ORDER_CAST_TARGET_TREE\020\007\022\"\n\036DOTA_UNIT"
      "_ORDER_CAST_NO_TARGET\020\010\022\037\n\033DOTA_UNIT_ORD"
      "ER_CAST_TOGGLE\020\t\022!\n\035DOTA_UNIT_ORDER_HOLD"
      "_POSITION\020\n\022!\n\035DOTA_UNIT_ORDER_TRAIN_ABI"
      "LITY\020\013\022\035\n\031DOTA_UNIT_ORDER_DROP_ITEM\020\014\022\035\n"
      "\031DOTA_UNIT_ORDER_GIVE_ITEM\020\r\022\037\n\033DOTA_UNI"
      "T_ORDER_PICKUP_ITEM\020\016\022\037\n\033DOTA_UNIT_ORDER"
      "_PICKUP_RUNE\020\017\022!\n\035DOTA_UNIT_ORDER_PURCHA"
      "SE_ITEM\020\020\022\035\n\031DOTA_UNIT_ORDER_SELL_ITEM\020\021"
      "\022$\n DOTA_UNIT_ORDER_DISASSEMBLE_ITEM\020\022\022\035"
      "\n\031DOTA_UNIT_ORDER_MOVE_ITEM\020\023\022$\n DOTA_UN"
      "IT_ORDER_CAST_TOGGLE_AUTO\020\024\022\030\n\024DOTA_UNIT"
      "_ORDER_STOP\020\025\022\031\n\025DOTA_UNIT_ORDER_TAUNT\020\026"
      "\022\033\n\027DOTA_UNIT_ORDER_BUYBACK\020\027\022\031\n\025DOTA_UN"
      "IT_ORDER_GLYPH\020\030\022)\n%DOTA_UNIT_ORDER_EJEC"
      "T_ITEM_FROM_STASH\020\031\022\035\n\031DOTA_UNIT_ORDER_C"
      "AST_RUNE\020\032\022 \n\034DOTA_UNIT_ORDER_PING_ABILI"
      "TY\020\033\022%\n!DOTA_UNIT_ORDER_MOVE_TO_DIRECTIO"
      "N\020\034\022\032\n\026DOTA_UNIT_ORDER_PATROL\020\035\022*\n&DOTA_"
      "UNIT_ORDER_VECTOR_TARGET_POSITION\020\036\022\031\n\025D"
      "OTA_UNIT_ORDER_RADAR\020\037\022)\n%DOTA_UNIT_ORDE"
      "R_SET_ITEM_COMBINE_LOCK\020 \022\034\n\030DOTA_UNIT_O"
      "RDER_CONTINUE\020!\022\017\n\013ACTION_CHAT\020(\022\025\n\021ACTI"
      "ON_SWAP_ITEMS\020)\022\025\n\021ACTION_USE_SHRINE\020*\022\022"
      "\n\016ACTION_COURIER\020+\022\"\n\036RPC_GET_ACTUAL_INC"
      "OMING_DAMAGE\020,\022&\n\"RPC_GET_ESTIMATED_DAMA"
      "GE_TO_TARGET\020-\022\025\n\021OCEAN_FULL_UPDATE\0202\022\025\n"
      "\021OCEAN_RELOAD_CODE\0203\022\024\n\020OCEAN_SOFT_RESET"
      "\0204\022\030\n\024OCEAN_HOLD_FRAMESKIP\0206\022\022\n\016OCEAN_WI"
      "N_GAME\020\?\022\035\n\031OCEAN_REPLAY_CORRECT_TIME\020@\022"
      "\035\n\031SCRIPTING_DEBUG_DRAW_TEXT\0207\022\035\n\031SCRIPT"
      "ING_DEBUG_DRAW_LINE\0208\022.\n*SCRIPTING_DOTA_"
      "UNIT_ORDER_MOVE_TO_POSITION\0209\022$\n SCRIPTI"
      "NG_DEBUG_DRAW_SCREEN_TEXT\020:\022\034\n\030SCRIPTING"
      "_DEBUG_DRAW_BOX\020;\022\037\n\033SCRIPTING_DEBUG_DRA"
      "W_CIRCLE\020<\022\036\n\032SCRIPTING_DEBUG_DRAW_CLEAR"
      "\020=\022&\n\"SCRIPTING_DEBUG_SCREEN_TEXT_PRETTY"
      "\020A\022!\n\035DOTA_UNIT_ORDER_MOVE_DIRECTLY\020>B\014\n"
      "\nActionData\"\263\001\n\010UnitType\022\013\n\007INVALID\020\000\022\010\n"
      "\004HERO\020\001\022\016\n\nCREEP_HERO\020\002\022\016\n\nLANE_CREEP\020\003\022"
      "\020\n\014JUNGLE_CREEP\020\004\022\n\n\006ROSHAN\020\005\022\t\n\005TOWER\020\006"
      "\022\014\n\010BARRACKS\020\007\022\n\n\006SHRINE\020\010\022\010\n\004FORT\020\t\022\014\n\010"
      "BUILDING\020\n\022\013\n\007COURIER\020\013\022\010\n\004WARD\020\014\"\335\001\n\014Co"
      "urierState\022\037\n\022COURIER_STATE_INIT\020\377\377\377\377\377\377\377"
      "\377\377\001\022\026\n\022COURIER_STATE_IDLE\020\000\022\031\n\025COURIER_S"
      "TATE_AT_BASE\020\001\022\030\n\024COURIER_STATE_MOVING\020\002"
      "\022\"\n\036COURIER_STATE_DELIVERING_ITEMS\020\003\022#\n\037"
      "COURIER_STATE_RETURNING_TO_BASE\020\004\022\026\n\022COU"
      "RIER_STATE_DEAD\020\005B\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 14104);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dota_gcmessages_common_bot_script.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto
const ::google::protobuf::EnumDescriptor* CMsgBotWorldState_Action_Type_descriptor() {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_enum_descriptors[0];
}
bool CMsgBotWorldState_Action_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 50:
    case 51:
    case 52:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_NONE;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_MOVE_TO_POSITION;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_MOVE_TO_TARGET;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_ATTACK_MOVE;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_ATTACK_TARGET;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_CAST_POSITION;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_CAST_TARGET;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_CAST_TARGET_TREE;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_CAST_NO_TARGET;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_CAST_TOGGLE;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_HOLD_POSITION;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_TRAIN_ABILITY;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_DROP_ITEM;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_GIVE_ITEM;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_PICKUP_ITEM;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_PICKUP_RUNE;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_PURCHASE_ITEM;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_SELL_ITEM;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_DISASSEMBLE_ITEM;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_MOVE_ITEM;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_STOP;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_TAUNT;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_BUYBACK;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_GLYPH;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_CAST_RUNE;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_PING_ABILITY;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_MOVE_TO_DIRECTION;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_PATROL;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_RADAR;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_CONTINUE;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::ACTION_CHAT;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::ACTION_SWAP_ITEMS;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::ACTION_USE_SHRINE;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::ACTION_COURIER;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::RPC_GET_ACTUAL_INCOMING_DAMAGE;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::RPC_GET_ESTIMATED_DAMAGE_TO_TARGET;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::OCEAN_FULL_UPDATE;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::OCEAN_RELOAD_CODE;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::OCEAN_SOFT_RESET;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::OCEAN_HOLD_FRAMESKIP;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::OCEAN_WIN_GAME;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::OCEAN_REPLAY_CORRECT_TIME;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::SCRIPTING_DEBUG_DRAW_TEXT;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::SCRIPTING_DEBUG_DRAW_LINE;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::SCRIPTING_DOTA_UNIT_ORDER_MOVE_TO_POSITION;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::SCRIPTING_DEBUG_DRAW_SCREEN_TEXT;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::SCRIPTING_DEBUG_DRAW_BOX;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::SCRIPTING_DEBUG_DRAW_CIRCLE;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::SCRIPTING_DEBUG_DRAW_CLEAR;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::SCRIPTING_DEBUG_SCREEN_TEXT_PRETTY;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::DOTA_UNIT_ORDER_MOVE_DIRECTLY;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::Type_MIN;
const CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::Type_MAX;
const int CMsgBotWorldState_Action::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgBotWorldState_UnitType_descriptor() {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_enum_descriptors[1];
}
bool CMsgBotWorldState_UnitType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgBotWorldState_UnitType CMsgBotWorldState::INVALID;
const CMsgBotWorldState_UnitType CMsgBotWorldState::HERO;
const CMsgBotWorldState_UnitType CMsgBotWorldState::CREEP_HERO;
const CMsgBotWorldState_UnitType CMsgBotWorldState::LANE_CREEP;
const CMsgBotWorldState_UnitType CMsgBotWorldState::JUNGLE_CREEP;
const CMsgBotWorldState_UnitType CMsgBotWorldState::ROSHAN;
const CMsgBotWorldState_UnitType CMsgBotWorldState::TOWER;
const CMsgBotWorldState_UnitType CMsgBotWorldState::BARRACKS;
const CMsgBotWorldState_UnitType CMsgBotWorldState::SHRINE;
const CMsgBotWorldState_UnitType CMsgBotWorldState::FORT;
const CMsgBotWorldState_UnitType CMsgBotWorldState::BUILDING;
const CMsgBotWorldState_UnitType CMsgBotWorldState::COURIER;
const CMsgBotWorldState_UnitType CMsgBotWorldState::WARD;
const CMsgBotWorldState_UnitType CMsgBotWorldState::UnitType_MIN;
const CMsgBotWorldState_UnitType CMsgBotWorldState::UnitType_MAX;
const int CMsgBotWorldState::UnitType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgBotWorldState_CourierState_descriptor() {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_enum_descriptors[2];
}
bool CMsgBotWorldState_CourierState_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgBotWorldState_CourierState CMsgBotWorldState::COURIER_STATE_INIT;
const CMsgBotWorldState_CourierState CMsgBotWorldState::COURIER_STATE_IDLE;
const CMsgBotWorldState_CourierState CMsgBotWorldState::COURIER_STATE_AT_BASE;
const CMsgBotWorldState_CourierState CMsgBotWorldState::COURIER_STATE_MOVING;
const CMsgBotWorldState_CourierState CMsgBotWorldState::COURIER_STATE_DELIVERING_ITEMS;
const CMsgBotWorldState_CourierState CMsgBotWorldState::COURIER_STATE_RETURNING_TO_BASE;
const CMsgBotWorldState_CourierState CMsgBotWorldState::COURIER_STATE_DEAD;
const CMsgBotWorldState_CourierState CMsgBotWorldState::CourierState_MIN;
const CMsgBotWorldState_CourierState CMsgBotWorldState::CourierState_MAX;
const int CMsgBotWorldState::CourierState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void CMsgBotWorldState_Vector::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Vector::kXFieldNumber;
const int CMsgBotWorldState_Vector::kYFieldNumber;
const int CMsgBotWorldState_Vector::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Vector::CMsgBotWorldState_Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Vector)
}
CMsgBotWorldState_Vector::CMsgBotWorldState_Vector(const CMsgBotWorldState_Vector& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Vector)
}

void CMsgBotWorldState_Vector::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

CMsgBotWorldState_Vector::~CMsgBotWorldState_Vector() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Vector)
  SharedDtor();
}

void CMsgBotWorldState_Vector::SharedDtor() {
}

void CMsgBotWorldState_Vector::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Vector::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Vector& CMsgBotWorldState_Vector::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Vector.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Vector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&z_) -
        reinterpret_cast<char*>(&x_)) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Vector)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Vector)
  return false;
#undef DO_
}

void CMsgBotWorldState_Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Vector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // required float y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // required float z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Vector)
}

::google::protobuf::uint8* CMsgBotWorldState_Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Vector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // required float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // required float z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Vector)
  return target;
}

size_t CMsgBotWorldState_Vector::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgBotWorldState.Vector)
  size_t total_size = 0;

  if (has_x()) {
    // required float x = 1;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 2;
    total_size += 1 + 4;
  }

  if (has_z()) {
    // required float z = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t CMsgBotWorldState_Vector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Vector)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required float x = 1;
    total_size += 1 + 4;

    // required float y = 2;
    total_size += 1 + 4;

    // required float z = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Vector)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Vector* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Vector)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Vector::MergeFrom(const CMsgBotWorldState_Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Vector)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Vector::CopyFrom(const CMsgBotWorldState_Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Vector::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void CMsgBotWorldState_Vector::Swap(CMsgBotWorldState_Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Vector::InternalSwap(CMsgBotWorldState_Vector* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Vector::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Player::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Player::kPlayerIdFieldNumber;
const int CMsgBotWorldState_Player::kHeroIdFieldNumber;
const int CMsgBotWorldState_Player::kIsAliveFieldNumber;
const int CMsgBotWorldState_Player::kRespawnTimeFieldNumber;
const int CMsgBotWorldState_Player::kKillsFieldNumber;
const int CMsgBotWorldState_Player::kDeathsFieldNumber;
const int CMsgBotWorldState_Player::kAssistsFieldNumber;
const int CMsgBotWorldState_Player::kTeamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Player::CMsgBotWorldState_Player()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Player.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Player)
}
CMsgBotWorldState_Player::CMsgBotWorldState_Player(const CMsgBotWorldState_Player& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&team_id_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(team_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Player)
}

void CMsgBotWorldState_Player::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&team_id_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(team_id_));
}

CMsgBotWorldState_Player::~CMsgBotWorldState_Player() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Player)
  SharedDtor();
}

void CMsgBotWorldState_Player::SharedDtor() {
}

void CMsgBotWorldState_Player::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Player::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Player& CMsgBotWorldState_Player::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Player.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Player::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&team_id_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(team_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Player::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Player)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 hero_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_hero_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hero_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_alive = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_alive();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_alive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float respawn_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_respawn_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &respawn_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 kills = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_kills();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kills_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 deaths = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_deaths();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deaths_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 assists = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_assists();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &assists_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 team_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_team_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Player)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Player)
  return false;
#undef DO_
}

void CMsgBotWorldState_Player::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->player_id(), output);
  }

  // optional uint32 hero_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hero_id(), output);
  }

  // optional bool is_alive = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_alive(), output);
  }

  // optional float respawn_time = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->respawn_time(), output);
  }

  // optional uint32 kills = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->kills(), output);
  }

  // optional uint32 deaths = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->deaths(), output);
  }

  // optional uint32 assists = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->assists(), output);
  }

  // optional uint32 team_id = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->team_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Player)
}

::google::protobuf::uint8* CMsgBotWorldState_Player::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->player_id(), target);
  }

  // optional uint32 hero_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hero_id(), target);
  }

  // optional bool is_alive = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_alive(), target);
  }

  // optional float respawn_time = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->respawn_time(), target);
  }

  // optional uint32 kills = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->kills(), target);
  }

  // optional uint32 deaths = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->deaths(), target);
  }

  // optional uint32 assists = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->assists(), target);
  }

  // optional uint32 team_id = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->team_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Player)
  return target;
}

size_t CMsgBotWorldState_Player::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Player)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_id());
    }

    // optional uint32 hero_id = 2;
    if (has_hero_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hero_id());
    }

    // optional bool is_alive = 3;
    if (has_is_alive()) {
      total_size += 1 + 1;
    }

    // optional float respawn_time = 4;
    if (has_respawn_time()) {
      total_size += 1 + 4;
    }

    // optional uint32 kills = 5;
    if (has_kills()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->kills());
    }

    // optional uint32 deaths = 6;
    if (has_deaths()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->deaths());
    }

    // optional uint32 assists = 7;
    if (has_assists()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->assists());
    }

    // optional uint32 team_id = 8;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->team_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Player::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Player)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Player* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Player>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Player)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Player)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Player::MergeFrom(const CMsgBotWorldState_Player& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Player)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      hero_id_ = from.hero_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_alive_ = from.is_alive_;
    }
    if (cached_has_bits & 0x00000008u) {
      respawn_time_ = from.respawn_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      kills_ = from.kills_;
    }
    if (cached_has_bits & 0x00000020u) {
      deaths_ = from.deaths_;
    }
    if (cached_has_bits & 0x00000040u) {
      assists_ = from.assists_;
    }
    if (cached_has_bits & 0x00000080u) {
      team_id_ = from.team_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Player::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Player::CopyFrom(const CMsgBotWorldState_Player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Player::IsInitialized() const {
  return true;
}

void CMsgBotWorldState_Player::Swap(CMsgBotWorldState_Player* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Player::InternalSwap(CMsgBotWorldState_Player* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(hero_id_, other->hero_id_);
  swap(is_alive_, other->is_alive_);
  swap(respawn_time_, other->respawn_time_);
  swap(kills_, other->kills_);
  swap(deaths_, other->deaths_);
  swap(assists_, other->assists_);
  swap(team_id_, other->team_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Player::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Ability::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Ability::kHandleFieldNumber;
const int CMsgBotWorldState_Ability::kAbilityIdFieldNumber;
const int CMsgBotWorldState_Ability::kSlotFieldNumber;
const int CMsgBotWorldState_Ability::kCasterHandleFieldNumber;
const int CMsgBotWorldState_Ability::kLevelFieldNumber;
const int CMsgBotWorldState_Ability::kCastRangeFieldNumber;
const int CMsgBotWorldState_Ability::kChannelTimeFieldNumber;
const int CMsgBotWorldState_Ability::kCooldownRemainingFieldNumber;
const int CMsgBotWorldState_Ability::kIsActivatedFieldNumber;
const int CMsgBotWorldState_Ability::kIsToggledFieldNumber;
const int CMsgBotWorldState_Ability::kIsInAbilityPhaseFieldNumber;
const int CMsgBotWorldState_Ability::kIsChannelingFieldNumber;
const int CMsgBotWorldState_Ability::kIsStolenFieldNumber;
const int CMsgBotWorldState_Ability::kIsFullyCastableFieldNumber;
const int CMsgBotWorldState_Ability::kChargesFieldNumber;
const int CMsgBotWorldState_Ability::kSecondaryChargesFieldNumber;
const int CMsgBotWorldState_Ability::kIsCombinedLockedFieldNumber;
const int CMsgBotWorldState_Ability::kPowerTreadsStatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Ability::CMsgBotWorldState_Ability()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Ability.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Ability)
}
CMsgBotWorldState_Ability::CMsgBotWorldState_Ability(const CMsgBotWorldState_Ability& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&handle_, &from.handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&power_treads_stat_) -
    reinterpret_cast<char*>(&handle_)) + sizeof(power_treads_stat_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Ability)
}

void CMsgBotWorldState_Ability::SharedCtor() {
  ::memset(&handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&secondary_charges_) -
      reinterpret_cast<char*>(&handle_)) + sizeof(secondary_charges_));
  power_treads_stat_ = -1;
}

CMsgBotWorldState_Ability::~CMsgBotWorldState_Ability() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Ability)
  SharedDtor();
}

void CMsgBotWorldState_Ability::SharedDtor() {
}

void CMsgBotWorldState_Ability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Ability::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Ability& CMsgBotWorldState_Ability::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Ability.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Ability::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Ability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cooldown_remaining_) -
        reinterpret_cast<char*>(&handle_)) + sizeof(cooldown_remaining_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&is_activated_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&charges_) -
        reinterpret_cast<char*>(&is_activated_)) + sizeof(charges_));
  }
  if (cached_has_bits & 196608u) {
    secondary_charges_ = 0u;
    power_treads_stat_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Ability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Ability)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ability_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 slot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 caster_handle = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_caster_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &caster_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 level = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cast_range = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_cast_range();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cast_range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float channel_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {
          set_has_channel_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &channel_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float cooldown_remaining = 12 [default = 0];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {
          set_has_cooldown_remaining();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cooldown_remaining_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_activated = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_is_activated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_activated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_toggled = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_is_toggled();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_toggled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_in_ability_phase = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_is_in_ability_phase();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_in_ability_phase_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_channeling = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_is_channeling();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_channeling_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_stolen = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_is_stolen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_stolen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_fully_castable = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          set_has_is_fully_castable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_fully_castable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 charges = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_charges();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &charges_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 secondary_charges = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_secondary_charges();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &secondary_charges_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_combined_locked = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_is_combined_locked();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_combined_locked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 power_treads_stat = 50 [default = -1];
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {
          set_has_power_treads_stat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &power_treads_stat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Ability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Ability)
  return false;
#undef DO_
}

void CMsgBotWorldState_Ability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Ability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->handle(), output);
  }

  // optional uint32 ability_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ability_id(), output);
  }

  // optional uint32 slot = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->slot(), output);
  }

  // optional uint32 caster_handle = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->caster_handle(), output);
  }

  // optional uint32 level = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->level(), output);
  }

  // optional uint32 cast_range = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->cast_range(), output);
  }

  // optional float channel_time = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->channel_time(), output);
  }

  // optional float cooldown_remaining = 12 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->cooldown_remaining(), output);
  }

  // optional bool is_activated = 20;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->is_activated(), output);
  }

  // optional bool is_toggled = 21;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->is_toggled(), output);
  }

  // optional bool is_in_ability_phase = 22;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->is_in_ability_phase(), output);
  }

  // optional bool is_channeling = 23;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(23, this->is_channeling(), output);
  }

  // optional bool is_stolen = 24;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(24, this->is_stolen(), output);
  }

  // optional bool is_fully_castable = 25;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(25, this->is_fully_castable(), output);
  }

  // optional uint32 charges = 30;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->charges(), output);
  }

  // optional uint32 secondary_charges = 31;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->secondary_charges(), output);
  }

  // optional bool is_combined_locked = 40;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(40, this->is_combined_locked(), output);
  }

  // optional int32 power_treads_stat = 50 [default = -1];
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(50, this->power_treads_stat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Ability)
}

::google::protobuf::uint8* CMsgBotWorldState_Ability::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Ability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->handle(), target);
  }

  // optional uint32 ability_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ability_id(), target);
  }

  // optional uint32 slot = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->slot(), target);
  }

  // optional uint32 caster_handle = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->caster_handle(), target);
  }

  // optional uint32 level = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->level(), target);
  }

  // optional uint32 cast_range = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->cast_range(), target);
  }

  // optional float channel_time = 11;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->channel_time(), target);
  }

  // optional float cooldown_remaining = 12 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->cooldown_remaining(), target);
  }

  // optional bool is_activated = 20;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->is_activated(), target);
  }

  // optional bool is_toggled = 21;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->is_toggled(), target);
  }

  // optional bool is_in_ability_phase = 22;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->is_in_ability_phase(), target);
  }

  // optional bool is_channeling = 23;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(23, this->is_channeling(), target);
  }

  // optional bool is_stolen = 24;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(24, this->is_stolen(), target);
  }

  // optional bool is_fully_castable = 25;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(25, this->is_fully_castable(), target);
  }

  // optional uint32 charges = 30;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->charges(), target);
  }

  // optional uint32 secondary_charges = 31;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(31, this->secondary_charges(), target);
  }

  // optional bool is_combined_locked = 40;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(40, this->is_combined_locked(), target);
  }

  // optional int32 power_treads_stat = 50 [default = -1];
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(50, this->power_treads_stat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Ability)
  return target;
}

size_t CMsgBotWorldState_Ability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Ability)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 handle = 1;
    if (has_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->handle());
    }

    // optional uint32 ability_id = 2;
    if (has_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_id());
    }

    // optional uint32 slot = 3;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot());
    }

    // optional uint32 caster_handle = 5;
    if (has_caster_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->caster_handle());
    }

    // optional uint32 level = 6;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint32 cast_range = 10;
    if (has_cast_range()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cast_range());
    }

    // optional float channel_time = 11;
    if (has_channel_time()) {
      total_size += 1 + 4;
    }

    // optional float cooldown_remaining = 12 [default = 0];
    if (has_cooldown_remaining()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bool is_activated = 20;
    if (has_is_activated()) {
      total_size += 2 + 1;
    }

    // optional bool is_toggled = 21;
    if (has_is_toggled()) {
      total_size += 2 + 1;
    }

    // optional bool is_in_ability_phase = 22;
    if (has_is_in_ability_phase()) {
      total_size += 2 + 1;
    }

    // optional bool is_channeling = 23;
    if (has_is_channeling()) {
      total_size += 2 + 1;
    }

    // optional bool is_stolen = 24;
    if (has_is_stolen()) {
      total_size += 2 + 1;
    }

    // optional bool is_fully_castable = 25;
    if (has_is_fully_castable()) {
      total_size += 2 + 1;
    }

    // optional bool is_combined_locked = 40;
    if (has_is_combined_locked()) {
      total_size += 2 + 1;
    }

    // optional uint32 charges = 30;
    if (has_charges()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->charges());
    }

  }
  if (_has_bits_[16 / 32] & 196608u) {
    // optional uint32 secondary_charges = 31;
    if (has_secondary_charges()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->secondary_charges());
    }

    // optional int32 power_treads_stat = 50 [default = -1];
    if (has_power_treads_stat()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->power_treads_stat());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Ability::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Ability)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Ability* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Ability>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Ability)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Ability)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Ability::MergeFrom(const CMsgBotWorldState_Ability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Ability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      handle_ = from.handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      ability_id_ = from.ability_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      slot_ = from.slot_;
    }
    if (cached_has_bits & 0x00000008u) {
      caster_handle_ = from.caster_handle_;
    }
    if (cached_has_bits & 0x00000010u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000020u) {
      cast_range_ = from.cast_range_;
    }
    if (cached_has_bits & 0x00000040u) {
      channel_time_ = from.channel_time_;
    }
    if (cached_has_bits & 0x00000080u) {
      cooldown_remaining_ = from.cooldown_remaining_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      is_activated_ = from.is_activated_;
    }
    if (cached_has_bits & 0x00000200u) {
      is_toggled_ = from.is_toggled_;
    }
    if (cached_has_bits & 0x00000400u) {
      is_in_ability_phase_ = from.is_in_ability_phase_;
    }
    if (cached_has_bits & 0x00000800u) {
      is_channeling_ = from.is_channeling_;
    }
    if (cached_has_bits & 0x00001000u) {
      is_stolen_ = from.is_stolen_;
    }
    if (cached_has_bits & 0x00002000u) {
      is_fully_castable_ = from.is_fully_castable_;
    }
    if (cached_has_bits & 0x00004000u) {
      is_combined_locked_ = from.is_combined_locked_;
    }
    if (cached_has_bits & 0x00008000u) {
      charges_ = from.charges_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 196608u) {
    if (cached_has_bits & 0x00010000u) {
      secondary_charges_ = from.secondary_charges_;
    }
    if (cached_has_bits & 0x00020000u) {
      power_treads_stat_ = from.power_treads_stat_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Ability::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Ability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Ability::CopyFrom(const CMsgBotWorldState_Ability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Ability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Ability::IsInitialized() const {
  return true;
}

void CMsgBotWorldState_Ability::Swap(CMsgBotWorldState_Ability* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Ability::InternalSwap(CMsgBotWorldState_Ability* other) {
  using std::swap;
  swap(handle_, other->handle_);
  swap(ability_id_, other->ability_id_);
  swap(slot_, other->slot_);
  swap(caster_handle_, other->caster_handle_);
  swap(level_, other->level_);
  swap(cast_range_, other->cast_range_);
  swap(channel_time_, other->channel_time_);
  swap(cooldown_remaining_, other->cooldown_remaining_);
  swap(is_activated_, other->is_activated_);
  swap(is_toggled_, other->is_toggled_);
  swap(is_in_ability_phase_, other->is_in_ability_phase_);
  swap(is_channeling_, other->is_channeling_);
  swap(is_stolen_, other->is_stolen_);
  swap(is_fully_castable_, other->is_fully_castable_);
  swap(is_combined_locked_, other->is_combined_locked_);
  swap(charges_, other->charges_);
  swap(secondary_charges_, other->secondary_charges_);
  swap(power_treads_stat_, other->power_treads_stat_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Ability::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_DroppedItem::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_DroppedItem_default_instance_._instance.get_mutable()->location_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_DroppedItem::kItemIdFieldNumber;
const int CMsgBotWorldState_DroppedItem::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_DroppedItem::CMsgBotWorldState_DroppedItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_DroppedItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.DroppedItem)
}
CMsgBotWorldState_DroppedItem::CMsgBotWorldState_DroppedItem(const CMsgBotWorldState_DroppedItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::CMsgBotWorldState_Vector(*from.location_);
  } else {
    location_ = NULL;
  }
  item_id_ = from.item_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.DroppedItem)
}

void CMsgBotWorldState_DroppedItem::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_id_) -
      reinterpret_cast<char*>(&location_)) + sizeof(item_id_));
}

CMsgBotWorldState_DroppedItem::~CMsgBotWorldState_DroppedItem() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.DroppedItem)
  SharedDtor();
}

void CMsgBotWorldState_DroppedItem::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
}

void CMsgBotWorldState_DroppedItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_DroppedItem::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_DroppedItem& CMsgBotWorldState_DroppedItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_DroppedItem.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_DroppedItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.DroppedItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(location_ != NULL);
    location_->Clear();
  }
  item_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_DroppedItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.DroppedItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Vector location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.DroppedItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.DroppedItem)
  return false;
#undef DO_
}

void CMsgBotWorldState_DroppedItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.DroppedItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_id(), output);
  }

  // optional .CMsgBotWorldState.Vector location = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_location(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.DroppedItem)
}

::google::protobuf::uint8* CMsgBotWorldState_DroppedItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.DroppedItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_id(), target);
  }

  // optional .CMsgBotWorldState.Vector location = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_location(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.DroppedItem)
  return target;
}

size_t CMsgBotWorldState_DroppedItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.DroppedItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CMsgBotWorldState.Vector location = 2;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *location_);
    }

    // optional uint32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_DroppedItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.DroppedItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_DroppedItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_DroppedItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.DroppedItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.DroppedItem)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_DroppedItem::MergeFrom(const CMsgBotWorldState_DroppedItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.DroppedItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_location()->::CMsgBotWorldState_Vector::MergeFrom(from.location());
    }
    if (cached_has_bits & 0x00000002u) {
      item_id_ = from.item_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_DroppedItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.DroppedItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_DroppedItem::CopyFrom(const CMsgBotWorldState_DroppedItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.DroppedItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_DroppedItem::IsInitialized() const {
  if (has_location()) {
    if (!this->location_->IsInitialized()) return false;
  }
  return true;
}

void CMsgBotWorldState_DroppedItem::Swap(CMsgBotWorldState_DroppedItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_DroppedItem::InternalSwap(CMsgBotWorldState_DroppedItem* other) {
  using std::swap;
  swap(location_, other->location_);
  swap(item_id_, other->item_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_DroppedItem::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_RuneInfo::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_RuneInfo_default_instance_._instance.get_mutable()->location_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_RuneInfo::kTypeFieldNumber;
const int CMsgBotWorldState_RuneInfo::kLocationFieldNumber;
const int CMsgBotWorldState_RuneInfo::kStatusFieldNumber;
const int CMsgBotWorldState_RuneInfo::kTimeSinceSeenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_RuneInfo::CMsgBotWorldState_RuneInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_RuneInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.RuneInfo)
}
CMsgBotWorldState_RuneInfo::CMsgBotWorldState_RuneInfo(const CMsgBotWorldState_RuneInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::CMsgBotWorldState_Vector(*from.location_);
  } else {
    location_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_since_seen_) -
    reinterpret_cast<char*>(&type_)) + sizeof(time_since_seen_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.RuneInfo)
}

void CMsgBotWorldState_RuneInfo::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_since_seen_) -
      reinterpret_cast<char*>(&location_)) + sizeof(time_since_seen_));
}

CMsgBotWorldState_RuneInfo::~CMsgBotWorldState_RuneInfo() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.RuneInfo)
  SharedDtor();
}

void CMsgBotWorldState_RuneInfo::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
}

void CMsgBotWorldState_RuneInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_RuneInfo::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_RuneInfo& CMsgBotWorldState_RuneInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_RuneInfo.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_RuneInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.RuneInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(location_ != NULL);
    location_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_since_seen_) -
        reinterpret_cast<char*>(&type_)) + sizeof(time_since_seen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_RuneInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.RuneInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Vector location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float time_since_seen = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_time_since_seen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_since_seen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.RuneInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.RuneInfo)
  return false;
#undef DO_
}

void CMsgBotWorldState_RuneInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.RuneInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional .CMsgBotWorldState.Vector location = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_location(), output);
  }

  // optional uint32 status = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->status(), output);
  }

  // optional float time_since_seen = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->time_since_seen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.RuneInfo)
}

::google::protobuf::uint8* CMsgBotWorldState_RuneInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.RuneInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional .CMsgBotWorldState.Vector location = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_location(), deterministic, target);
  }

  // optional uint32 status = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->status(), target);
  }

  // optional float time_since_seen = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->time_since_seen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.RuneInfo)
  return target;
}

size_t CMsgBotWorldState_RuneInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.RuneInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .CMsgBotWorldState.Vector location = 2;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *location_);
    }

    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional uint32 status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

    // optional float time_since_seen = 4;
    if (has_time_since_seen()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_RuneInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.RuneInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_RuneInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_RuneInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.RuneInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.RuneInfo)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_RuneInfo::MergeFrom(const CMsgBotWorldState_RuneInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.RuneInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_location()->::CMsgBotWorldState_Vector::MergeFrom(from.location());
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000008u) {
      time_since_seen_ = from.time_since_seen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_RuneInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.RuneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_RuneInfo::CopyFrom(const CMsgBotWorldState_RuneInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.RuneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_RuneInfo::IsInitialized() const {
  if (has_location()) {
    if (!this->location_->IsInitialized()) return false;
  }
  return true;
}

void CMsgBotWorldState_RuneInfo::Swap(CMsgBotWorldState_RuneInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_RuneInfo::InternalSwap(CMsgBotWorldState_RuneInfo* other) {
  using std::swap;
  swap(location_, other->location_);
  swap(type_, other->type_);
  swap(status_, other->status_);
  swap(time_since_seen_, other->time_since_seen_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_RuneInfo::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_TeleportInfo::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_TeleportInfo_default_instance_._instance.get_mutable()->location_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_TeleportInfo::kPlayerIdFieldNumber;
const int CMsgBotWorldState_TeleportInfo::kLocationFieldNumber;
const int CMsgBotWorldState_TeleportInfo::kTimeRemainingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_TeleportInfo::CMsgBotWorldState_TeleportInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_TeleportInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.TeleportInfo)
}
CMsgBotWorldState_TeleportInfo::CMsgBotWorldState_TeleportInfo(const CMsgBotWorldState_TeleportInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::CMsgBotWorldState_Vector(*from.location_);
  } else {
    location_ = NULL;
  }
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_remaining_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(time_remaining_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.TeleportInfo)
}

void CMsgBotWorldState_TeleportInfo::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_remaining_) -
      reinterpret_cast<char*>(&location_)) + sizeof(time_remaining_));
}

CMsgBotWorldState_TeleportInfo::~CMsgBotWorldState_TeleportInfo() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.TeleportInfo)
  SharedDtor();
}

void CMsgBotWorldState_TeleportInfo::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
}

void CMsgBotWorldState_TeleportInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_TeleportInfo::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_TeleportInfo& CMsgBotWorldState_TeleportInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_TeleportInfo.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_TeleportInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.TeleportInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(location_ != NULL);
    location_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_remaining_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(time_remaining_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_TeleportInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.TeleportInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Vector location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float time_remaining = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_time_remaining();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_remaining_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.TeleportInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.TeleportInfo)
  return false;
#undef DO_
}

void CMsgBotWorldState_TeleportInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.TeleportInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->player_id(), output);
  }

  // optional .CMsgBotWorldState.Vector location = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_location(), output);
  }

  // optional float time_remaining = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->time_remaining(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.TeleportInfo)
}

::google::protobuf::uint8* CMsgBotWorldState_TeleportInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.TeleportInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->player_id(), target);
  }

  // optional .CMsgBotWorldState.Vector location = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_location(), deterministic, target);
  }

  // optional float time_remaining = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->time_remaining(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.TeleportInfo)
  return target;
}

size_t CMsgBotWorldState_TeleportInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.TeleportInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .CMsgBotWorldState.Vector location = 2;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *location_);
    }

    // optional int32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_id());
    }

    // optional float time_remaining = 3;
    if (has_time_remaining()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_TeleportInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.TeleportInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_TeleportInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_TeleportInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.TeleportInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.TeleportInfo)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_TeleportInfo::MergeFrom(const CMsgBotWorldState_TeleportInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.TeleportInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_location()->::CMsgBotWorldState_Vector::MergeFrom(from.location());
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_remaining_ = from.time_remaining_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_TeleportInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.TeleportInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_TeleportInfo::CopyFrom(const CMsgBotWorldState_TeleportInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.TeleportInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_TeleportInfo::IsInitialized() const {
  if (has_location()) {
    if (!this->location_->IsInitialized()) return false;
  }
  return true;
}

void CMsgBotWorldState_TeleportInfo::Swap(CMsgBotWorldState_TeleportInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_TeleportInfo::InternalSwap(CMsgBotWorldState_TeleportInfo* other) {
  using std::swap;
  swap(location_, other->location_);
  swap(player_id_, other->player_id_);
  swap(time_remaining_, other->time_remaining_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_TeleportInfo::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Modifier::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Modifier::kNameFieldNumber;
const int CMsgBotWorldState_Modifier::kStackCountFieldNumber;
const int CMsgBotWorldState_Modifier::kAbilityHandleFieldNumber;
const int CMsgBotWorldState_Modifier::kAbilityIdFieldNumber;
const int CMsgBotWorldState_Modifier::kRemainingDurationFieldNumber;
const int CMsgBotWorldState_Modifier::kAuxiliaryUnitsHandlesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Modifier::CMsgBotWorldState_Modifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Modifier.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Modifier)
}
CMsgBotWorldState_Modifier::CMsgBotWorldState_Modifier(const CMsgBotWorldState_Modifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      auxiliary_units_handles_(from.auxiliary_units_handles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&stack_count_, &from.stack_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&remaining_duration_) -
    reinterpret_cast<char*>(&stack_count_)) + sizeof(remaining_duration_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Modifier)
}

void CMsgBotWorldState_Modifier::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&stack_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remaining_duration_) -
      reinterpret_cast<char*>(&stack_count_)) + sizeof(remaining_duration_));
}

CMsgBotWorldState_Modifier::~CMsgBotWorldState_Modifier() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Modifier)
  SharedDtor();
}

void CMsgBotWorldState_Modifier::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgBotWorldState_Modifier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Modifier::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Modifier& CMsgBotWorldState_Modifier::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Modifier.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Modifier::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Modifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  auxiliary_units_handles_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&stack_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&remaining_duration_) -
        reinterpret_cast<char*>(&stack_count_)) + sizeof(remaining_duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Modifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Modifier)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Modifier.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 stack_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_stack_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stack_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ability_handle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_ability_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ability_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float remaining_duration = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_remaining_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &remaining_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 auxiliary_units_handles = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48u, input, this->mutable_auxiliary_units_handles())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_auxiliary_units_handles())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Modifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Modifier)
  return false;
#undef DO_
}

void CMsgBotWorldState_Modifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Modifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Modifier.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 stack_count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->stack_count(), output);
  }

  // optional uint32 ability_handle = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ability_handle(), output);
  }

  // optional uint32 ability_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ability_id(), output);
  }

  // optional float remaining_duration = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->remaining_duration(), output);
  }

  // repeated uint32 auxiliary_units_handles = 6;
  for (int i = 0, n = this->auxiliary_units_handles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->auxiliary_units_handles(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Modifier)
}

::google::protobuf::uint8* CMsgBotWorldState_Modifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Modifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Modifier.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 stack_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->stack_count(), target);
  }

  // optional uint32 ability_handle = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ability_handle(), target);
  }

  // optional uint32 ability_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ability_id(), target);
  }

  // optional float remaining_duration = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->remaining_duration(), target);
  }

  // repeated uint32 auxiliary_units_handles = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(6, this->auxiliary_units_handles_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Modifier)
  return target;
}

size_t CMsgBotWorldState_Modifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Modifier)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 auxiliary_units_handles = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->auxiliary_units_handles_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->auxiliary_units_handles_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 stack_count = 2;
    if (has_stack_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stack_count());
    }

    // optional uint32 ability_handle = 3;
    if (has_ability_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_handle());
    }

    // optional uint32 ability_id = 4;
    if (has_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_id());
    }

    // optional float remaining_duration = 5;
    if (has_remaining_duration()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Modifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Modifier)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Modifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Modifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Modifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Modifier)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Modifier::MergeFrom(const CMsgBotWorldState_Modifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Modifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  auxiliary_units_handles_.MergeFrom(from.auxiliary_units_handles_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      stack_count_ = from.stack_count_;
    }
    if (cached_has_bits & 0x00000004u) {
      ability_handle_ = from.ability_handle_;
    }
    if (cached_has_bits & 0x00000008u) {
      ability_id_ = from.ability_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      remaining_duration_ = from.remaining_duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Modifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Modifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Modifier::CopyFrom(const CMsgBotWorldState_Modifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Modifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Modifier::IsInitialized() const {
  return true;
}

void CMsgBotWorldState_Modifier::Swap(CMsgBotWorldState_Modifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Modifier::InternalSwap(CMsgBotWorldState_Modifier* other) {
  using std::swap;
  auxiliary_units_handles_.InternalSwap(&other->auxiliary_units_handles_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(stack_count_, other->stack_count_);
  swap(ability_handle_, other->ability_handle_);
  swap(ability_id_, other->ability_id_);
  swap(remaining_duration_, other->remaining_duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Modifier::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_LinearProjectile::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_LinearProjectile_default_instance_._instance.get_mutable()->location_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
  ::_CMsgBotWorldState_LinearProjectile_default_instance_._instance.get_mutable()->velocity_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_LinearProjectile::kHandleFieldNumber;
const int CMsgBotWorldState_LinearProjectile::kCasterHandleFieldNumber;
const int CMsgBotWorldState_LinearProjectile::kCasterUnitTypeFieldNumber;
const int CMsgBotWorldState_LinearProjectile::kCasterPlayerIdFieldNumber;
const int CMsgBotWorldState_LinearProjectile::kAbilityHandleFieldNumber;
const int CMsgBotWorldState_LinearProjectile::kAbilityIdFieldNumber;
const int CMsgBotWorldState_LinearProjectile::kLocationFieldNumber;
const int CMsgBotWorldState_LinearProjectile::kVelocityFieldNumber;
const int CMsgBotWorldState_LinearProjectile::kRadiusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_LinearProjectile::CMsgBotWorldState_LinearProjectile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_LinearProjectile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.LinearProjectile)
}
CMsgBotWorldState_LinearProjectile::CMsgBotWorldState_LinearProjectile(const CMsgBotWorldState_LinearProjectile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::CMsgBotWorldState_Vector(*from.location_);
  } else {
    location_ = NULL;
  }
  if (from.has_velocity()) {
    velocity_ = new ::CMsgBotWorldState_Vector(*from.velocity_);
  } else {
    velocity_ = NULL;
  }
  ::memcpy(&handle_, &from.handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&caster_unit_type_) -
    reinterpret_cast<char*>(&handle_)) + sizeof(caster_unit_type_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.LinearProjectile)
}

void CMsgBotWorldState_LinearProjectile::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&caster_unit_type_) -
      reinterpret_cast<char*>(&location_)) + sizeof(caster_unit_type_));
}

CMsgBotWorldState_LinearProjectile::~CMsgBotWorldState_LinearProjectile() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.LinearProjectile)
  SharedDtor();
}

void CMsgBotWorldState_LinearProjectile::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
  if (this != internal_default_instance()) delete velocity_;
}

void CMsgBotWorldState_LinearProjectile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_LinearProjectile::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_LinearProjectile& CMsgBotWorldState_LinearProjectile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_LinearProjectile.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_LinearProjectile::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.LinearProjectile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(location_ != NULL);
      location_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(velocity_ != NULL);
      velocity_->Clear();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&radius_) -
        reinterpret_cast<char*>(&handle_)) + sizeof(radius_));
  }
  caster_unit_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_LinearProjectile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.LinearProjectile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 caster_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_caster_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &caster_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 caster_player_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_caster_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ability_handle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_ability_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ability_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Vector location = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Vector velocity = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 radius = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_radius();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.UnitType caster_unit_type = 9 [default = INVALID];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgBotWorldState_UnitType_IsValid(value)) {
            set_caster_unit_type(static_cast< ::CMsgBotWorldState_UnitType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                9, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.LinearProjectile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.LinearProjectile)
  return false;
#undef DO_
}

void CMsgBotWorldState_LinearProjectile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.LinearProjectile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 handle = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->handle(), output);
  }

  // optional uint32 caster_handle = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->caster_handle(), output);
  }

  // optional int32 caster_player_id = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->caster_player_id(), output);
  }

  // optional uint32 ability_handle = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ability_handle(), output);
  }

  // optional uint32 ability_id = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ability_id(), output);
  }

  // optional .CMsgBotWorldState.Vector location = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_location(), output);
  }

  // optional .CMsgBotWorldState.Vector velocity = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_velocity(), output);
  }

  // optional uint32 radius = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->radius(), output);
  }

  // optional .CMsgBotWorldState.UnitType caster_unit_type = 9 [default = INVALID];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->caster_unit_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.LinearProjectile)
}

::google::protobuf::uint8* CMsgBotWorldState_LinearProjectile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.LinearProjectile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 handle = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->handle(), target);
  }

  // optional uint32 caster_handle = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->caster_handle(), target);
  }

  // optional int32 caster_player_id = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->caster_player_id(), target);
  }

  // optional uint32 ability_handle = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ability_handle(), target);
  }

  // optional uint32 ability_id = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ability_id(), target);
  }

  // optional .CMsgBotWorldState.Vector location = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_location(), deterministic, target);
  }

  // optional .CMsgBotWorldState.Vector velocity = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_velocity(), deterministic, target);
  }

  // optional uint32 radius = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->radius(), target);
  }

  // optional .CMsgBotWorldState.UnitType caster_unit_type = 9 [default = INVALID];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->caster_unit_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.LinearProjectile)
  return target;
}

size_t CMsgBotWorldState_LinearProjectile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.LinearProjectile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .CMsgBotWorldState.Vector location = 6;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *location_);
    }

    // optional .CMsgBotWorldState.Vector velocity = 7;
    if (has_velocity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *velocity_);
    }

    // optional uint32 handle = 1;
    if (has_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->handle());
    }

    // optional uint32 caster_handle = 2;
    if (has_caster_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->caster_handle());
    }

    // optional int32 caster_player_id = 3;
    if (has_caster_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_player_id());
    }

    // optional uint32 ability_handle = 4;
    if (has_ability_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_handle());
    }

    // optional uint32 ability_id = 5;
    if (has_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_id());
    }

    // optional uint32 radius = 8;
    if (has_radius()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->radius());
    }

  }
  // optional .CMsgBotWorldState.UnitType caster_unit_type = 9 [default = INVALID];
  if (has_caster_unit_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->caster_unit_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_LinearProjectile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.LinearProjectile)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_LinearProjectile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_LinearProjectile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.LinearProjectile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.LinearProjectile)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_LinearProjectile::MergeFrom(const CMsgBotWorldState_LinearProjectile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.LinearProjectile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_location()->::CMsgBotWorldState_Vector::MergeFrom(from.location());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_velocity()->::CMsgBotWorldState_Vector::MergeFrom(from.velocity());
    }
    if (cached_has_bits & 0x00000004u) {
      handle_ = from.handle_;
    }
    if (cached_has_bits & 0x00000008u) {
      caster_handle_ = from.caster_handle_;
    }
    if (cached_has_bits & 0x00000010u) {
      caster_player_id_ = from.caster_player_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      ability_handle_ = from.ability_handle_;
    }
    if (cached_has_bits & 0x00000040u) {
      ability_id_ = from.ability_id_;
    }
    if (cached_has_bits & 0x00000080u) {
      radius_ = from.radius_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_caster_unit_type(from.caster_unit_type());
  }
}

void CMsgBotWorldState_LinearProjectile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.LinearProjectile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_LinearProjectile::CopyFrom(const CMsgBotWorldState_LinearProjectile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.LinearProjectile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_LinearProjectile::IsInitialized() const {
  if (has_location()) {
    if (!this->location_->IsInitialized()) return false;
  }
  if (has_velocity()) {
    if (!this->velocity_->IsInitialized()) return false;
  }
  return true;
}

void CMsgBotWorldState_LinearProjectile::Swap(CMsgBotWorldState_LinearProjectile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_LinearProjectile::InternalSwap(CMsgBotWorldState_LinearProjectile* other) {
  using std::swap;
  swap(location_, other->location_);
  swap(velocity_, other->velocity_);
  swap(handle_, other->handle_);
  swap(caster_handle_, other->caster_handle_);
  swap(caster_player_id_, other->caster_player_id_);
  swap(ability_handle_, other->ability_handle_);
  swap(ability_id_, other->ability_id_);
  swap(radius_, other->radius_);
  swap(caster_unit_type_, other->caster_unit_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_LinearProjectile::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_TrackingProjectile::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_TrackingProjectile_default_instance_._instance.get_mutable()->location_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_TrackingProjectile::kCasterHandleFieldNumber;
const int CMsgBotWorldState_TrackingProjectile::kCasterUnitTypeFieldNumber;
const int CMsgBotWorldState_TrackingProjectile::kCasterPlayerIdFieldNumber;
const int CMsgBotWorldState_TrackingProjectile::kAbilityHandleFieldNumber;
const int CMsgBotWorldState_TrackingProjectile::kAbilityIdFieldNumber;
const int CMsgBotWorldState_TrackingProjectile::kLocationFieldNumber;
const int CMsgBotWorldState_TrackingProjectile::kVelocityFieldNumber;
const int CMsgBotWorldState_TrackingProjectile::kIsDodgeableFieldNumber;
const int CMsgBotWorldState_TrackingProjectile::kIsAttackFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_TrackingProjectile::CMsgBotWorldState_TrackingProjectile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_TrackingProjectile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.TrackingProjectile)
}
CMsgBotWorldState_TrackingProjectile::CMsgBotWorldState_TrackingProjectile(const CMsgBotWorldState_TrackingProjectile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::CMsgBotWorldState_Vector(*from.location_);
  } else {
    location_ = NULL;
  }
  ::memcpy(&caster_handle_, &from.caster_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&caster_unit_type_) -
    reinterpret_cast<char*>(&caster_handle_)) + sizeof(caster_unit_type_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.TrackingProjectile)
}

void CMsgBotWorldState_TrackingProjectile::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&caster_unit_type_) -
      reinterpret_cast<char*>(&location_)) + sizeof(caster_unit_type_));
}

CMsgBotWorldState_TrackingProjectile::~CMsgBotWorldState_TrackingProjectile() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.TrackingProjectile)
  SharedDtor();
}

void CMsgBotWorldState_TrackingProjectile::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
}

void CMsgBotWorldState_TrackingProjectile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_TrackingProjectile::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_TrackingProjectile& CMsgBotWorldState_TrackingProjectile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_TrackingProjectile.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_TrackingProjectile::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.TrackingProjectile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(location_ != NULL);
    location_->Clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&caster_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_attack_) -
        reinterpret_cast<char*>(&caster_handle_)) + sizeof(is_attack_));
  }
  caster_unit_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_TrackingProjectile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.TrackingProjectile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 caster_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_caster_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &caster_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 caster_player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_caster_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ability_handle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_ability_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ability_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Vector location = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 velocity = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_velocity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &velocity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_dodgeable = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_is_dodgeable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_dodgeable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_attack = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_is_attack();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_attack_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.UnitType caster_unit_type = 9 [default = INVALID];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgBotWorldState_UnitType_IsValid(value)) {
            set_caster_unit_type(static_cast< ::CMsgBotWorldState_UnitType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                9, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.TrackingProjectile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.TrackingProjectile)
  return false;
#undef DO_
}

void CMsgBotWorldState_TrackingProjectile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.TrackingProjectile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 caster_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->caster_handle(), output);
  }

  // optional int32 caster_player_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->caster_player_id(), output);
  }

  // optional uint32 ability_handle = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ability_handle(), output);
  }

  // optional uint32 ability_id = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ability_id(), output);
  }

  // optional .CMsgBotWorldState.Vector location = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_location(), output);
  }

  // optional uint32 velocity = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->velocity(), output);
  }

  // optional bool is_dodgeable = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_dodgeable(), output);
  }

  // optional bool is_attack = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_attack(), output);
  }

  // optional .CMsgBotWorldState.UnitType caster_unit_type = 9 [default = INVALID];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->caster_unit_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.TrackingProjectile)
}

::google::protobuf::uint8* CMsgBotWorldState_TrackingProjectile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.TrackingProjectile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 caster_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->caster_handle(), target);
  }

  // optional int32 caster_player_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->caster_player_id(), target);
  }

  // optional uint32 ability_handle = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ability_handle(), target);
  }

  // optional uint32 ability_id = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ability_id(), target);
  }

  // optional .CMsgBotWorldState.Vector location = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_location(), deterministic, target);
  }

  // optional uint32 velocity = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->velocity(), target);
  }

  // optional bool is_dodgeable = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_dodgeable(), target);
  }

  // optional bool is_attack = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_attack(), target);
  }

  // optional .CMsgBotWorldState.UnitType caster_unit_type = 9 [default = INVALID];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->caster_unit_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.TrackingProjectile)
  return target;
}

size_t CMsgBotWorldState_TrackingProjectile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.TrackingProjectile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .CMsgBotWorldState.Vector location = 5;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *location_);
    }

    // optional uint32 caster_handle = 1;
    if (has_caster_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->caster_handle());
    }

    // optional int32 caster_player_id = 2;
    if (has_caster_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_player_id());
    }

    // optional uint32 ability_handle = 3;
    if (has_ability_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_handle());
    }

    // optional uint32 ability_id = 4;
    if (has_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_id());
    }

    // optional uint32 velocity = 6;
    if (has_velocity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->velocity());
    }

    // optional bool is_dodgeable = 7;
    if (has_is_dodgeable()) {
      total_size += 1 + 1;
    }

    // optional bool is_attack = 8;
    if (has_is_attack()) {
      total_size += 1 + 1;
    }

  }
  // optional .CMsgBotWorldState.UnitType caster_unit_type = 9 [default = INVALID];
  if (has_caster_unit_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->caster_unit_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_TrackingProjectile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.TrackingProjectile)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_TrackingProjectile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_TrackingProjectile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.TrackingProjectile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.TrackingProjectile)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_TrackingProjectile::MergeFrom(const CMsgBotWorldState_TrackingProjectile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.TrackingProjectile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_location()->::CMsgBotWorldState_Vector::MergeFrom(from.location());
    }
    if (cached_has_bits & 0x00000002u) {
      caster_handle_ = from.caster_handle_;
    }
    if (cached_has_bits & 0x00000004u) {
      caster_player_id_ = from.caster_player_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      ability_handle_ = from.ability_handle_;
    }
    if (cached_has_bits & 0x00000010u) {
      ability_id_ = from.ability_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      velocity_ = from.velocity_;
    }
    if (cached_has_bits & 0x00000040u) {
      is_dodgeable_ = from.is_dodgeable_;
    }
    if (cached_has_bits & 0x00000080u) {
      is_attack_ = from.is_attack_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_caster_unit_type(from.caster_unit_type());
  }
}

void CMsgBotWorldState_TrackingProjectile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.TrackingProjectile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_TrackingProjectile::CopyFrom(const CMsgBotWorldState_TrackingProjectile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.TrackingProjectile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_TrackingProjectile::IsInitialized() const {
  if (has_location()) {
    if (!this->location_->IsInitialized()) return false;
  }
  return true;
}

void CMsgBotWorldState_TrackingProjectile::Swap(CMsgBotWorldState_TrackingProjectile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_TrackingProjectile::InternalSwap(CMsgBotWorldState_TrackingProjectile* other) {
  using std::swap;
  swap(location_, other->location_);
  swap(caster_handle_, other->caster_handle_);
  swap(caster_player_id_, other->caster_player_id_);
  swap(ability_handle_, other->ability_handle_);
  swap(ability_id_, other->ability_id_);
  swap(velocity_, other->velocity_);
  swap(is_dodgeable_, other->is_dodgeable_);
  swap(is_attack_, other->is_attack_);
  swap(caster_unit_type_, other->caster_unit_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_TrackingProjectile::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_AvoidanceZone::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_AvoidanceZone_default_instance_._instance.get_mutable()->location_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_AvoidanceZone::kLocationFieldNumber;
const int CMsgBotWorldState_AvoidanceZone::kCasterHandleFieldNumber;
const int CMsgBotWorldState_AvoidanceZone::kCasterUnitTypeFieldNumber;
const int CMsgBotWorldState_AvoidanceZone::kCasterPlayerIdFieldNumber;
const int CMsgBotWorldState_AvoidanceZone::kAbilityHandleFieldNumber;
const int CMsgBotWorldState_AvoidanceZone::kAbilityIdFieldNumber;
const int CMsgBotWorldState_AvoidanceZone::kRadiusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_AvoidanceZone::CMsgBotWorldState_AvoidanceZone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_AvoidanceZone.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.AvoidanceZone)
}
CMsgBotWorldState_AvoidanceZone::CMsgBotWorldState_AvoidanceZone(const CMsgBotWorldState_AvoidanceZone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::CMsgBotWorldState_Vector(*from.location_);
  } else {
    location_ = NULL;
  }
  ::memcpy(&caster_handle_, &from.caster_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&caster_unit_type_) -
    reinterpret_cast<char*>(&caster_handle_)) + sizeof(caster_unit_type_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.AvoidanceZone)
}

void CMsgBotWorldState_AvoidanceZone::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&caster_unit_type_) -
      reinterpret_cast<char*>(&location_)) + sizeof(caster_unit_type_));
}

CMsgBotWorldState_AvoidanceZone::~CMsgBotWorldState_AvoidanceZone() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.AvoidanceZone)
  SharedDtor();
}

void CMsgBotWorldState_AvoidanceZone::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
}

void CMsgBotWorldState_AvoidanceZone::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_AvoidanceZone::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_AvoidanceZone& CMsgBotWorldState_AvoidanceZone::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_AvoidanceZone.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_AvoidanceZone::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.AvoidanceZone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(location_ != NULL);
    location_->Clear();
  }
  if (cached_has_bits & 126u) {
    ::memset(&caster_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&caster_unit_type_) -
        reinterpret_cast<char*>(&caster_handle_)) + sizeof(caster_unit_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_AvoidanceZone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.AvoidanceZone)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgBotWorldState.Vector location = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 caster_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_caster_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &caster_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 caster_player_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_caster_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ability_handle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_ability_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ability_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 radius = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_radius();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.UnitType caster_unit_type = 7 [default = INVALID];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgBotWorldState_UnitType_IsValid(value)) {
            set_caster_unit_type(static_cast< ::CMsgBotWorldState_UnitType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.AvoidanceZone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.AvoidanceZone)
  return false;
#undef DO_
}

void CMsgBotWorldState_AvoidanceZone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.AvoidanceZone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgBotWorldState.Vector location = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_location(), output);
  }

  // optional uint32 caster_handle = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->caster_handle(), output);
  }

  // optional int32 caster_player_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->caster_player_id(), output);
  }

  // optional uint32 ability_handle = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ability_handle(), output);
  }

  // optional uint32 ability_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ability_id(), output);
  }

  // optional uint32 radius = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->radius(), output);
  }

  // optional .CMsgBotWorldState.UnitType caster_unit_type = 7 [default = INVALID];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->caster_unit_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.AvoidanceZone)
}

::google::protobuf::uint8* CMsgBotWorldState_AvoidanceZone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.AvoidanceZone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgBotWorldState.Vector location = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_location(), deterministic, target);
  }

  // optional uint32 caster_handle = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->caster_handle(), target);
  }

  // optional int32 caster_player_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->caster_player_id(), target);
  }

  // optional uint32 ability_handle = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ability_handle(), target);
  }

  // optional uint32 ability_id = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ability_id(), target);
  }

  // optional uint32 radius = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->radius(), target);
  }

  // optional .CMsgBotWorldState.UnitType caster_unit_type = 7 [default = INVALID];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->caster_unit_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.AvoidanceZone)
  return target;
}

size_t CMsgBotWorldState_AvoidanceZone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.AvoidanceZone)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional .CMsgBotWorldState.Vector location = 1;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *location_);
    }

    // optional uint32 caster_handle = 2;
    if (has_caster_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->caster_handle());
    }

    // optional int32 caster_player_id = 3;
    if (has_caster_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_player_id());
    }

    // optional uint32 ability_handle = 4;
    if (has_ability_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_handle());
    }

    // optional uint32 ability_id = 5;
    if (has_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_id());
    }

    // optional uint32 radius = 6;
    if (has_radius()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->radius());
    }

    // optional .CMsgBotWorldState.UnitType caster_unit_type = 7 [default = INVALID];
    if (has_caster_unit_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->caster_unit_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_AvoidanceZone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.AvoidanceZone)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_AvoidanceZone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_AvoidanceZone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.AvoidanceZone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.AvoidanceZone)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_AvoidanceZone::MergeFrom(const CMsgBotWorldState_AvoidanceZone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.AvoidanceZone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_location()->::CMsgBotWorldState_Vector::MergeFrom(from.location());
    }
    if (cached_has_bits & 0x00000002u) {
      caster_handle_ = from.caster_handle_;
    }
    if (cached_has_bits & 0x00000004u) {
      caster_player_id_ = from.caster_player_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      ability_handle_ = from.ability_handle_;
    }
    if (cached_has_bits & 0x00000010u) {
      ability_id_ = from.ability_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      radius_ = from.radius_;
    }
    if (cached_has_bits & 0x00000040u) {
      caster_unit_type_ = from.caster_unit_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_AvoidanceZone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.AvoidanceZone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_AvoidanceZone::CopyFrom(const CMsgBotWorldState_AvoidanceZone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.AvoidanceZone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_AvoidanceZone::IsInitialized() const {
  if (has_location()) {
    if (!this->location_->IsInitialized()) return false;
  }
  return true;
}

void CMsgBotWorldState_AvoidanceZone::Swap(CMsgBotWorldState_AvoidanceZone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_AvoidanceZone::InternalSwap(CMsgBotWorldState_AvoidanceZone* other) {
  using std::swap;
  swap(location_, other->location_);
  swap(caster_handle_, other->caster_handle_);
  swap(caster_player_id_, other->caster_player_id_);
  swap(ability_handle_, other->ability_handle_);
  swap(ability_id_, other->ability_id_);
  swap(radius_, other->radius_);
  swap(caster_unit_type_, other->caster_unit_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_AvoidanceZone::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Courier::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Courier::kHandleFieldNumber;
const int CMsgBotWorldState_Courier::kStateFieldNumber;
const int CMsgBotWorldState_Courier::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Courier::CMsgBotWorldState_Courier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Courier.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Courier)
}
CMsgBotWorldState_Courier::CMsgBotWorldState_Courier(const CMsgBotWorldState_Courier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&handle_, &from.handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&handle_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Courier)
}

void CMsgBotWorldState_Courier::SharedCtor() {
  ::memset(&handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_id_) -
      reinterpret_cast<char*>(&handle_)) + sizeof(player_id_));
  state_ = -1;
}

CMsgBotWorldState_Courier::~CMsgBotWorldState_Courier() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Courier)
  SharedDtor();
}

void CMsgBotWorldState_Courier::SharedDtor() {
}

void CMsgBotWorldState_Courier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Courier::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Courier& CMsgBotWorldState_Courier::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Courier.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Courier::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Courier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&player_id_) -
        reinterpret_cast<char*>(&handle_)) + sizeof(player_id_));
    state_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Courier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Courier)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.CourierState state = 2 [default = COURIER_STATE_INIT];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgBotWorldState_CourierState_IsValid(value)) {
            set_state(static_cast< ::CMsgBotWorldState_CourierState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 player_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Courier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Courier)
  return false;
#undef DO_
}

void CMsgBotWorldState_Courier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Courier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->handle(), output);
  }

  // optional .CMsgBotWorldState.CourierState state = 2 [default = COURIER_STATE_INIT];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // optional int32 player_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->player_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Courier)
}

::google::protobuf::uint8* CMsgBotWorldState_Courier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Courier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->handle(), target);
  }

  // optional .CMsgBotWorldState.CourierState state = 2 [default = COURIER_STATE_INIT];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // optional int32 player_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->player_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Courier)
  return target;
}

size_t CMsgBotWorldState_Courier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Courier)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 handle = 1;
    if (has_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->handle());
    }

    // optional int32 player_id = 3;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_id());
    }

    // optional .CMsgBotWorldState.CourierState state = 2 [default = COURIER_STATE_INIT];
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Courier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Courier)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Courier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Courier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Courier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Courier)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Courier::MergeFrom(const CMsgBotWorldState_Courier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Courier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      handle_ = from.handle_;
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Courier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Courier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Courier::CopyFrom(const CMsgBotWorldState_Courier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Courier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Courier::IsInitialized() const {
  return true;
}

void CMsgBotWorldState_Courier::Swap(CMsgBotWorldState_Courier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Courier::InternalSwap(CMsgBotWorldState_Courier* other) {
  using std::swap;
  swap(handle_, other->handle_);
  swap(player_id_, other->player_id_);
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Courier::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_EventAbility::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_EventAbility_default_instance_._instance.get_mutable()->location_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_EventAbility::kAbilityIdFieldNumber;
const int CMsgBotWorldState_EventAbility::kPlayerIdFieldNumber;
const int CMsgBotWorldState_EventAbility::kUnitHandleFieldNumber;
const int CMsgBotWorldState_EventAbility::kLocationFieldNumber;
const int CMsgBotWorldState_EventAbility::kIsChannelStartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_EventAbility::CMsgBotWorldState_EventAbility()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_EventAbility.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.EventAbility)
}
CMsgBotWorldState_EventAbility::CMsgBotWorldState_EventAbility(const CMsgBotWorldState_EventAbility& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::CMsgBotWorldState_Vector(*from.location_);
  } else {
    location_ = NULL;
  }
  ::memcpy(&ability_id_, &from.ability_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_channel_start_) -
    reinterpret_cast<char*>(&ability_id_)) + sizeof(is_channel_start_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.EventAbility)
}

void CMsgBotWorldState_EventAbility::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_channel_start_) -
      reinterpret_cast<char*>(&location_)) + sizeof(is_channel_start_));
}

CMsgBotWorldState_EventAbility::~CMsgBotWorldState_EventAbility() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.EventAbility)
  SharedDtor();
}

void CMsgBotWorldState_EventAbility::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
}

void CMsgBotWorldState_EventAbility::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_EventAbility::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_EventAbility& CMsgBotWorldState_EventAbility::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_EventAbility.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_EventAbility::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.EventAbility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(location_ != NULL);
    location_->Clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&ability_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_channel_start_) -
        reinterpret_cast<char*>(&ability_id_)) + sizeof(is_channel_start_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_EventAbility::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.EventAbility)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ability_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 unit_handle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_unit_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unit_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Vector location = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_channel_start = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_is_channel_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_channel_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.EventAbility)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.EventAbility)
  return false;
#undef DO_
}

void CMsgBotWorldState_EventAbility::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.EventAbility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ability_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ability_id(), output);
  }

  // optional int32 player_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->player_id(), output);
  }

  // optional uint32 unit_handle = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->unit_handle(), output);
  }

  // optional .CMsgBotWorldState.Vector location = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_location(), output);
  }

  // optional bool is_channel_start = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_channel_start(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.EventAbility)
}

::google::protobuf::uint8* CMsgBotWorldState_EventAbility::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.EventAbility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ability_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ability_id(), target);
  }

  // optional int32 player_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->player_id(), target);
  }

  // optional uint32 unit_handle = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->unit_handle(), target);
  }

  // optional .CMsgBotWorldState.Vector location = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_location(), deterministic, target);
  }

  // optional bool is_channel_start = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_channel_start(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.EventAbility)
  return target;
}

size_t CMsgBotWorldState_EventAbility::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.EventAbility)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .CMsgBotWorldState.Vector location = 4;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *location_);
    }

    // optional uint32 ability_id = 1;
    if (has_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_id());
    }

    // optional int32 player_id = 2;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_id());
    }

    // optional uint32 unit_handle = 3;
    if (has_unit_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->unit_handle());
    }

    // optional bool is_channel_start = 5;
    if (has_is_channel_start()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_EventAbility::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.EventAbility)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_EventAbility* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_EventAbility>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.EventAbility)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.EventAbility)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_EventAbility::MergeFrom(const CMsgBotWorldState_EventAbility& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.EventAbility)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_location()->::CMsgBotWorldState_Vector::MergeFrom(from.location());
    }
    if (cached_has_bits & 0x00000002u) {
      ability_id_ = from.ability_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      unit_handle_ = from.unit_handle_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_channel_start_ = from.is_channel_start_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_EventAbility::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.EventAbility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_EventAbility::CopyFrom(const CMsgBotWorldState_EventAbility& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.EventAbility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_EventAbility::IsInitialized() const {
  if (has_location()) {
    if (!this->location_->IsInitialized()) return false;
  }
  return true;
}

void CMsgBotWorldState_EventAbility::Swap(CMsgBotWorldState_EventAbility* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_EventAbility::InternalSwap(CMsgBotWorldState_EventAbility* other) {
  using std::swap;
  swap(location_, other->location_);
  swap(ability_id_, other->ability_id_);
  swap(player_id_, other->player_id_);
  swap(unit_handle_, other->unit_handle_);
  swap(is_channel_start_, other->is_channel_start_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_EventAbility::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_EventDamage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_EventDamage::kDamageFieldNumber;
const int CMsgBotWorldState_EventDamage::kVictimPlayerIdFieldNumber;
const int CMsgBotWorldState_EventDamage::kVictimUnitHandleFieldNumber;
const int CMsgBotWorldState_EventDamage::kAttackerPlayerIdFieldNumber;
const int CMsgBotWorldState_EventDamage::kAttackerUnitHandleFieldNumber;
const int CMsgBotWorldState_EventDamage::kAbilityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_EventDamage::CMsgBotWorldState_EventDamage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_EventDamage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.EventDamage)
}
CMsgBotWorldState_EventDamage::CMsgBotWorldState_EventDamage(const CMsgBotWorldState_EventDamage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&damage_, &from.damage_,
    static_cast<size_t>(reinterpret_cast<char*>(&ability_id_) -
    reinterpret_cast<char*>(&damage_)) + sizeof(ability_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.EventDamage)
}

void CMsgBotWorldState_EventDamage::SharedCtor() {
  ::memset(&damage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ability_id_) -
      reinterpret_cast<char*>(&damage_)) + sizeof(ability_id_));
}

CMsgBotWorldState_EventDamage::~CMsgBotWorldState_EventDamage() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.EventDamage)
  SharedDtor();
}

void CMsgBotWorldState_EventDamage::SharedDtor() {
}

void CMsgBotWorldState_EventDamage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_EventDamage::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_EventDamage& CMsgBotWorldState_EventDamage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_EventDamage.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_EventDamage::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.EventDamage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&damage_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ability_id_) -
        reinterpret_cast<char*>(&damage_)) + sizeof(ability_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_EventDamage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.EventDamage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 damage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_damage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 victim_player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_victim_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &victim_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 victim_unit_handle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_victim_unit_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &victim_unit_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 attacker_player_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_attacker_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attacker_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 attacker_unit_handle = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_attacker_unit_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attacker_unit_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ability_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.EventDamage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.EventDamage)
  return false;
#undef DO_
}

void CMsgBotWorldState_EventDamage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.EventDamage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 damage = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->damage(), output);
  }

  // optional int32 victim_player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->victim_player_id(), output);
  }

  // optional uint32 victim_unit_handle = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->victim_unit_handle(), output);
  }

  // optional int32 attacker_player_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->attacker_player_id(), output);
  }

  // optional uint32 attacker_unit_handle = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->attacker_unit_handle(), output);
  }

  // optional uint32 ability_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->ability_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.EventDamage)
}

::google::protobuf::uint8* CMsgBotWorldState_EventDamage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.EventDamage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 damage = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->damage(), target);
  }

  // optional int32 victim_player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->victim_player_id(), target);
  }

  // optional uint32 victim_unit_handle = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->victim_unit_handle(), target);
  }

  // optional int32 attacker_player_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->attacker_player_id(), target);
  }

  // optional uint32 attacker_unit_handle = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->attacker_unit_handle(), target);
  }

  // optional uint32 ability_id = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->ability_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.EventDamage)
  return target;
}

size_t CMsgBotWorldState_EventDamage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.EventDamage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 damage = 1;
    if (has_damage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->damage());
    }

    // optional int32 victim_player_id = 2;
    if (has_victim_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->victim_player_id());
    }

    // optional uint32 victim_unit_handle = 3;
    if (has_victim_unit_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->victim_unit_handle());
    }

    // optional int32 attacker_player_id = 4;
    if (has_attacker_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attacker_player_id());
    }

    // optional uint32 attacker_unit_handle = 5;
    if (has_attacker_unit_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attacker_unit_handle());
    }

    // optional uint32 ability_id = 6;
    if (has_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_EventDamage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.EventDamage)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_EventDamage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_EventDamage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.EventDamage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.EventDamage)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_EventDamage::MergeFrom(const CMsgBotWorldState_EventDamage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.EventDamage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      damage_ = from.damage_;
    }
    if (cached_has_bits & 0x00000002u) {
      victim_player_id_ = from.victim_player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      victim_unit_handle_ = from.victim_unit_handle_;
    }
    if (cached_has_bits & 0x00000008u) {
      attacker_player_id_ = from.attacker_player_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      attacker_unit_handle_ = from.attacker_unit_handle_;
    }
    if (cached_has_bits & 0x00000020u) {
      ability_id_ = from.ability_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_EventDamage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.EventDamage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_EventDamage::CopyFrom(const CMsgBotWorldState_EventDamage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.EventDamage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_EventDamage::IsInitialized() const {
  return true;
}

void CMsgBotWorldState_EventDamage::Swap(CMsgBotWorldState_EventDamage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_EventDamage::InternalSwap(CMsgBotWorldState_EventDamage* other) {
  using std::swap;
  swap(damage_, other->damage_);
  swap(victim_player_id_, other->victim_player_id_);
  swap(victim_unit_handle_, other->victim_unit_handle_);
  swap(attacker_player_id_, other->attacker_player_id_);
  swap(attacker_unit_handle_, other->attacker_unit_handle_);
  swap(ability_id_, other->ability_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_EventDamage::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_EventCourierKilled::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_EventCourierKilled::kTeamIdFieldNumber;
const int CMsgBotWorldState_EventCourierKilled::kCourierUnitHandleFieldNumber;
const int CMsgBotWorldState_EventCourierKilled::kKillerPlayerIdFieldNumber;
const int CMsgBotWorldState_EventCourierKilled::kKillerUnitHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_EventCourierKilled::CMsgBotWorldState_EventCourierKilled()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_EventCourierKilled.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.EventCourierKilled)
}
CMsgBotWorldState_EventCourierKilled::CMsgBotWorldState_EventCourierKilled(const CMsgBotWorldState_EventCourierKilled& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&team_id_, &from.team_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&killer_unit_handle_) -
    reinterpret_cast<char*>(&team_id_)) + sizeof(killer_unit_handle_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.EventCourierKilled)
}

void CMsgBotWorldState_EventCourierKilled::SharedCtor() {
  ::memset(&team_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&killer_unit_handle_) -
      reinterpret_cast<char*>(&team_id_)) + sizeof(killer_unit_handle_));
}

CMsgBotWorldState_EventCourierKilled::~CMsgBotWorldState_EventCourierKilled() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.EventCourierKilled)
  SharedDtor();
}

void CMsgBotWorldState_EventCourierKilled::SharedDtor() {
}

void CMsgBotWorldState_EventCourierKilled::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_EventCourierKilled::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_EventCourierKilled& CMsgBotWorldState_EventCourierKilled::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_EventCourierKilled.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_EventCourierKilled::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.EventCourierKilled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&team_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&killer_unit_handle_) -
        reinterpret_cast<char*>(&team_id_)) + sizeof(killer_unit_handle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_EventCourierKilled::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.EventCourierKilled)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 team_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_team_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 courier_unit_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_courier_unit_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &courier_unit_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 killer_player_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_killer_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &killer_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 killer_unit_handle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_killer_unit_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &killer_unit_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.EventCourierKilled)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.EventCourierKilled)
  return false;
#undef DO_
}

void CMsgBotWorldState_EventCourierKilled::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.EventCourierKilled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 team_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->team_id(), output);
  }

  // optional uint32 courier_unit_handle = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->courier_unit_handle(), output);
  }

  // optional int32 killer_player_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->killer_player_id(), output);
  }

  // optional uint32 killer_unit_handle = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->killer_unit_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.EventCourierKilled)
}

::google::protobuf::uint8* CMsgBotWorldState_EventCourierKilled::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.EventCourierKilled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 team_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->team_id(), target);
  }

  // optional uint32 courier_unit_handle = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->courier_unit_handle(), target);
  }

  // optional int32 killer_player_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->killer_player_id(), target);
  }

  // optional uint32 killer_unit_handle = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->killer_unit_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.EventCourierKilled)
  return target;
}

size_t CMsgBotWorldState_EventCourierKilled::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.EventCourierKilled)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 team_id = 1;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->team_id());
    }

    // optional uint32 courier_unit_handle = 2;
    if (has_courier_unit_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->courier_unit_handle());
    }

    // optional int32 killer_player_id = 3;
    if (has_killer_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->killer_player_id());
    }

    // optional uint32 killer_unit_handle = 4;
    if (has_killer_unit_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->killer_unit_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_EventCourierKilled::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.EventCourierKilled)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_EventCourierKilled* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_EventCourierKilled>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.EventCourierKilled)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.EventCourierKilled)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_EventCourierKilled::MergeFrom(const CMsgBotWorldState_EventCourierKilled& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.EventCourierKilled)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      team_id_ = from.team_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      courier_unit_handle_ = from.courier_unit_handle_;
    }
    if (cached_has_bits & 0x00000004u) {
      killer_player_id_ = from.killer_player_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      killer_unit_handle_ = from.killer_unit_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_EventCourierKilled::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.EventCourierKilled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_EventCourierKilled::CopyFrom(const CMsgBotWorldState_EventCourierKilled& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.EventCourierKilled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_EventCourierKilled::IsInitialized() const {
  return true;
}

void CMsgBotWorldState_EventCourierKilled::Swap(CMsgBotWorldState_EventCourierKilled* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_EventCourierKilled::InternalSwap(CMsgBotWorldState_EventCourierKilled* other) {
  using std::swap;
  swap(team_id_, other->team_id_);
  swap(courier_unit_handle_, other->courier_unit_handle_);
  swap(killer_player_id_, other->killer_player_id_);
  swap(killer_unit_handle_, other->killer_unit_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_EventCourierKilled::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_EventRoshanKilled::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_EventRoshanKilled::kKillerPlayerIdFieldNumber;
const int CMsgBotWorldState_EventRoshanKilled::kKillerUnitHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_EventRoshanKilled::CMsgBotWorldState_EventRoshanKilled()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_EventRoshanKilled.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.EventRoshanKilled)
}
CMsgBotWorldState_EventRoshanKilled::CMsgBotWorldState_EventRoshanKilled(const CMsgBotWorldState_EventRoshanKilled& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&killer_player_id_, &from.killer_player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&killer_unit_handle_) -
    reinterpret_cast<char*>(&killer_player_id_)) + sizeof(killer_unit_handle_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.EventRoshanKilled)
}

void CMsgBotWorldState_EventRoshanKilled::SharedCtor() {
  ::memset(&killer_player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&killer_unit_handle_) -
      reinterpret_cast<char*>(&killer_player_id_)) + sizeof(killer_unit_handle_));
}

CMsgBotWorldState_EventRoshanKilled::~CMsgBotWorldState_EventRoshanKilled() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.EventRoshanKilled)
  SharedDtor();
}

void CMsgBotWorldState_EventRoshanKilled::SharedDtor() {
}

void CMsgBotWorldState_EventRoshanKilled::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_EventRoshanKilled::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_EventRoshanKilled& CMsgBotWorldState_EventRoshanKilled::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_EventRoshanKilled.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_EventRoshanKilled::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.EventRoshanKilled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&killer_player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&killer_unit_handle_) -
        reinterpret_cast<char*>(&killer_player_id_)) + sizeof(killer_unit_handle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_EventRoshanKilled::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.EventRoshanKilled)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 killer_player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_killer_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &killer_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 killer_unit_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_killer_unit_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &killer_unit_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.EventRoshanKilled)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.EventRoshanKilled)
  return false;
#undef DO_
}

void CMsgBotWorldState_EventRoshanKilled::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.EventRoshanKilled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 killer_player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->killer_player_id(), output);
  }

  // optional uint32 killer_unit_handle = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->killer_unit_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.EventRoshanKilled)
}

::google::protobuf::uint8* CMsgBotWorldState_EventRoshanKilled::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.EventRoshanKilled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 killer_player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->killer_player_id(), target);
  }

  // optional uint32 killer_unit_handle = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->killer_unit_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.EventRoshanKilled)
  return target;
}

size_t CMsgBotWorldState_EventRoshanKilled::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.EventRoshanKilled)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 killer_player_id = 1;
    if (has_killer_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->killer_player_id());
    }

    // optional uint32 killer_unit_handle = 2;
    if (has_killer_unit_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->killer_unit_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_EventRoshanKilled::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.EventRoshanKilled)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_EventRoshanKilled* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_EventRoshanKilled>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.EventRoshanKilled)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.EventRoshanKilled)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_EventRoshanKilled::MergeFrom(const CMsgBotWorldState_EventRoshanKilled& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.EventRoshanKilled)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      killer_player_id_ = from.killer_player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      killer_unit_handle_ = from.killer_unit_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_EventRoshanKilled::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.EventRoshanKilled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_EventRoshanKilled::CopyFrom(const CMsgBotWorldState_EventRoshanKilled& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.EventRoshanKilled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_EventRoshanKilled::IsInitialized() const {
  return true;
}

void CMsgBotWorldState_EventRoshanKilled::Swap(CMsgBotWorldState_EventRoshanKilled* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_EventRoshanKilled::InternalSwap(CMsgBotWorldState_EventRoshanKilled* other) {
  using std::swap;
  swap(killer_player_id_, other->killer_player_id_);
  swap(killer_unit_handle_, other->killer_unit_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_EventRoshanKilled::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_EventTree::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_EventTree_default_instance_._instance.get_mutable()->location_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_EventTree::kTreeIdFieldNumber;
const int CMsgBotWorldState_EventTree::kDestroyedFieldNumber;
const int CMsgBotWorldState_EventTree::kRespawnedFieldNumber;
const int CMsgBotWorldState_EventTree::kLocationFieldNumber;
const int CMsgBotWorldState_EventTree::kDelayedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_EventTree::CMsgBotWorldState_EventTree()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_EventTree.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.EventTree)
}
CMsgBotWorldState_EventTree::CMsgBotWorldState_EventTree(const CMsgBotWorldState_EventTree& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::CMsgBotWorldState_Vector(*from.location_);
  } else {
    location_ = NULL;
  }
  ::memcpy(&tree_id_, &from.tree_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&delayed_) -
    reinterpret_cast<char*>(&tree_id_)) + sizeof(delayed_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.EventTree)
}

void CMsgBotWorldState_EventTree::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delayed_) -
      reinterpret_cast<char*>(&location_)) + sizeof(delayed_));
}

CMsgBotWorldState_EventTree::~CMsgBotWorldState_EventTree() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.EventTree)
  SharedDtor();
}

void CMsgBotWorldState_EventTree::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
}

void CMsgBotWorldState_EventTree::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_EventTree::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_EventTree& CMsgBotWorldState_EventTree::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_EventTree.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_EventTree::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.EventTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(location_ != NULL);
    location_->Clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&tree_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&delayed_) -
        reinterpret_cast<char*>(&tree_id_)) + sizeof(delayed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_EventTree::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.EventTree)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tree_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tree_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tree_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool destroyed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_destroyed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &destroyed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool respawned = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_respawned();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &respawned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Vector location = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool delayed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_delayed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &delayed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.EventTree)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.EventTree)
  return false;
#undef DO_
}

void CMsgBotWorldState_EventTree::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.EventTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tree_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tree_id(), output);
  }

  // optional bool destroyed = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->destroyed(), output);
  }

  // optional bool respawned = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->respawned(), output);
  }

  // optional .CMsgBotWorldState.Vector location = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_location(), output);
  }

  // optional bool delayed = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->delayed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.EventTree)
}

::google::protobuf::uint8* CMsgBotWorldState_EventTree::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.EventTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tree_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tree_id(), target);
  }

  // optional bool destroyed = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->destroyed(), target);
  }

  // optional bool respawned = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->respawned(), target);
  }

  // optional .CMsgBotWorldState.Vector location = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_location(), deterministic, target);
  }

  // optional bool delayed = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->delayed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.EventTree)
  return target;
}

size_t CMsgBotWorldState_EventTree::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.EventTree)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .CMsgBotWorldState.Vector location = 4;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *location_);
    }

    // optional uint32 tree_id = 1;
    if (has_tree_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tree_id());
    }

    // optional bool destroyed = 2;
    if (has_destroyed()) {
      total_size += 1 + 1;
    }

    // optional bool respawned = 3;
    if (has_respawned()) {
      total_size += 1 + 1;
    }

    // optional bool delayed = 5;
    if (has_delayed()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_EventTree::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.EventTree)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_EventTree* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_EventTree>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.EventTree)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.EventTree)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_EventTree::MergeFrom(const CMsgBotWorldState_EventTree& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.EventTree)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_location()->::CMsgBotWorldState_Vector::MergeFrom(from.location());
    }
    if (cached_has_bits & 0x00000002u) {
      tree_id_ = from.tree_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      destroyed_ = from.destroyed_;
    }
    if (cached_has_bits & 0x00000008u) {
      respawned_ = from.respawned_;
    }
    if (cached_has_bits & 0x00000010u) {
      delayed_ = from.delayed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_EventTree::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.EventTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_EventTree::CopyFrom(const CMsgBotWorldState_EventTree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.EventTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_EventTree::IsInitialized() const {
  if (has_location()) {
    if (!this->location_->IsInitialized()) return false;
  }
  return true;
}

void CMsgBotWorldState_EventTree::Swap(CMsgBotWorldState_EventTree* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_EventTree::InternalSwap(CMsgBotWorldState_EventTree* other) {
  using std::swap;
  swap(location_, other->location_);
  swap(tree_id_, other->tree_id_);
  swap(destroyed_, other->destroyed_);
  swap(respawned_, other->respawned_);
  swap(delayed_, other->delayed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_EventTree::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Unit::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_Unit_default_instance_._instance.get_mutable()->location_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Unit::kHandleFieldNumber;
const int CMsgBotWorldState_Unit::kUnitTypeFieldNumber;
const int CMsgBotWorldState_Unit::kNameFieldNumber;
const int CMsgBotWorldState_Unit::kTeamIdFieldNumber;
const int CMsgBotWorldState_Unit::kLevelFieldNumber;
const int CMsgBotWorldState_Unit::kLocationFieldNumber;
const int CMsgBotWorldState_Unit::kIsAliveFieldNumber;
const int CMsgBotWorldState_Unit::kPlayerIdFieldNumber;
const int CMsgBotWorldState_Unit::kBoundingRadiusFieldNumber;
const int CMsgBotWorldState_Unit::kFacingFieldNumber;
const int CMsgBotWorldState_Unit::kGroundHeightFieldNumber;
const int CMsgBotWorldState_Unit::kVisionRangeDaytimeFieldNumber;
const int CMsgBotWorldState_Unit::kVisionRangeNighttimeFieldNumber;
const int CMsgBotWorldState_Unit::kHealthFieldNumber;
const int CMsgBotWorldState_Unit::kHealthMaxFieldNumber;
const int CMsgBotWorldState_Unit::kHealthRegenFieldNumber;
const int CMsgBotWorldState_Unit::kManaFieldNumber;
const int CMsgBotWorldState_Unit::kManaMaxFieldNumber;
const int CMsgBotWorldState_Unit::kManaRegenFieldNumber;
const int CMsgBotWorldState_Unit::kBaseMovementSpeedFieldNumber;
const int CMsgBotWorldState_Unit::kCurrentMovementSpeedFieldNumber;
const int CMsgBotWorldState_Unit::kAnimActivityFieldNumber;
const int CMsgBotWorldState_Unit::kAnimCycleFieldNumber;
const int CMsgBotWorldState_Unit::kBaseDamageFieldNumber;
const int CMsgBotWorldState_Unit::kBaseDamageVarianceFieldNumber;
const int CMsgBotWorldState_Unit::kBonusDamageFieldNumber;
const int CMsgBotWorldState_Unit::kAttackDamageFieldNumber;
const int CMsgBotWorldState_Unit::kAttackRangeFieldNumber;
const int CMsgBotWorldState_Unit::kAttackSpeedFieldNumber;
const int CMsgBotWorldState_Unit::kAttackAnimPointFieldNumber;
const int CMsgBotWorldState_Unit::kAttackAcquisitionRangeFieldNumber;
const int CMsgBotWorldState_Unit::kAttackProjectileSpeedFieldNumber;
const int CMsgBotWorldState_Unit::kAttackTargetHandleFieldNumber;
const int CMsgBotWorldState_Unit::kAttackTargetNameFieldNumber;
const int CMsgBotWorldState_Unit::kAttacksPerSecondFieldNumber;
const int CMsgBotWorldState_Unit::kLastAttackTimeFieldNumber;
const int CMsgBotWorldState_Unit::kBountyXpFieldNumber;
const int CMsgBotWorldState_Unit::kBountyGoldMinFieldNumber;
const int CMsgBotWorldState_Unit::kBountyGoldMaxFieldNumber;
const int CMsgBotWorldState_Unit::kIsChannelingFieldNumber;
const int CMsgBotWorldState_Unit::kActiveAbilityHandleFieldNumber;
const int CMsgBotWorldState_Unit::kIsAttackImmuneFieldNumber;
const int CMsgBotWorldState_Unit::kIsBlindFieldNumber;
const int CMsgBotWorldState_Unit::kIsBlockDisabledFieldNumber;
const int CMsgBotWorldState_Unit::kIsDisarmedFieldNumber;
const int CMsgBotWorldState_Unit::kIsDominatedFieldNumber;
const int CMsgBotWorldState_Unit::kIsEvadeDisabledFieldNumber;
const int CMsgBotWorldState_Unit::kIsHexedFieldNumber;
const int CMsgBotWorldState_Unit::kIsInvisibleFieldNumber;
const int CMsgBotWorldState_Unit::kIsInvulnerableFieldNumber;
const int CMsgBotWorldState_Unit::kIsMagicImmuneFieldNumber;
const int CMsgBotWorldState_Unit::kIsMutedFieldNumber;
const int CMsgBotWorldState_Unit::kIsNightmaredFieldNumber;
const int CMsgBotWorldState_Unit::kIsRootedFieldNumber;
const int CMsgBotWorldState_Unit::kIsSilencedFieldNumber;
const int CMsgBotWorldState_Unit::kIsSpeciallyDeniableFieldNumber;
const int CMsgBotWorldState_Unit::kIsStunnedFieldNumber;
const int CMsgBotWorldState_Unit::kIsUnableToMissFieldNumber;
const int CMsgBotWorldState_Unit::kHasScepterFieldNumber;
const int CMsgBotWorldState_Unit::kAbilitiesFieldNumber;
const int CMsgBotWorldState_Unit::kItemsFieldNumber;
const int CMsgBotWorldState_Unit::kModifiersFieldNumber;
const int CMsgBotWorldState_Unit::kIncomingTrackingProjectilesFieldNumber;
const int CMsgBotWorldState_Unit::kActionTypeFieldNumber;
const int CMsgBotWorldState_Unit::kAbilityTargetHandleFieldNumber;
const int CMsgBotWorldState_Unit::kAbilityTargetNameFieldNumber;
const int CMsgBotWorldState_Unit::kIsUsingAbilityFieldNumber;
const int CMsgBotWorldState_Unit::kPrimaryAttributeFieldNumber;
const int CMsgBotWorldState_Unit::kIsIllusionFieldNumber;
const int CMsgBotWorldState_Unit::kRespawnTimeFieldNumber;
const int CMsgBotWorldState_Unit::kBuybackCostFieldNumber;
const int CMsgBotWorldState_Unit::kBuybackCooldownFieldNumber;
const int CMsgBotWorldState_Unit::kSpellAmplificationFieldNumber;
const int CMsgBotWorldState_Unit::kArmorFieldNumber;
const int CMsgBotWorldState_Unit::kMagicResistFieldNumber;
const int CMsgBotWorldState_Unit::kEvasionFieldNumber;
const int CMsgBotWorldState_Unit::kXpNeededToLevelFieldNumber;
const int CMsgBotWorldState_Unit::kAbilityPointsFieldNumber;
const int CMsgBotWorldState_Unit::kReliableGoldFieldNumber;
const int CMsgBotWorldState_Unit::kUnreliableGoldFieldNumber;
const int CMsgBotWorldState_Unit::kLastHitsFieldNumber;
const int CMsgBotWorldState_Unit::kDeniesFieldNumber;
const int CMsgBotWorldState_Unit::kNetWorthFieldNumber;
const int CMsgBotWorldState_Unit::kStrengthFieldNumber;
const int CMsgBotWorldState_Unit::kAgilityFieldNumber;
const int CMsgBotWorldState_Unit::kIntelligenceFieldNumber;
const int CMsgBotWorldState_Unit::kRemainingLifespanFieldNumber;
const int CMsgBotWorldState_Unit::kFlyingCourierFieldNumber;
const int CMsgBotWorldState_Unit::kShrineCooldownFieldNumber;
const int CMsgBotWorldState_Unit::kIsShrineHealingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Unit::CMsgBotWorldState_Unit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Unit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Unit)
}
CMsgBotWorldState_Unit::CMsgBotWorldState_Unit(const CMsgBotWorldState_Unit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      abilities_(from.abilities_),
      items_(from.items_),
      modifiers_(from.modifiers_),
      incoming_tracking_projectiles_(from.incoming_tracking_projectiles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  attack_target_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attack_target_name()) {
    attack_target_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attack_target_name_);
  }
  ability_target_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ability_target_name()) {
    ability_target_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ability_target_name_);
  }
  if (from.has_location()) {
    location_ = new ::CMsgBotWorldState_Vector(*from.location_);
  } else {
    location_ = NULL;
  }
  ::memcpy(&handle_, &from.handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&unreliable_gold_) -
    reinterpret_cast<char*>(&handle_)) + sizeof(unreliable_gold_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Unit)
}

void CMsgBotWorldState_Unit::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attack_target_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ability_target_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shrine_cooldown_) -
      reinterpret_cast<char*>(&location_)) + sizeof(shrine_cooldown_));
  attacks_per_second_ = -1;
  last_attack_time_ = -1;
  reliable_gold_ = -1;
  unreliable_gold_ = -1;
}

CMsgBotWorldState_Unit::~CMsgBotWorldState_Unit() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Unit)
  SharedDtor();
}

void CMsgBotWorldState_Unit::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attack_target_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ability_target_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete location_;
}

void CMsgBotWorldState_Unit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Unit::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Unit& CMsgBotWorldState_Unit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Unit.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Unit::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Unit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  abilities_.Clear();
  items_.Clear();
  modifiers_.Clear();
  incoming_tracking_projectiles_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      attack_target_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      ability_target_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(location_ != NULL);
      location_->Clear();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&level_) -
        reinterpret_cast<char*>(&handle_)) + sizeof(level_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&health_max_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(health_max_));
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&health_regen_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&anim_cycle_) -
        reinterpret_cast<char*>(&health_regen_)) + sizeof(anim_cycle_));
  }
  if (cached_has_bits & 4278190080u) {
    ::memset(&base_damage_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&attack_acquisition_range_) -
        reinterpret_cast<char*>(&base_damage_)) + sizeof(attack_acquisition_range_));
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 255u) {
    ::memset(&attack_projectile_speed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bounty_gold_min_) -
        reinterpret_cast<char*>(&attack_projectile_speed_)) + sizeof(bounty_gold_min_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&bounty_gold_max_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_invisible_) -
        reinterpret_cast<char*>(&bounty_gold_max_)) + sizeof(is_invisible_));
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&is_invulnerable_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_stunned_) -
        reinterpret_cast<char*>(&is_invulnerable_)) + sizeof(is_stunned_));
  }
  if (cached_has_bits & 4278190080u) {
    ::memset(&is_unable_to_miss_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&buyback_cooldown_) -
        reinterpret_cast<char*>(&is_unable_to_miss_)) + sizeof(buyback_cooldown_));
  }
  cached_has_bits = _has_bits_[2];
  if (cached_has_bits & 255u) {
    ::memset(&spell_amplification_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&denies_) -
        reinterpret_cast<char*>(&spell_amplification_)) + sizeof(denies_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&net_worth_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&intelligence_) -
        reinterpret_cast<char*>(&net_worth_)) + sizeof(intelligence_));
  }
  if (cached_has_bits & 4128768u) {
    ::memset(&remaining_lifespan_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&shrine_cooldown_) -
        reinterpret_cast<char*>(&remaining_lifespan_)) + sizeof(shrine_cooldown_));
    attacks_per_second_ = -1;
    last_attack_time_ = -1;
    reliable_gold_ = -1;
    unreliable_gold_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Unit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Unit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.UnitType unit_type = 2 [default = INVALID];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgBotWorldState_UnitType_IsValid(value)) {
            set_unit_type(static_cast< ::CMsgBotWorldState_UnitType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Unit.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 team_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_team_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Vector location = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_alive = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_is_alive();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_alive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 player_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bounding_radius = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_bounding_radius();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bounding_radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 facing = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_facing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &facing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ground_height = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_ground_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ground_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 vision_range_daytime = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_vision_range_daytime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vision_range_daytime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 vision_range_nighttime = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_vision_range_nighttime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vision_range_nighttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 health = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_health();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &health_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 health_max = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_health_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &health_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float health_regen = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(181u /* 181 & 0xFF */)) {
          set_has_health_regen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &health_regen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mana = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          set_has_mana();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mana_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mana_max = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          set_has_mana_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mana_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float mana_regen = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(221u /* 221 & 0xFF */)) {
          set_has_mana_regen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mana_regen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 base_movement_speed = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_base_movement_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &base_movement_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 current_movement_speed = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_current_movement_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_movement_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 anim_activity = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {
          set_has_anim_activity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &anim_activity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float anim_cycle = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 293 & 0xFF */)) {
          set_has_anim_cycle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &anim_cycle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 base_damage = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_base_damage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &base_damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 base_damage_variance = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 328 & 0xFF */)) {
          set_has_base_damage_variance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &base_damage_variance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bonus_damage = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {
          set_has_bonus_damage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bonus_damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 attack_damage = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 344 & 0xFF */)) {
          set_has_attack_damage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attack_damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 attack_range = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 352 & 0xFF */)) {
          set_has_attack_range();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attack_range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float attack_speed = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 365 & 0xFF */)) {
          set_has_attack_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &attack_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float attack_anim_point = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 373 & 0xFF */)) {
          set_has_attack_anim_point();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &attack_anim_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 attack_acquisition_range = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 376 & 0xFF */)) {
          set_has_attack_acquisition_range();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attack_acquisition_range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 attack_projectile_speed = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 384 & 0xFF */)) {
          set_has_attack_projectile_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attack_projectile_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 attack_target_handle = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 392 & 0xFF */)) {
          set_has_attack_target_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attack_target_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 attacks_per_second = 50 [default = -1];
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {
          set_has_attacks_per_second();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attacks_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float last_attack_time = 51 [default = -1];
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(157u /* 413 & 0xFF */)) {
          set_has_last_attack_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &last_attack_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string attack_target_name = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attack_target_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attack_target_name().data(), static_cast<int>(this->attack_target_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Unit.attack_target_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 bounty_xp = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 480 & 0xFF */)) {
          set_has_bounty_xp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bounty_xp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 bounty_gold_min = 61;
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 488 & 0xFF */)) {
          set_has_bounty_gold_min();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bounty_gold_min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 bounty_gold_max = 62;
      case 62: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 496 & 0xFF */)) {
          set_has_bounty_gold_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bounty_gold_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_channeling = 65;
      case 65: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 520 & 0xFF */)) {
          set_has_is_channeling();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_channeling_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 active_ability_handle = 66;
      case 66: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 528 & 0xFF */)) {
          set_has_active_ability_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &active_ability_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_attack_immune = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 560 & 0xFF */)) {
          set_has_is_attack_immune();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_attack_immune_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_blind = 71;
      case 71: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 568 & 0xFF */)) {
          set_has_is_blind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_blind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_block_disabled = 72;
      case 72: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 576 & 0xFF */)) {
          set_has_is_block_disabled();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_block_disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_disarmed = 73;
      case 73: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 584 & 0xFF */)) {
          set_has_is_disarmed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_disarmed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_dominated = 74;
      case 74: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 592 & 0xFF */)) {
          set_has_is_dominated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_dominated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_evade_disabled = 75;
      case 75: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 600 & 0xFF */)) {
          set_has_is_evade_disabled();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_evade_disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_hexed = 76;
      case 76: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 608 & 0xFF */)) {
          set_has_is_hexed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_hexed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_invisible = 77;
      case 77: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 616 & 0xFF */)) {
          set_has_is_invisible();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_invisible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_invulnerable = 78;
      case 78: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 624 & 0xFF */)) {
          set_has_is_invulnerable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_invulnerable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_magic_immune = 79;
      case 79: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 632 & 0xFF */)) {
          set_has_is_magic_immune();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_magic_immune_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_muted = 80;
      case 80: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 640 & 0xFF */)) {
          set_has_is_muted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_muted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_nightmared = 82;
      case 82: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 656 & 0xFF */)) {
          set_has_is_nightmared();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_nightmared_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_rooted = 83;
      case 83: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 664 & 0xFF */)) {
          set_has_is_rooted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_rooted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_silenced = 84;
      case 84: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 672 & 0xFF */)) {
          set_has_is_silenced();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_silenced_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_specially_deniable = 85;
      case 85: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 680 & 0xFF */)) {
          set_has_is_specially_deniable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_specially_deniable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_stunned = 86;
      case 86: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 688 & 0xFF */)) {
          set_has_is_stunned();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_stunned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_unable_to_miss = 87;
      case 87: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 696 & 0xFF */)) {
          set_has_is_unable_to_miss();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_unable_to_miss_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_scepter = 88;
      case 88: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 704 & 0xFF */)) {
          set_has_has_scepter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_scepter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgBotWorldState.Ability abilities = 90;
      case 90: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 722 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_abilities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgBotWorldState.Ability items = 91;
      case 91: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 730 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgBotWorldState.Modifier modifiers = 92;
      case 92: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 738 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifiers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgBotWorldState.TrackingProjectile incoming_tracking_projectiles = 93;
      case 93: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 746 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_incoming_tracking_projectiles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 action_type = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 800 & 0xFF */)) {
          set_has_action_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ability_target_handle = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 808 & 0xFF */)) {
          set_has_ability_target_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_target_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_using_ability = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 816 & 0xFF */)) {
          set_has_is_using_ability();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_using_ability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ability_target_name = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ability_target_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ability_target_name().data(), static_cast<int>(this->ability_target_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Unit.ability_target_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 primary_attribute = 110;
      case 110: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 880 & 0xFF */)) {
          set_has_primary_attribute();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &primary_attribute_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_illusion = 111;
      case 111: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 888 & 0xFF */)) {
          set_has_is_illusion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_illusion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float respawn_time = 112;
      case 112: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(133u /* 901 & 0xFF */)) {
          set_has_respawn_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &respawn_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 buyback_cost = 113;
      case 113: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 904 & 0xFF */)) {
          set_has_buyback_cost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buyback_cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float buyback_cooldown = 114;
      case 114: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(149u /* 917 & 0xFF */)) {
          set_has_buyback_cooldown();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &buyback_cooldown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float spell_amplification = 115;
      case 115: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(157u /* 925 & 0xFF */)) {
          set_has_spell_amplification();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &spell_amplification_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float armor = 116;
      case 116: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(165u /* 933 & 0xFF */)) {
          set_has_armor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &armor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float magic_resist = 117;
      case 117: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(173u /* 941 & 0xFF */)) {
          set_has_magic_resist();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &magic_resist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float evasion = 118;
      case 118: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(181u /* 949 & 0xFF */)) {
          set_has_evasion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &evasion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 xp_needed_to_level = 120;
      case 120: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 960 & 0xFF */)) {
          set_has_xp_needed_to_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &xp_needed_to_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ability_points = 121;
      case 121: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 968 & 0xFF */)) {
          set_has_ability_points();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_points_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 reliable_gold = 122 [default = -1];
      case 122: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 976 & 0xFF */)) {
          set_has_reliable_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reliable_gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 unreliable_gold = 123 [default = -1];
      case 123: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 984 & 0xFF */)) {
          set_has_unreliable_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unreliable_gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_hits = 124;
      case 124: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 992 & 0xFF */)) {
          set_has_last_hits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_hits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 denies = 125;
      case 125: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 1000 & 0xFF */)) {
          set_has_denies();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &denies_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 net_worth = 126;
      case 126: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 1008 & 0xFF */)) {
          set_has_net_worth();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &net_worth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 strength = 127;
      case 127: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 1016 & 0xFF */)) {
          set_has_strength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 agility = 128;
      case 128: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 1024 & 0xFF */)) {
          set_has_agility();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &agility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 intelligence = 129;
      case 129: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 1032 & 0xFF */)) {
          set_has_intelligence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &intelligence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float remaining_lifespan = 130;
      case 130: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 1045 & 0xFF */)) {
          set_has_remaining_lifespan();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &remaining_lifespan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool flying_courier = 140;
      case 140: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 1120 & 0xFF */)) {
          set_has_flying_courier();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &flying_courier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float shrine_cooldown = 150;
      case 150: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(181u /* 1205 & 0xFF */)) {
          set_has_shrine_cooldown();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &shrine_cooldown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_shrine_healing = 151;
      case 151: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 1208 & 0xFF */)) {
          set_has_is_shrine_healing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_shrine_healing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Unit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Unit)
  return false;
#undef DO_
}

void CMsgBotWorldState_Unit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Unit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 handle = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->handle(), output);
  }

  // optional .CMsgBotWorldState.UnitType unit_type = 2 [default = INVALID];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->unit_type(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Unit.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional uint32 team_id = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->team_id(), output);
  }

  // optional uint32 level = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->level(), output);
  }

  // optional .CMsgBotWorldState.Vector location = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_location(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool is_alive = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_alive(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->player_id(), output);
  }

  // optional int32 bounding_radius = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->bounding_radius(), output);
  }

  // optional int32 facing = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->facing(), output);
  }

  // optional uint32 ground_height = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->ground_height(), output);
  }

  // optional uint32 vision_range_daytime = 15;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->vision_range_daytime(), output);
  }

  // optional uint32 vision_range_nighttime = 16;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->vision_range_nighttime(), output);
  }

  // optional int32 health = 20;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->health(), output);
  }

  // optional int32 health_max = 21;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->health_max(), output);
  }

  // optional float health_regen = 22;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(22, this->health_regen(), output);
  }

  // optional int32 mana = 25;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->mana(), output);
  }

  // optional int32 mana_max = 26;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->mana_max(), output);
  }

  // optional float mana_regen = 27;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(27, this->mana_regen(), output);
  }

  // optional int32 base_movement_speed = 30;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->base_movement_speed(), output);
  }

  // optional int32 current_movement_speed = 31;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->current_movement_speed(), output);
  }

  // optional int32 anim_activity = 35;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(35, this->anim_activity(), output);
  }

  // optional float anim_cycle = 36;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(36, this->anim_cycle(), output);
  }

  // optional int32 base_damage = 40;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->base_damage(), output);
  }

  // optional int32 base_damage_variance = 41;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(41, this->base_damage_variance(), output);
  }

  // optional int32 bonus_damage = 42;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(42, this->bonus_damage(), output);
  }

  // optional int32 attack_damage = 43;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(43, this->attack_damage(), output);
  }

  // optional int32 attack_range = 44;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(44, this->attack_range(), output);
  }

  // optional float attack_speed = 45;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(45, this->attack_speed(), output);
  }

  // optional float attack_anim_point = 46;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(46, this->attack_anim_point(), output);
  }

  // optional int32 attack_acquisition_range = 47;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(47, this->attack_acquisition_range(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 attack_projectile_speed = 48;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(48, this->attack_projectile_speed(), output);
  }

  // optional uint32 attack_target_handle = 49;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(49, this->attack_target_handle(), output);
  }

  cached_has_bits = _has_bits_[2];
  // optional int32 attacks_per_second = 50 [default = -1];
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(50, this->attacks_per_second(), output);
  }

  // optional float last_attack_time = 51 [default = -1];
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(51, this->last_attack_time(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string attack_target_name = 52;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attack_target_name().data(), static_cast<int>(this->attack_target_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Unit.attack_target_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      52, this->attack_target_name(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 bounty_xp = 60;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(60, this->bounty_xp(), output);
  }

  // optional uint32 bounty_gold_min = 61;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(61, this->bounty_gold_min(), output);
  }

  // optional uint32 bounty_gold_max = 62;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(62, this->bounty_gold_max(), output);
  }

  // optional bool is_channeling = 65;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(65, this->is_channeling(), output);
  }

  // optional uint32 active_ability_handle = 66;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(66, this->active_ability_handle(), output);
  }

  // optional bool is_attack_immune = 70;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(70, this->is_attack_immune(), output);
  }

  // optional bool is_blind = 71;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(71, this->is_blind(), output);
  }

  // optional bool is_block_disabled = 72;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(72, this->is_block_disabled(), output);
  }

  // optional bool is_disarmed = 73;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(73, this->is_disarmed(), output);
  }

  // optional bool is_dominated = 74;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(74, this->is_dominated(), output);
  }

  // optional bool is_evade_disabled = 75;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(75, this->is_evade_disabled(), output);
  }

  // optional bool is_hexed = 76;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(76, this->is_hexed(), output);
  }

  // optional bool is_invisible = 77;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(77, this->is_invisible(), output);
  }

  // optional bool is_invulnerable = 78;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(78, this->is_invulnerable(), output);
  }

  // optional bool is_magic_immune = 79;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(79, this->is_magic_immune(), output);
  }

  // optional bool is_muted = 80;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(80, this->is_muted(), output);
  }

  // optional bool is_nightmared = 82;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(82, this->is_nightmared(), output);
  }

  // optional bool is_rooted = 83;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(83, this->is_rooted(), output);
  }

  // optional bool is_silenced = 84;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(84, this->is_silenced(), output);
  }

  // optional bool is_specially_deniable = 85;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(85, this->is_specially_deniable(), output);
  }

  // optional bool is_stunned = 86;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(86, this->is_stunned(), output);
  }

  // optional bool is_unable_to_miss = 87;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(87, this->is_unable_to_miss(), output);
  }

  // optional bool has_scepter = 88;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(88, this->has_scepter(), output);
  }

  // repeated .CMsgBotWorldState.Ability abilities = 90;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->abilities_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      90,
      this->abilities(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgBotWorldState.Ability items = 91;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      91,
      this->items(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgBotWorldState.Modifier modifiers = 92;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifiers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      92,
      this->modifiers(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgBotWorldState.TrackingProjectile incoming_tracking_projectiles = 93;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->incoming_tracking_projectiles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      93,
      this->incoming_tracking_projectiles(static_cast<int>(i)),
      output);
  }

  // optional uint32 action_type = 100;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(100, this->action_type(), output);
  }

  // optional uint32 ability_target_handle = 101;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(101, this->ability_target_handle(), output);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool is_using_ability = 102;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(102, this->is_using_ability(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string ability_target_name = 103;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ability_target_name().data(), static_cast<int>(this->ability_target_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Unit.ability_target_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      103, this->ability_target_name(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 primary_attribute = 110;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(110, this->primary_attribute(), output);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool is_illusion = 111;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(111, this->is_illusion(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional float respawn_time = 112;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(112, this->respawn_time(), output);
  }

  // optional uint32 buyback_cost = 113;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(113, this->buyback_cost(), output);
  }

  // optional float buyback_cooldown = 114;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(114, this->buyback_cooldown(), output);
  }

  cached_has_bits = _has_bits_[2];
  // optional float spell_amplification = 115;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(115, this->spell_amplification(), output);
  }

  // optional float armor = 116;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(116, this->armor(), output);
  }

  // optional float magic_resist = 117;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(117, this->magic_resist(), output);
  }

  // optional float evasion = 118;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(118, this->evasion(), output);
  }

  // optional uint32 xp_needed_to_level = 120;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(120, this->xp_needed_to_level(), output);
  }

  // optional uint32 ability_points = 121;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(121, this->ability_points(), output);
  }

  // optional int32 reliable_gold = 122 [default = -1];
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(122, this->reliable_gold(), output);
  }

  // optional int32 unreliable_gold = 123 [default = -1];
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(123, this->unreliable_gold(), output);
  }

  // optional uint32 last_hits = 124;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(124, this->last_hits(), output);
  }

  // optional uint32 denies = 125;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(125, this->denies(), output);
  }

  // optional uint32 net_worth = 126;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(126, this->net_worth(), output);
  }

  // optional uint32 strength = 127;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(127, this->strength(), output);
  }

  // optional uint32 agility = 128;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(128, this->agility(), output);
  }

  // optional uint32 intelligence = 129;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(129, this->intelligence(), output);
  }

  // optional float remaining_lifespan = 130;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(130, this->remaining_lifespan(), output);
  }

  // optional bool flying_courier = 140;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(140, this->flying_courier(), output);
  }

  // optional float shrine_cooldown = 150;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(150, this->shrine_cooldown(), output);
  }

  // optional bool is_shrine_healing = 151;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(151, this->is_shrine_healing(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Unit)
}

::google::protobuf::uint8* CMsgBotWorldState_Unit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Unit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 handle = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->handle(), target);
  }

  // optional .CMsgBotWorldState.UnitType unit_type = 2 [default = INVALID];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->unit_type(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Unit.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional uint32 team_id = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->team_id(), target);
  }

  // optional uint32 level = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->level(), target);
  }

  // optional .CMsgBotWorldState.Vector location = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_location(), deterministic, target);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool is_alive = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_alive(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->player_id(), target);
  }

  // optional int32 bounding_radius = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->bounding_radius(), target);
  }

  // optional int32 facing = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->facing(), target);
  }

  // optional uint32 ground_height = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->ground_height(), target);
  }

  // optional uint32 vision_range_daytime = 15;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->vision_range_daytime(), target);
  }

  // optional uint32 vision_range_nighttime = 16;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->vision_range_nighttime(), target);
  }

  // optional int32 health = 20;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->health(), target);
  }

  // optional int32 health_max = 21;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->health_max(), target);
  }

  // optional float health_regen = 22;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(22, this->health_regen(), target);
  }

  // optional int32 mana = 25;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->mana(), target);
  }

  // optional int32 mana_max = 26;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->mana_max(), target);
  }

  // optional float mana_regen = 27;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(27, this->mana_regen(), target);
  }

  // optional int32 base_movement_speed = 30;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->base_movement_speed(), target);
  }

  // optional int32 current_movement_speed = 31;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->current_movement_speed(), target);
  }

  // optional int32 anim_activity = 35;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(35, this->anim_activity(), target);
  }

  // optional float anim_cycle = 36;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(36, this->anim_cycle(), target);
  }

  // optional int32 base_damage = 40;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->base_damage(), target);
  }

  // optional int32 base_damage_variance = 41;
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(41, this->base_damage_variance(), target);
  }

  // optional int32 bonus_damage = 42;
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(42, this->bonus_damage(), target);
  }

  // optional int32 attack_damage = 43;
  if (cached_has_bits & 0x08000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(43, this->attack_damage(), target);
  }

  // optional int32 attack_range = 44;
  if (cached_has_bits & 0x10000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(44, this->attack_range(), target);
  }

  // optional float attack_speed = 45;
  if (cached_has_bits & 0x20000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(45, this->attack_speed(), target);
  }

  // optional float attack_anim_point = 46;
  if (cached_has_bits & 0x40000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(46, this->attack_anim_point(), target);
  }

  // optional int32 attack_acquisition_range = 47;
  if (cached_has_bits & 0x80000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(47, this->attack_acquisition_range(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 attack_projectile_speed = 48;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(48, this->attack_projectile_speed(), target);
  }

  // optional uint32 attack_target_handle = 49;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(49, this->attack_target_handle(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional int32 attacks_per_second = 50 [default = -1];
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(50, this->attacks_per_second(), target);
  }

  // optional float last_attack_time = 51 [default = -1];
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(51, this->last_attack_time(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string attack_target_name = 52;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attack_target_name().data(), static_cast<int>(this->attack_target_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Unit.attack_target_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        52, this->attack_target_name(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 bounty_xp = 60;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(60, this->bounty_xp(), target);
  }

  // optional uint32 bounty_gold_min = 61;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(61, this->bounty_gold_min(), target);
  }

  // optional uint32 bounty_gold_max = 62;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(62, this->bounty_gold_max(), target);
  }

  // optional bool is_channeling = 65;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(65, this->is_channeling(), target);
  }

  // optional uint32 active_ability_handle = 66;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(66, this->active_ability_handle(), target);
  }

  // optional bool is_attack_immune = 70;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(70, this->is_attack_immune(), target);
  }

  // optional bool is_blind = 71;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(71, this->is_blind(), target);
  }

  // optional bool is_block_disabled = 72;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(72, this->is_block_disabled(), target);
  }

  // optional bool is_disarmed = 73;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(73, this->is_disarmed(), target);
  }

  // optional bool is_dominated = 74;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(74, this->is_dominated(), target);
  }

  // optional bool is_evade_disabled = 75;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(75, this->is_evade_disabled(), target);
  }

  // optional bool is_hexed = 76;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(76, this->is_hexed(), target);
  }

  // optional bool is_invisible = 77;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(77, this->is_invisible(), target);
  }

  // optional bool is_invulnerable = 78;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(78, this->is_invulnerable(), target);
  }

  // optional bool is_magic_immune = 79;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(79, this->is_magic_immune(), target);
  }

  // optional bool is_muted = 80;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(80, this->is_muted(), target);
  }

  // optional bool is_nightmared = 82;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(82, this->is_nightmared(), target);
  }

  // optional bool is_rooted = 83;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(83, this->is_rooted(), target);
  }

  // optional bool is_silenced = 84;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(84, this->is_silenced(), target);
  }

  // optional bool is_specially_deniable = 85;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(85, this->is_specially_deniable(), target);
  }

  // optional bool is_stunned = 86;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(86, this->is_stunned(), target);
  }

  // optional bool is_unable_to_miss = 87;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(87, this->is_unable_to_miss(), target);
  }

  // optional bool has_scepter = 88;
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(88, this->has_scepter(), target);
  }

  // repeated .CMsgBotWorldState.Ability abilities = 90;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->abilities_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        90, this->abilities(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgBotWorldState.Ability items = 91;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        91, this->items(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgBotWorldState.Modifier modifiers = 92;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifiers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        92, this->modifiers(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgBotWorldState.TrackingProjectile incoming_tracking_projectiles = 93;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->incoming_tracking_projectiles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        93, this->incoming_tracking_projectiles(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 action_type = 100;
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(100, this->action_type(), target);
  }

  // optional uint32 ability_target_handle = 101;
  if (cached_has_bits & 0x08000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(101, this->ability_target_handle(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool is_using_ability = 102;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(102, this->is_using_ability(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string ability_target_name = 103;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ability_target_name().data(), static_cast<int>(this->ability_target_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Unit.ability_target_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        103, this->ability_target_name(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional uint32 primary_attribute = 110;
  if (cached_has_bits & 0x10000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(110, this->primary_attribute(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool is_illusion = 111;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(111, this->is_illusion(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional float respawn_time = 112;
  if (cached_has_bits & 0x20000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(112, this->respawn_time(), target);
  }

  // optional uint32 buyback_cost = 113;
  if (cached_has_bits & 0x40000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(113, this->buyback_cost(), target);
  }

  // optional float buyback_cooldown = 114;
  if (cached_has_bits & 0x80000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(114, this->buyback_cooldown(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional float spell_amplification = 115;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(115, this->spell_amplification(), target);
  }

  // optional float armor = 116;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(116, this->armor(), target);
  }

  // optional float magic_resist = 117;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(117, this->magic_resist(), target);
  }

  // optional float evasion = 118;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(118, this->evasion(), target);
  }

  // optional uint32 xp_needed_to_level = 120;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(120, this->xp_needed_to_level(), target);
  }

  // optional uint32 ability_points = 121;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(121, this->ability_points(), target);
  }

  // optional int32 reliable_gold = 122 [default = -1];
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(122, this->reliable_gold(), target);
  }

  // optional int32 unreliable_gold = 123 [default = -1];
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(123, this->unreliable_gold(), target);
  }

  // optional uint32 last_hits = 124;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(124, this->last_hits(), target);
  }

  // optional uint32 denies = 125;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(125, this->denies(), target);
  }

  // optional uint32 net_worth = 126;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(126, this->net_worth(), target);
  }

  // optional uint32 strength = 127;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(127, this->strength(), target);
  }

  // optional uint32 agility = 128;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(128, this->agility(), target);
  }

  // optional uint32 intelligence = 129;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(129, this->intelligence(), target);
  }

  // optional float remaining_lifespan = 130;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(130, this->remaining_lifespan(), target);
  }

  // optional bool flying_courier = 140;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(140, this->flying_courier(), target);
  }

  // optional float shrine_cooldown = 150;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(150, this->shrine_cooldown(), target);
  }

  // optional bool is_shrine_healing = 151;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(151, this->is_shrine_healing(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Unit)
  return target;
}

size_t CMsgBotWorldState_Unit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Unit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgBotWorldState.Ability abilities = 90;
  {
    unsigned int count = static_cast<unsigned int>(this->abilities_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->abilities(static_cast<int>(i)));
    }
  }

  // repeated .CMsgBotWorldState.Ability items = 91;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // repeated .CMsgBotWorldState.Modifier modifiers = 92;
  {
    unsigned int count = static_cast<unsigned int>(this->modifiers_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifiers(static_cast<int>(i)));
    }
  }

  // repeated .CMsgBotWorldState.TrackingProjectile incoming_tracking_projectiles = 93;
  {
    unsigned int count = static_cast<unsigned int>(this->incoming_tracking_projectiles_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->incoming_tracking_projectiles(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string attack_target_name = 52;
    if (has_attack_target_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->attack_target_name());
    }

    // optional string ability_target_name = 103;
    if (has_ability_target_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ability_target_name());
    }

    // optional .CMsgBotWorldState.Vector location = 6;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *location_);
    }

    // optional uint32 handle = 1;
    if (has_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->handle());
    }

    // optional .CMsgBotWorldState.UnitType unit_type = 2 [default = INVALID];
    if (has_unit_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->unit_type());
    }

    // optional uint32 team_id = 4;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->team_id());
    }

    // optional uint32 level = 5;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 player_id = 8;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_id());
    }

    // optional int32 bounding_radius = 10;
    if (has_bounding_radius()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bounding_radius());
    }

    // optional int32 facing = 11;
    if (has_facing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->facing());
    }

    // optional uint32 ground_height = 12;
    if (has_ground_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ground_height());
    }

    // optional uint32 vision_range_daytime = 15;
    if (has_vision_range_daytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->vision_range_daytime());
    }

    // optional uint32 vision_range_nighttime = 16;
    if (has_vision_range_nighttime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->vision_range_nighttime());
    }

    // optional int32 health = 20;
    if (has_health()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->health());
    }

    // optional int32 health_max = 21;
    if (has_health_max()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->health_max());
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional float health_regen = 22;
    if (has_health_regen()) {
      total_size += 2 + 4;
    }

    // optional int32 mana = 25;
    if (has_mana()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mana());
    }

    // optional int32 mana_max = 26;
    if (has_mana_max()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mana_max());
    }

    // optional float mana_regen = 27;
    if (has_mana_regen()) {
      total_size += 2 + 4;
    }

    // optional int32 base_movement_speed = 30;
    if (has_base_movement_speed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->base_movement_speed());
    }

    // optional int32 current_movement_speed = 31;
    if (has_current_movement_speed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->current_movement_speed());
    }

    // optional int32 anim_activity = 35;
    if (has_anim_activity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->anim_activity());
    }

    // optional float anim_cycle = 36;
    if (has_anim_cycle()) {
      total_size += 2 + 4;
    }

  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    // optional int32 base_damage = 40;
    if (has_base_damage()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->base_damage());
    }

    // optional int32 base_damage_variance = 41;
    if (has_base_damage_variance()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->base_damage_variance());
    }

    // optional int32 bonus_damage = 42;
    if (has_bonus_damage()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bonus_damage());
    }

    // optional int32 attack_damage = 43;
    if (has_attack_damage()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attack_damage());
    }

    // optional int32 attack_range = 44;
    if (has_attack_range()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attack_range());
    }

    // optional float attack_speed = 45;
    if (has_attack_speed()) {
      total_size += 2 + 4;
    }

    // optional float attack_anim_point = 46;
    if (has_attack_anim_point()) {
      total_size += 2 + 4;
    }

    // optional int32 attack_acquisition_range = 47;
    if (has_attack_acquisition_range()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attack_acquisition_range());
    }

  }
  if (_has_bits_[32 / 32] & 255u) {
    // optional int32 attack_projectile_speed = 48;
    if (has_attack_projectile_speed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attack_projectile_speed());
    }

    // optional uint32 attack_target_handle = 49;
    if (has_attack_target_handle()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attack_target_handle());
    }

    // optional bool is_alive = 7;
    if (has_is_alive()) {
      total_size += 1 + 1;
    }

    // optional bool is_channeling = 65;
    if (has_is_channeling()) {
      total_size += 2 + 1;
    }

    // optional bool is_attack_immune = 70;
    if (has_is_attack_immune()) {
      total_size += 2 + 1;
    }

    // optional bool is_blind = 71;
    if (has_is_blind()) {
      total_size += 2 + 1;
    }

    // optional uint32 bounty_xp = 60;
    if (has_bounty_xp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bounty_xp());
    }

    // optional uint32 bounty_gold_min = 61;
    if (has_bounty_gold_min()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bounty_gold_min());
    }

  }
  if (_has_bits_[40 / 32] & 65280u) {
    // optional uint32 bounty_gold_max = 62;
    if (has_bounty_gold_max()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bounty_gold_max());
    }

    // optional uint32 active_ability_handle = 66;
    if (has_active_ability_handle()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->active_ability_handle());
    }

    // optional bool is_block_disabled = 72;
    if (has_is_block_disabled()) {
      total_size += 2 + 1;
    }

    // optional bool is_disarmed = 73;
    if (has_is_disarmed()) {
      total_size += 2 + 1;
    }

    // optional bool is_dominated = 74;
    if (has_is_dominated()) {
      total_size += 2 + 1;
    }

    // optional bool is_evade_disabled = 75;
    if (has_is_evade_disabled()) {
      total_size += 2 + 1;
    }

    // optional bool is_hexed = 76;
    if (has_is_hexed()) {
      total_size += 2 + 1;
    }

    // optional bool is_invisible = 77;
    if (has_is_invisible()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[48 / 32] & 16711680u) {
    // optional bool is_invulnerable = 78;
    if (has_is_invulnerable()) {
      total_size += 2 + 1;
    }

    // optional bool is_magic_immune = 79;
    if (has_is_magic_immune()) {
      total_size += 2 + 1;
    }

    // optional bool is_muted = 80;
    if (has_is_muted()) {
      total_size += 2 + 1;
    }

    // optional bool is_nightmared = 82;
    if (has_is_nightmared()) {
      total_size += 2 + 1;
    }

    // optional bool is_rooted = 83;
    if (has_is_rooted()) {
      total_size += 2 + 1;
    }

    // optional bool is_silenced = 84;
    if (has_is_silenced()) {
      total_size += 2 + 1;
    }

    // optional bool is_specially_deniable = 85;
    if (has_is_specially_deniable()) {
      total_size += 2 + 1;
    }

    // optional bool is_stunned = 86;
    if (has_is_stunned()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[56 / 32] & 4278190080u) {
    // optional bool is_unable_to_miss = 87;
    if (has_is_unable_to_miss()) {
      total_size += 2 + 1;
    }

    // optional bool has_scepter = 88;
    if (has_has_scepter()) {
      total_size += 2 + 1;
    }

    // optional uint32 action_type = 100;
    if (has_action_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->action_type());
    }

    // optional uint32 ability_target_handle = 101;
    if (has_ability_target_handle()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_target_handle());
    }

    // optional uint32 primary_attribute = 110;
    if (has_primary_attribute()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->primary_attribute());
    }

    // optional float respawn_time = 112;
    if (has_respawn_time()) {
      total_size += 2 + 4;
    }

    // optional uint32 buyback_cost = 113;
    if (has_buyback_cost()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buyback_cost());
    }

    // optional float buyback_cooldown = 114;
    if (has_buyback_cooldown()) {
      total_size += 2 + 4;
    }

  }
  if (_has_bits_[64 / 32] & 255u) {
    // optional float spell_amplification = 115;
    if (has_spell_amplification()) {
      total_size += 2 + 4;
    }

    // optional float armor = 116;
    if (has_armor()) {
      total_size += 2 + 4;
    }

    // optional float magic_resist = 117;
    if (has_magic_resist()) {
      total_size += 2 + 4;
    }

    // optional float evasion = 118;
    if (has_evasion()) {
      total_size += 2 + 4;
    }

    // optional uint32 xp_needed_to_level = 120;
    if (has_xp_needed_to_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->xp_needed_to_level());
    }

    // optional uint32 ability_points = 121;
    if (has_ability_points()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_points());
    }

    // optional uint32 last_hits = 124;
    if (has_last_hits()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_hits());
    }

    // optional uint32 denies = 125;
    if (has_denies()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->denies());
    }

  }
  if (_has_bits_[72 / 32] & 65280u) {
    // optional uint32 net_worth = 126;
    if (has_net_worth()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->net_worth());
    }

    // optional bool is_using_ability = 102;
    if (has_is_using_ability()) {
      total_size += 2 + 1;
    }

    // optional bool is_illusion = 111;
    if (has_is_illusion()) {
      total_size += 2 + 1;
    }

    // optional bool flying_courier = 140;
    if (has_flying_courier()) {
      total_size += 2 + 1;
    }

    // optional bool is_shrine_healing = 151;
    if (has_is_shrine_healing()) {
      total_size += 2 + 1;
    }

    // optional uint32 strength = 127;
    if (has_strength()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strength());
    }

    // optional uint32 agility = 128;
    if (has_agility()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->agility());
    }

    // optional uint32 intelligence = 129;
    if (has_intelligence()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->intelligence());
    }

  }
  if (_has_bits_[80 / 32] & 4128768u) {
    // optional float remaining_lifespan = 130;
    if (has_remaining_lifespan()) {
      total_size += 2 + 4;
    }

    // optional float shrine_cooldown = 150;
    if (has_shrine_cooldown()) {
      total_size += 2 + 4;
    }

    // optional int32 attacks_per_second = 50 [default = -1];
    if (has_attacks_per_second()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attacks_per_second());
    }

    // optional float last_attack_time = 51 [default = -1];
    if (has_last_attack_time()) {
      total_size += 2 + 4;
    }

    // optional int32 reliable_gold = 122 [default = -1];
    if (has_reliable_gold()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reliable_gold());
    }

    // optional int32 unreliable_gold = 123 [default = -1];
    if (has_unreliable_gold()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unreliable_gold());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Unit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Unit)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Unit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Unit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Unit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Unit)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Unit::MergeFrom(const CMsgBotWorldState_Unit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Unit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  abilities_.MergeFrom(from.abilities_);
  items_.MergeFrom(from.items_);
  modifiers_.MergeFrom(from.modifiers_);
  incoming_tracking_projectiles_.MergeFrom(from.incoming_tracking_projectiles_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_attack_target_name();
      attack_target_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attack_target_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_ability_target_name();
      ability_target_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ability_target_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_location()->::CMsgBotWorldState_Vector::MergeFrom(from.location());
    }
    if (cached_has_bits & 0x00000010u) {
      handle_ = from.handle_;
    }
    if (cached_has_bits & 0x00000020u) {
      unit_type_ = from.unit_type_;
    }
    if (cached_has_bits & 0x00000040u) {
      team_id_ = from.team_id_;
    }
    if (cached_has_bits & 0x00000080u) {
      level_ = from.level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      bounding_radius_ = from.bounding_radius_;
    }
    if (cached_has_bits & 0x00000400u) {
      facing_ = from.facing_;
    }
    if (cached_has_bits & 0x00000800u) {
      ground_height_ = from.ground_height_;
    }
    if (cached_has_bits & 0x00001000u) {
      vision_range_daytime_ = from.vision_range_daytime_;
    }
    if (cached_has_bits & 0x00002000u) {
      vision_range_nighttime_ = from.vision_range_nighttime_;
    }
    if (cached_has_bits & 0x00004000u) {
      health_ = from.health_;
    }
    if (cached_has_bits & 0x00008000u) {
      health_max_ = from.health_max_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      health_regen_ = from.health_regen_;
    }
    if (cached_has_bits & 0x00020000u) {
      mana_ = from.mana_;
    }
    if (cached_has_bits & 0x00040000u) {
      mana_max_ = from.mana_max_;
    }
    if (cached_has_bits & 0x00080000u) {
      mana_regen_ = from.mana_regen_;
    }
    if (cached_has_bits & 0x00100000u) {
      base_movement_speed_ = from.base_movement_speed_;
    }
    if (cached_has_bits & 0x00200000u) {
      current_movement_speed_ = from.current_movement_speed_;
    }
    if (cached_has_bits & 0x00400000u) {
      anim_activity_ = from.anim_activity_;
    }
    if (cached_has_bits & 0x00800000u) {
      anim_cycle_ = from.anim_cycle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      base_damage_ = from.base_damage_;
    }
    if (cached_has_bits & 0x02000000u) {
      base_damage_variance_ = from.base_damage_variance_;
    }
    if (cached_has_bits & 0x04000000u) {
      bonus_damage_ = from.bonus_damage_;
    }
    if (cached_has_bits & 0x08000000u) {
      attack_damage_ = from.attack_damage_;
    }
    if (cached_has_bits & 0x10000000u) {
      attack_range_ = from.attack_range_;
    }
    if (cached_has_bits & 0x20000000u) {
      attack_speed_ = from.attack_speed_;
    }
    if (cached_has_bits & 0x40000000u) {
      attack_anim_point_ = from.attack_anim_point_;
    }
    if (cached_has_bits & 0x80000000u) {
      attack_acquisition_range_ = from.attack_acquisition_range_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      attack_projectile_speed_ = from.attack_projectile_speed_;
    }
    if (cached_has_bits & 0x00000002u) {
      attack_target_handle_ = from.attack_target_handle_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_alive_ = from.is_alive_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_channeling_ = from.is_channeling_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_attack_immune_ = from.is_attack_immune_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_blind_ = from.is_blind_;
    }
    if (cached_has_bits & 0x00000040u) {
      bounty_xp_ = from.bounty_xp_;
    }
    if (cached_has_bits & 0x00000080u) {
      bounty_gold_min_ = from.bounty_gold_min_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      bounty_gold_max_ = from.bounty_gold_max_;
    }
    if (cached_has_bits & 0x00000200u) {
      active_ability_handle_ = from.active_ability_handle_;
    }
    if (cached_has_bits & 0x00000400u) {
      is_block_disabled_ = from.is_block_disabled_;
    }
    if (cached_has_bits & 0x00000800u) {
      is_disarmed_ = from.is_disarmed_;
    }
    if (cached_has_bits & 0x00001000u) {
      is_dominated_ = from.is_dominated_;
    }
    if (cached_has_bits & 0x00002000u) {
      is_evade_disabled_ = from.is_evade_disabled_;
    }
    if (cached_has_bits & 0x00004000u) {
      is_hexed_ = from.is_hexed_;
    }
    if (cached_has_bits & 0x00008000u) {
      is_invisible_ = from.is_invisible_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      is_invulnerable_ = from.is_invulnerable_;
    }
    if (cached_has_bits & 0x00020000u) {
      is_magic_immune_ = from.is_magic_immune_;
    }
    if (cached_has_bits & 0x00040000u) {
      is_muted_ = from.is_muted_;
    }
    if (cached_has_bits & 0x00080000u) {
      is_nightmared_ = from.is_nightmared_;
    }
    if (cached_has_bits & 0x00100000u) {
      is_rooted_ = from.is_rooted_;
    }
    if (cached_has_bits & 0x00200000u) {
      is_silenced_ = from.is_silenced_;
    }
    if (cached_has_bits & 0x00400000u) {
      is_specially_deniable_ = from.is_specially_deniable_;
    }
    if (cached_has_bits & 0x00800000u) {
      is_stunned_ = from.is_stunned_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      is_unable_to_miss_ = from.is_unable_to_miss_;
    }
    if (cached_has_bits & 0x02000000u) {
      has_scepter_ = from.has_scepter_;
    }
    if (cached_has_bits & 0x04000000u) {
      action_type_ = from.action_type_;
    }
    if (cached_has_bits & 0x08000000u) {
      ability_target_handle_ = from.ability_target_handle_;
    }
    if (cached_has_bits & 0x10000000u) {
      primary_attribute_ = from.primary_attribute_;
    }
    if (cached_has_bits & 0x20000000u) {
      respawn_time_ = from.respawn_time_;
    }
    if (cached_has_bits & 0x40000000u) {
      buyback_cost_ = from.buyback_cost_;
    }
    if (cached_has_bits & 0x80000000u) {
      buyback_cooldown_ = from.buyback_cooldown_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[2];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      spell_amplification_ = from.spell_amplification_;
    }
    if (cached_has_bits & 0x00000002u) {
      armor_ = from.armor_;
    }
    if (cached_has_bits & 0x00000004u) {
      magic_resist_ = from.magic_resist_;
    }
    if (cached_has_bits & 0x00000008u) {
      evasion_ = from.evasion_;
    }
    if (cached_has_bits & 0x00000010u) {
      xp_needed_to_level_ = from.xp_needed_to_level_;
    }
    if (cached_has_bits & 0x00000020u) {
      ability_points_ = from.ability_points_;
    }
    if (cached_has_bits & 0x00000040u) {
      last_hits_ = from.last_hits_;
    }
    if (cached_has_bits & 0x00000080u) {
      denies_ = from.denies_;
    }
    _has_bits_[2] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      net_worth_ = from.net_worth_;
    }
    if (cached_has_bits & 0x00000200u) {
      is_using_ability_ = from.is_using_ability_;
    }
    if (cached_has_bits & 0x00000400u) {
      is_illusion_ = from.is_illusion_;
    }
    if (cached_has_bits & 0x00000800u) {
      flying_courier_ = from.flying_courier_;
    }
    if (cached_has_bits & 0x00001000u) {
      is_shrine_healing_ = from.is_shrine_healing_;
    }
    if (cached_has_bits & 0x00002000u) {
      strength_ = from.strength_;
    }
    if (cached_has_bits & 0x00004000u) {
      agility_ = from.agility_;
    }
    if (cached_has_bits & 0x00008000u) {
      intelligence_ = from.intelligence_;
    }
    _has_bits_[2] |= cached_has_bits;
  }
  if (cached_has_bits & 4128768u) {
    if (cached_has_bits & 0x00010000u) {
      remaining_lifespan_ = from.remaining_lifespan_;
    }
    if (cached_has_bits & 0x00020000u) {
      shrine_cooldown_ = from.shrine_cooldown_;
    }
    if (cached_has_bits & 0x00040000u) {
      attacks_per_second_ = from.attacks_per_second_;
    }
    if (cached_has_bits & 0x00080000u) {
      last_attack_time_ = from.last_attack_time_;
    }
    if (cached_has_bits & 0x00100000u) {
      reliable_gold_ = from.reliable_gold_;
    }
    if (cached_has_bits & 0x00200000u) {
      unreliable_gold_ = from.unreliable_gold_;
    }
    _has_bits_[2] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Unit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Unit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Unit::CopyFrom(const CMsgBotWorldState_Unit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Unit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Unit::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->incoming_tracking_projectiles())) return false;
  if (has_location()) {
    if (!this->location_->IsInitialized()) return false;
  }
  return true;
}

void CMsgBotWorldState_Unit::Swap(CMsgBotWorldState_Unit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Unit::InternalSwap(CMsgBotWorldState_Unit* other) {
  using std::swap;
  CastToBase(&abilities_)->InternalSwap(CastToBase(&other->abilities_));
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  CastToBase(&modifiers_)->InternalSwap(CastToBase(&other->modifiers_));
  CastToBase(&incoming_tracking_projectiles_)->InternalSwap(CastToBase(&other->incoming_tracking_projectiles_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  attack_target_name_.Swap(&other->attack_target_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ability_target_name_.Swap(&other->ability_target_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(location_, other->location_);
  swap(handle_, other->handle_);
  swap(unit_type_, other->unit_type_);
  swap(team_id_, other->team_id_);
  swap(level_, other->level_);
  swap(player_id_, other->player_id_);
  swap(bounding_radius_, other->bounding_radius_);
  swap(facing_, other->facing_);
  swap(ground_height_, other->ground_height_);
  swap(vision_range_daytime_, other->vision_range_daytime_);
  swap(vision_range_nighttime_, other->vision_range_nighttime_);
  swap(health_, other->health_);
  swap(health_max_, other->health_max_);
  swap(health_regen_, other->health_regen_);
  swap(mana_, other->mana_);
  swap(mana_max_, other->mana_max_);
  swap(mana_regen_, other->mana_regen_);
  swap(base_movement_speed_, other->base_movement_speed_);
  swap(current_movement_speed_, other->current_movement_speed_);
  swap(anim_activity_, other->anim_activity_);
  swap(anim_cycle_, other->anim_cycle_);
  swap(base_damage_, other->base_damage_);
  swap(base_damage_variance_, other->base_damage_variance_);
  swap(bonus_damage_, other->bonus_damage_);
  swap(attack_damage_, other->attack_damage_);
  swap(attack_range_, other->attack_range_);
  swap(attack_speed_, other->attack_speed_);
  swap(attack_anim_point_, other->attack_anim_point_);
  swap(attack_acquisition_range_, other->attack_acquisition_range_);
  swap(attack_projectile_speed_, other->attack_projectile_speed_);
  swap(attack_target_handle_, other->attack_target_handle_);
  swap(is_alive_, other->is_alive_);
  swap(is_channeling_, other->is_channeling_);
  swap(is_attack_immune_, other->is_attack_immune_);
  swap(is_blind_, other->is_blind_);
  swap(bounty_xp_, other->bounty_xp_);
  swap(bounty_gold_min_, other->bounty_gold_min_);
  swap(bounty_gold_max_, other->bounty_gold_max_);
  swap(active_ability_handle_, other->active_ability_handle_);
  swap(is_block_disabled_, other->is_block_disabled_);
  swap(is_disarmed_, other->is_disarmed_);
  swap(is_dominated_, other->is_dominated_);
  swap(is_evade_disabled_, other->is_evade_disabled_);
  swap(is_hexed_, other->is_hexed_);
  swap(is_invisible_, other->is_invisible_);
  swap(is_invulnerable_, other->is_invulnerable_);
  swap(is_magic_immune_, other->is_magic_immune_);
  swap(is_muted_, other->is_muted_);
  swap(is_nightmared_, other->is_nightmared_);
  swap(is_rooted_, other->is_rooted_);
  swap(is_silenced_, other->is_silenced_);
  swap(is_specially_deniable_, other->is_specially_deniable_);
  swap(is_stunned_, other->is_stunned_);
  swap(is_unable_to_miss_, other->is_unable_to_miss_);
  swap(has_scepter_, other->has_scepter_);
  swap(action_type_, other->action_type_);
  swap(ability_target_handle_, other->ability_target_handle_);
  swap(primary_attribute_, other->primary_attribute_);
  swap(respawn_time_, other->respawn_time_);
  swap(buyback_cost_, other->buyback_cost_);
  swap(buyback_cooldown_, other->buyback_cooldown_);
  swap(spell_amplification_, other->spell_amplification_);
  swap(armor_, other->armor_);
  swap(magic_resist_, other->magic_resist_);
  swap(evasion_, other->evasion_);
  swap(xp_needed_to_level_, other->xp_needed_to_level_);
  swap(ability_points_, other->ability_points_);
  swap(last_hits_, other->last_hits_);
  swap(denies_, other->denies_);
  swap(net_worth_, other->net_worth_);
  swap(is_using_ability_, other->is_using_ability_);
  swap(is_illusion_, other->is_illusion_);
  swap(flying_courier_, other->flying_courier_);
  swap(is_shrine_healing_, other->is_shrine_healing_);
  swap(strength_, other->strength_);
  swap(agility_, other->agility_);
  swap(intelligence_, other->intelligence_);
  swap(remaining_lifespan_, other->remaining_lifespan_);
  swap(shrine_cooldown_, other->shrine_cooldown_);
  swap(attacks_per_second_, other->attacks_per_second_);
  swap(last_attack_time_, other->last_attack_time_);
  swap(reliable_gold_, other->reliable_gold_);
  swap(unreliable_gold_, other->unreliable_gold_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  swap(_has_bits_[2], other->_has_bits_[2]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Unit::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Actions_OceanAnnotation_Hero::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Actions_OceanAnnotation_Hero::kPlayerIDFieldNumber;
const int CMsgBotWorldState_Actions_OceanAnnotation_Hero::kValueFunctionFieldNumber;
const int CMsgBotWorldState_Actions_OceanAnnotation_Hero::kActionLogpFieldNumber;
const int CMsgBotWorldState_Actions_OceanAnnotation_Hero::kRewardFieldNumber;
const int CMsgBotWorldState_Actions_OceanAnnotation_Hero::kInternalActionFieldNumber;
const int CMsgBotWorldState_Actions_OceanAnnotation_Hero::kActionNameFieldNumber;
const int CMsgBotWorldState_Actions_OceanAnnotation_Hero::kDetailedStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Actions_OceanAnnotation_Hero::CMsgBotWorldState_Actions_OceanAnnotation_Hero()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Actions_OceanAnnotation_Hero.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
}
CMsgBotWorldState_Actions_OceanAnnotation_Hero::CMsgBotWorldState_Actions_OceanAnnotation_Hero(const CMsgBotWorldState_Actions_OceanAnnotation_Hero& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      internalaction_(from.internalaction_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  actionname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_actionname()) {
    actionname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actionname_);
  }
  detailedstats_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_detailedstats()) {
    detailedstats_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailedstats_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&reward_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(reward_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
}

void CMsgBotWorldState_Actions_OceanAnnotation_Hero::SharedCtor() {
  actionname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailedstats_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reward_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(reward_));
}

CMsgBotWorldState_Actions_OceanAnnotation_Hero::~CMsgBotWorldState_Actions_OceanAnnotation_Hero() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
  SharedDtor();
}

void CMsgBotWorldState_Actions_OceanAnnotation_Hero::SharedDtor() {
  actionname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailedstats_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgBotWorldState_Actions_OceanAnnotation_Hero::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Actions_OceanAnnotation_Hero::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Actions_OceanAnnotation_Hero& CMsgBotWorldState_Actions_OceanAnnotation_Hero::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Actions_OceanAnnotation_Hero.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Actions_OceanAnnotation_Hero::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  internalaction_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      actionname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      detailedstats_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&playerid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reward_) -
        reinterpret_cast<char*>(&playerid_)) + sizeof(reward_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Actions_OceanAnnotation_Hero::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 playerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_playerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float valueFunction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_valuefunction();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &valuefunction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float actionLogp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_actionlogp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &actionlogp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float reward = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_reward();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 internalAction = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_internalaction())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_internalaction())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string actionName = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actionname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->actionname().data(), static_cast<int>(this->actionname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Actions.OceanAnnotation.Hero.actionName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes detailedStats = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_detailedstats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
  return false;
#undef DO_
}

void CMsgBotWorldState_Actions_OceanAnnotation_Hero::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 playerID = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerid(), output);
  }

  // optional float valueFunction = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->valuefunction(), output);
  }

  // optional float actionLogp = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->actionlogp(), output);
  }

  // optional float reward = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->reward(), output);
  }

  // repeated int32 internalAction = 5;
  for (int i = 0, n = this->internalaction_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->internalaction(i), output);
  }

  // optional string actionName = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->actionname().data(), static_cast<int>(this->actionname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Actions.OceanAnnotation.Hero.actionName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->actionname(), output);
  }

  // optional bytes detailedStats = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->detailedstats(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
}

::google::protobuf::uint8* CMsgBotWorldState_Actions_OceanAnnotation_Hero::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 playerID = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerid(), target);
  }

  // optional float valueFunction = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->valuefunction(), target);
  }

  // optional float actionLogp = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->actionlogp(), target);
  }

  // optional float reward = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->reward(), target);
  }

  // repeated int32 internalAction = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->internalaction_, target);

  // optional string actionName = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->actionname().data(), static_cast<int>(this->actionname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Actions.OceanAnnotation.Hero.actionName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->actionname(), target);
  }

  // optional bytes detailedStats = 7;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->detailedstats(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
  return target;
}

size_t CMsgBotWorldState_Actions_OceanAnnotation_Hero::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 playerID = 1;
  if (has_playerid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());
  }
  // repeated int32 internalAction = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->internalaction_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->internalaction_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string actionName = 6;
    if (has_actionname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->actionname());
    }

    // optional bytes detailedStats = 7;
    if (has_detailedstats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->detailedstats());
    }

  }
  if (_has_bits_[0 / 32] & 56u) {
    // optional float valueFunction = 2;
    if (has_valuefunction()) {
      total_size += 1 + 4;
    }

    // optional float actionLogp = 3;
    if (has_actionlogp()) {
      total_size += 1 + 4;
    }

    // optional float reward = 4;
    if (has_reward()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Actions_OceanAnnotation_Hero::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Actions_OceanAnnotation_Hero* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Actions_OceanAnnotation_Hero>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Actions_OceanAnnotation_Hero::MergeFrom(const CMsgBotWorldState_Actions_OceanAnnotation_Hero& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  internalaction_.MergeFrom(from.internalaction_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_actionname();
      actionname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actionname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_detailedstats();
      detailedstats_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailedstats_);
    }
    if (cached_has_bits & 0x00000004u) {
      playerid_ = from.playerid_;
    }
    if (cached_has_bits & 0x00000008u) {
      valuefunction_ = from.valuefunction_;
    }
    if (cached_has_bits & 0x00000010u) {
      actionlogp_ = from.actionlogp_;
    }
    if (cached_has_bits & 0x00000020u) {
      reward_ = from.reward_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Actions_OceanAnnotation_Hero::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Actions_OceanAnnotation_Hero::CopyFrom(const CMsgBotWorldState_Actions_OceanAnnotation_Hero& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Actions_OceanAnnotation_Hero::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void CMsgBotWorldState_Actions_OceanAnnotation_Hero::Swap(CMsgBotWorldState_Actions_OceanAnnotation_Hero* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Actions_OceanAnnotation_Hero::InternalSwap(CMsgBotWorldState_Actions_OceanAnnotation_Hero* other) {
  using std::swap;
  internalaction_.InternalSwap(&other->internalaction_);
  actionname_.Swap(&other->actionname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  detailedstats_.Swap(&other->detailedstats_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(valuefunction_, other->valuefunction_);
  swap(actionlogp_, other->actionlogp_);
  swap(reward_, other->reward_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Actions_OceanAnnotation_Hero::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Actions_OceanAnnotation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Actions_OceanAnnotation::kHeroesFieldNumber;
const int CMsgBotWorldState_Actions_OceanAnnotation::kAgentIDFieldNumber;
const int CMsgBotWorldState_Actions_OceanAnnotation::kRewardsFieldNumber;
const int CMsgBotWorldState_Actions_OceanAnnotation::kRewardNamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Actions_OceanAnnotation::CMsgBotWorldState_Actions_OceanAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Actions_OceanAnnotation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Actions.OceanAnnotation)
}
CMsgBotWorldState_Actions_OceanAnnotation::CMsgBotWorldState_Actions_OceanAnnotation(const CMsgBotWorldState_Actions_OceanAnnotation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      heroes_(from.heroes_),
      rewards_(from.rewards_),
      reward_names_(from.reward_names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  agentid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_agentid()) {
    agentid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.agentid_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Actions.OceanAnnotation)
}

void CMsgBotWorldState_Actions_OceanAnnotation::SharedCtor() {
  agentid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgBotWorldState_Actions_OceanAnnotation::~CMsgBotWorldState_Actions_OceanAnnotation() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Actions.OceanAnnotation)
  SharedDtor();
}

void CMsgBotWorldState_Actions_OceanAnnotation::SharedDtor() {
  agentid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgBotWorldState_Actions_OceanAnnotation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Actions_OceanAnnotation::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Actions_OceanAnnotation& CMsgBotWorldState_Actions_OceanAnnotation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Actions_OceanAnnotation.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Actions_OceanAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Actions.OceanAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  heroes_.Clear();
  rewards_.Clear();
  reward_names_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    agentid_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Actions_OceanAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Actions.OceanAnnotation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgBotWorldState.Actions.OceanAnnotation.Hero heroes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_heroes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string agentID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_agentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->agentid().data(), static_cast<int>(this->agentid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Actions.OceanAnnotation.agentID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float rewards = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 53u, input, this->mutable_rewards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_rewards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string reward_names = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_reward_names()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reward_names(this->reward_names_size() - 1).data(),
            static_cast<int>(this->reward_names(this->reward_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Actions.OceanAnnotation.reward_names");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Actions.OceanAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Actions.OceanAnnotation)
  return false;
#undef DO_
}

void CMsgBotWorldState_Actions_OceanAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Actions.OceanAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgBotWorldState.Actions.OceanAnnotation.Hero heroes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->heroes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->heroes(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string agentID = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->agentid().data(), static_cast<int>(this->agentid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Actions.OceanAnnotation.agentID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->agentid(), output);
  }

  // repeated float rewards = 6;
  for (int i = 0, n = this->rewards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      6, this->rewards(i), output);
  }

  // repeated string reward_names = 7;
  for (int i = 0, n = this->reward_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reward_names(i).data(), static_cast<int>(this->reward_names(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Actions.OceanAnnotation.reward_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->reward_names(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Actions.OceanAnnotation)
}

::google::protobuf::uint8* CMsgBotWorldState_Actions_OceanAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Actions.OceanAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgBotWorldState.Actions.OceanAnnotation.Hero heroes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->heroes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->heroes(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string agentID = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->agentid().data(), static_cast<int>(this->agentid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Actions.OceanAnnotation.agentID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->agentid(), target);
  }

  // repeated float rewards = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(6, this->rewards_, target);

  // repeated string reward_names = 7;
  for (int i = 0, n = this->reward_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reward_names(i).data(), static_cast<int>(this->reward_names(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Actions.OceanAnnotation.reward_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->reward_names(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Actions.OceanAnnotation)
  return target;
}

size_t CMsgBotWorldState_Actions_OceanAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Actions.OceanAnnotation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgBotWorldState.Actions.OceanAnnotation.Hero heroes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->heroes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->heroes(static_cast<int>(i)));
    }
  }

  // repeated float rewards = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->rewards_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->rewards_size());
    total_size += data_size;
  }

  // repeated string reward_names = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->reward_names_size());
  for (int i = 0, n = this->reward_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->reward_names(i));
  }

  // optional string agentID = 5;
  if (has_agentid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->agentid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Actions_OceanAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Actions.OceanAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Actions_OceanAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Actions_OceanAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Actions.OceanAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Actions.OceanAnnotation)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Actions_OceanAnnotation::MergeFrom(const CMsgBotWorldState_Actions_OceanAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Actions.OceanAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  heroes_.MergeFrom(from.heroes_);
  rewards_.MergeFrom(from.rewards_);
  reward_names_.MergeFrom(from.reward_names_);
  if (from.has_agentid()) {
    set_has_agentid();
    agentid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.agentid_);
  }
}

void CMsgBotWorldState_Actions_OceanAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Actions.OceanAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Actions_OceanAnnotation::CopyFrom(const CMsgBotWorldState_Actions_OceanAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Actions.OceanAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Actions_OceanAnnotation::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->heroes())) return false;
  return true;
}

void CMsgBotWorldState_Actions_OceanAnnotation::Swap(CMsgBotWorldState_Actions_OceanAnnotation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Actions_OceanAnnotation::InternalSwap(CMsgBotWorldState_Actions_OceanAnnotation* other) {
  using std::swap;
  CastToBase(&heroes_)->InternalSwap(CastToBase(&other->heroes_));
  rewards_.InternalSwap(&other->rewards_);
  reward_names_.InternalSwap(CastToBase(&other->reward_names_));
  agentid_.Swap(&other->agentid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Actions_OceanAnnotation::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Actions_Header::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Actions_Header::kStartTimeFieldNumber;
const int CMsgBotWorldState_Actions_Header::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Actions_Header::CMsgBotWorldState_Actions_Header()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Actions_Header.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Actions.Header)
}
CMsgBotWorldState_Actions_Header::CMsgBotWorldState_Actions_Header(const CMsgBotWorldState_Actions_Header& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  starttime_ = from.starttime_;
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Actions.Header)
}

void CMsgBotWorldState_Actions_Header::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  starttime_ = 0;
}

CMsgBotWorldState_Actions_Header::~CMsgBotWorldState_Actions_Header() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Actions.Header)
  SharedDtor();
}

void CMsgBotWorldState_Actions_Header::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgBotWorldState_Actions_Header::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Actions_Header::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Actions_Header& CMsgBotWorldState_Actions_Header::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Actions_Header.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Actions_Header::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Actions.Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  starttime_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Actions_Header::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Actions.Header)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float startTime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_starttime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &starttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Actions.Header.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Actions.Header)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Actions.Header)
  return false;
#undef DO_
}

void CMsgBotWorldState_Actions_Header::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Actions.Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float startTime = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->starttime(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Actions.Header.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Actions.Header)
}

::google::protobuf::uint8* CMsgBotWorldState_Actions_Header::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Actions.Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float startTime = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->starttime(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Actions.Header.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Actions.Header)
  return target;
}

size_t CMsgBotWorldState_Actions_Header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Actions.Header)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional float startTime = 1;
    if (has_starttime()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Actions_Header::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Actions.Header)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Actions_Header* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Actions_Header>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Actions.Header)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Actions.Header)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Actions_Header::MergeFrom(const CMsgBotWorldState_Actions_Header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Actions.Header)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      starttime_ = from.starttime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Actions_Header::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Actions.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Actions_Header::CopyFrom(const CMsgBotWorldState_Actions_Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Actions.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Actions_Header::IsInitialized() const {
  return true;
}

void CMsgBotWorldState_Actions_Header::Swap(CMsgBotWorldState_Actions_Header* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Actions_Header::InternalSwap(CMsgBotWorldState_Actions_Header* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(starttime_, other->starttime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Actions_Header::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Actions::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_Actions_default_instance_._instance.get_mutable()->oceanannotation_ = const_cast< ::CMsgBotWorldState_Actions_OceanAnnotation*>(
      ::CMsgBotWorldState_Actions_OceanAnnotation::internal_default_instance());
  ::_CMsgBotWorldState_Actions_default_instance_._instance.get_mutable()->header_ = const_cast< ::CMsgBotWorldState_Actions_Header*>(
      ::CMsgBotWorldState_Actions_Header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Actions::kDotaTimeFieldNumber;
const int CMsgBotWorldState_Actions::kActionsFieldNumber;
const int CMsgBotWorldState_Actions::kExtraDataFieldNumber;
const int CMsgBotWorldState_Actions::kOceanAnnotationFieldNumber;
const int CMsgBotWorldState_Actions::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Actions::CMsgBotWorldState_Actions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Actions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Actions)
}
CMsgBotWorldState_Actions::CMsgBotWorldState_Actions(const CMsgBotWorldState_Actions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extradata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_extradata()) {
    extradata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extradata_);
  }
  if (from.has_oceanannotation()) {
    oceanannotation_ = new ::CMsgBotWorldState_Actions_OceanAnnotation(*from.oceanannotation_);
  } else {
    oceanannotation_ = NULL;
  }
  if (from.has_header()) {
    header_ = new ::CMsgBotWorldState_Actions_Header(*from.header_);
  } else {
    header_ = NULL;
  }
  dota_time_ = from.dota_time_;
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Actions)
}

void CMsgBotWorldState_Actions::SharedCtor() {
  extradata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&oceanannotation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&header_) -
      reinterpret_cast<char*>(&oceanannotation_)) + sizeof(header_));
  dota_time_ = -100;
}

CMsgBotWorldState_Actions::~CMsgBotWorldState_Actions() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Actions)
  SharedDtor();
}

void CMsgBotWorldState_Actions::SharedDtor() {
  extradata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete oceanannotation_;
  if (this != internal_default_instance()) delete header_;
}

void CMsgBotWorldState_Actions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Actions::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Actions& CMsgBotWorldState_Actions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Actions.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Actions::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Actions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      extradata_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(oceanannotation_ != NULL);
      oceanannotation_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
    dota_time_ = -100;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Actions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Actions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float dota_time = 1 [default = -100];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_dota_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dota_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgBotWorldState.Action actions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string extraData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extradata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extradata().data(), static_cast<int>(this->extradata().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Actions.extraData");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Actions.OceanAnnotation oceanAnnotation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_oceanannotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Actions.Header header = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Actions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Actions)
  return false;
#undef DO_
}

void CMsgBotWorldState_Actions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Actions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float dota_time = 1 [default = -100];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->dota_time(), output);
  }

  // repeated .CMsgBotWorldState.Action actions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->actions(static_cast<int>(i)),
      output);
  }

  // optional string extraData = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extradata().data(), static_cast<int>(this->extradata().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Actions.extraData");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->extradata(), output);
  }

  // optional .CMsgBotWorldState.Actions.OceanAnnotation oceanAnnotation = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_oceanannotation(), output);
  }

  // optional .CMsgBotWorldState.Actions.Header header = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_header(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Actions)
}

::google::protobuf::uint8* CMsgBotWorldState_Actions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Actions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float dota_time = 1 [default = -100];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->dota_time(), target);
  }

  // repeated .CMsgBotWorldState.Action actions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->actions(static_cast<int>(i)), deterministic, target);
  }

  // optional string extraData = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extradata().data(), static_cast<int>(this->extradata().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Actions.extraData");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->extradata(), target);
  }

  // optional .CMsgBotWorldState.Actions.OceanAnnotation oceanAnnotation = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_oceanannotation(), deterministic, target);
  }

  // optional .CMsgBotWorldState.Actions.Header header = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_header(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Actions)
  return target;
}

size_t CMsgBotWorldState_Actions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Actions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgBotWorldState.Action actions = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->actions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->actions(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string extraData = 3;
    if (has_extradata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extradata());
    }

    // optional .CMsgBotWorldState.Actions.OceanAnnotation oceanAnnotation = 4;
    if (has_oceanannotation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *oceanannotation_);
    }

    // optional .CMsgBotWorldState.Actions.Header header = 5;
    if (has_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *header_);
    }

    // optional float dota_time = 1 [default = -100];
    if (has_dota_time()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Actions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Actions)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Actions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Actions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Actions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Actions)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Actions::MergeFrom(const CMsgBotWorldState_Actions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Actions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_extradata();
      extradata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extradata_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_oceanannotation()->::CMsgBotWorldState_Actions_OceanAnnotation::MergeFrom(from.oceanannotation());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_header()->::CMsgBotWorldState_Actions_Header::MergeFrom(from.header());
    }
    if (cached_has_bits & 0x00000008u) {
      dota_time_ = from.dota_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Actions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Actions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Actions::CopyFrom(const CMsgBotWorldState_Actions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Actions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Actions::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->actions())) return false;
  if (has_oceanannotation()) {
    if (!this->oceanannotation_->IsInitialized()) return false;
  }
  return true;
}

void CMsgBotWorldState_Actions::Swap(CMsgBotWorldState_Actions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Actions::InternalSwap(CMsgBotWorldState_Actions* other) {
  using std::swap;
  CastToBase(&actions_)->InternalSwap(CastToBase(&other->actions_));
  extradata_.Swap(&other->extradata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(oceanannotation_, other->oceanannotation_);
  swap(header_, other->header_);
  swap(dota_time_, other->dota_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Actions::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_MoveToLocation::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_Action_MoveToLocation_default_instance_._instance.get_mutable()->location_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_MoveToLocation::kUnitsFieldNumber;
const int CMsgBotWorldState_Action_MoveToLocation::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_MoveToLocation::CMsgBotWorldState_Action_MoveToLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_MoveToLocation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.MoveToLocation)
}
CMsgBotWorldState_Action_MoveToLocation::CMsgBotWorldState_Action_MoveToLocation(const CMsgBotWorldState_Action_MoveToLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      units_(from.units_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::CMsgBotWorldState_Vector(*from.location_);
  } else {
    location_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.MoveToLocation)
}

void CMsgBotWorldState_Action_MoveToLocation::SharedCtor() {
  location_ = NULL;
}

CMsgBotWorldState_Action_MoveToLocation::~CMsgBotWorldState_Action_MoveToLocation() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.MoveToLocation)
  SharedDtor();
}

void CMsgBotWorldState_Action_MoveToLocation::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
}

void CMsgBotWorldState_Action_MoveToLocation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_MoveToLocation::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_MoveToLocation& CMsgBotWorldState_Action_MoveToLocation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_MoveToLocation.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_MoveToLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.MoveToLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  units_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(location_ != NULL);
    location_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_MoveToLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.MoveToLocation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 units = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_units())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_units())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .CMsgBotWorldState.Vector location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.MoveToLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.MoveToLocation)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_MoveToLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.MoveToLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  for (int i = 0, n = this->units_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->units(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // required .CMsgBotWorldState.Vector location = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_location(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.MoveToLocation)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_MoveToLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.MoveToLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->units_, target);

  cached_has_bits = _has_bits_[0];
  // required .CMsgBotWorldState.Vector location = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_location(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.MoveToLocation)
  return target;
}

size_t CMsgBotWorldState_Action_MoveToLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.MoveToLocation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .CMsgBotWorldState.Vector location = 2;
  if (has_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *location_);
  }
  // repeated int32 units = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->units_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->units_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_MoveToLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.MoveToLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_MoveToLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_MoveToLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.MoveToLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.MoveToLocation)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_MoveToLocation::MergeFrom(const CMsgBotWorldState_Action_MoveToLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.MoveToLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  units_.MergeFrom(from.units_);
  if (from.has_location()) {
    mutable_location()->::CMsgBotWorldState_Vector::MergeFrom(from.location());
  }
}

void CMsgBotWorldState_Action_MoveToLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.MoveToLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_MoveToLocation::CopyFrom(const CMsgBotWorldState_Action_MoveToLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.MoveToLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_MoveToLocation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_location()) {
    if (!this->location_->IsInitialized()) return false;
  }
  return true;
}

void CMsgBotWorldState_Action_MoveToLocation::Swap(CMsgBotWorldState_Action_MoveToLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_MoveToLocation::InternalSwap(CMsgBotWorldState_Action_MoveToLocation* other) {
  using std::swap;
  units_.InternalSwap(&other->units_);
  swap(location_, other->location_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_MoveToLocation::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_MoveToTarget::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_MoveToTarget::kUnitsFieldNumber;
const int CMsgBotWorldState_Action_MoveToTarget::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_MoveToTarget::CMsgBotWorldState_Action_MoveToTarget()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_MoveToTarget.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.MoveToTarget)
}
CMsgBotWorldState_Action_MoveToTarget::CMsgBotWorldState_Action_MoveToTarget(const CMsgBotWorldState_Action_MoveToTarget& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      units_(from.units_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_ = from.target_;
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.MoveToTarget)
}

void CMsgBotWorldState_Action_MoveToTarget::SharedCtor() {
  target_ = 0;
}

CMsgBotWorldState_Action_MoveToTarget::~CMsgBotWorldState_Action_MoveToTarget() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.MoveToTarget)
  SharedDtor();
}

void CMsgBotWorldState_Action_MoveToTarget::SharedDtor() {
}

void CMsgBotWorldState_Action_MoveToTarget::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_MoveToTarget::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_MoveToTarget& CMsgBotWorldState_Action_MoveToTarget::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_MoveToTarget.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_MoveToTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.MoveToTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  units_.Clear();
  target_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_MoveToTarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.MoveToTarget)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 units = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_units())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_units())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 target = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.MoveToTarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.MoveToTarget)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_MoveToTarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.MoveToTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  for (int i = 0, n = this->units_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->units(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 target = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->target(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.MoveToTarget)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_MoveToTarget::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.MoveToTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->units_, target);

  cached_has_bits = _has_bits_[0];
  // required int32 target = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->target(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.MoveToTarget)
  return target;
}

size_t CMsgBotWorldState_Action_MoveToTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.MoveToTarget)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 target = 2;
  if (has_target()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target());
  }
  // repeated int32 units = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->units_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->units_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_MoveToTarget::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.MoveToTarget)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_MoveToTarget* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_MoveToTarget>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.MoveToTarget)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.MoveToTarget)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_MoveToTarget::MergeFrom(const CMsgBotWorldState_Action_MoveToTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.MoveToTarget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  units_.MergeFrom(from.units_);
  if (from.has_target()) {
    set_target(from.target());
  }
}

void CMsgBotWorldState_Action_MoveToTarget::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.MoveToTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_MoveToTarget::CopyFrom(const CMsgBotWorldState_Action_MoveToTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.MoveToTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_MoveToTarget::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMsgBotWorldState_Action_MoveToTarget::Swap(CMsgBotWorldState_Action_MoveToTarget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_MoveToTarget::InternalSwap(CMsgBotWorldState_Action_MoveToTarget* other) {
  using std::swap;
  units_.InternalSwap(&other->units_);
  swap(target_, other->target_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_MoveToTarget::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_AttackMove::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_Action_AttackMove_default_instance_._instance.get_mutable()->location_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_AttackMove::kUnitsFieldNumber;
const int CMsgBotWorldState_Action_AttackMove::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_AttackMove::CMsgBotWorldState_Action_AttackMove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_AttackMove.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.AttackMove)
}
CMsgBotWorldState_Action_AttackMove::CMsgBotWorldState_Action_AttackMove(const CMsgBotWorldState_Action_AttackMove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      units_(from.units_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::CMsgBotWorldState_Vector(*from.location_);
  } else {
    location_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.AttackMove)
}

void CMsgBotWorldState_Action_AttackMove::SharedCtor() {
  location_ = NULL;
}

CMsgBotWorldState_Action_AttackMove::~CMsgBotWorldState_Action_AttackMove() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.AttackMove)
  SharedDtor();
}

void CMsgBotWorldState_Action_AttackMove::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
}

void CMsgBotWorldState_Action_AttackMove::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_AttackMove::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_AttackMove& CMsgBotWorldState_Action_AttackMove::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_AttackMove.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_AttackMove::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.AttackMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  units_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(location_ != NULL);
    location_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_AttackMove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.AttackMove)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 units = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_units())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_units())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .CMsgBotWorldState.Vector location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.AttackMove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.AttackMove)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_AttackMove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.AttackMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  for (int i = 0, n = this->units_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->units(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // required .CMsgBotWorldState.Vector location = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_location(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.AttackMove)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_AttackMove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.AttackMove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->units_, target);

  cached_has_bits = _has_bits_[0];
  // required .CMsgBotWorldState.Vector location = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_location(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.AttackMove)
  return target;
}

size_t CMsgBotWorldState_Action_AttackMove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.AttackMove)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .CMsgBotWorldState.Vector location = 2;
  if (has_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *location_);
  }
  // repeated int32 units = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->units_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->units_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_AttackMove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.AttackMove)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_AttackMove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_AttackMove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.AttackMove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.AttackMove)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_AttackMove::MergeFrom(const CMsgBotWorldState_Action_AttackMove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.AttackMove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  units_.MergeFrom(from.units_);
  if (from.has_location()) {
    mutable_location()->::CMsgBotWorldState_Vector::MergeFrom(from.location());
  }
}

void CMsgBotWorldState_Action_AttackMove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.AttackMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_AttackMove::CopyFrom(const CMsgBotWorldState_Action_AttackMove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.AttackMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_AttackMove::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_location()) {
    if (!this->location_->IsInitialized()) return false;
  }
  return true;
}

void CMsgBotWorldState_Action_AttackMove::Swap(CMsgBotWorldState_Action_AttackMove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_AttackMove::InternalSwap(CMsgBotWorldState_Action_AttackMove* other) {
  using std::swap;
  units_.InternalSwap(&other->units_);
  swap(location_, other->location_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_AttackMove::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_AttackTarget::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_AttackTarget::kUnitsFieldNumber;
const int CMsgBotWorldState_Action_AttackTarget::kTargetFieldNumber;
const int CMsgBotWorldState_Action_AttackTarget::kOnceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_AttackTarget::CMsgBotWorldState_Action_AttackTarget()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_AttackTarget.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.AttackTarget)
}
CMsgBotWorldState_Action_AttackTarget::CMsgBotWorldState_Action_AttackTarget(const CMsgBotWorldState_Action_AttackTarget& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      units_(from.units_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_, &from.target_,
    static_cast<size_t>(reinterpret_cast<char*>(&once_) -
    reinterpret_cast<char*>(&target_)) + sizeof(once_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.AttackTarget)
}

void CMsgBotWorldState_Action_AttackTarget::SharedCtor() {
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&once_) -
      reinterpret_cast<char*>(&target_)) + sizeof(once_));
}

CMsgBotWorldState_Action_AttackTarget::~CMsgBotWorldState_Action_AttackTarget() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.AttackTarget)
  SharedDtor();
}

void CMsgBotWorldState_Action_AttackTarget::SharedDtor() {
}

void CMsgBotWorldState_Action_AttackTarget::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_AttackTarget::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_AttackTarget& CMsgBotWorldState_Action_AttackTarget::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_AttackTarget.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_AttackTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.AttackTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  units_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&target_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&once_) -
        reinterpret_cast<char*>(&target_)) + sizeof(once_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_AttackTarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.AttackTarget)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 units = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_units())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_units())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 target = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool once = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_once();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &once_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.AttackTarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.AttackTarget)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_AttackTarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.AttackTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  for (int i = 0, n = this->units_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->units(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 target = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->target(), output);
  }

  // optional bool once = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->once(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.AttackTarget)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_AttackTarget::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.AttackTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->units_, target);

  cached_has_bits = _has_bits_[0];
  // required int32 target = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->target(), target);
  }

  // optional bool once = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->once(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.AttackTarget)
  return target;
}

size_t CMsgBotWorldState_Action_AttackTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.AttackTarget)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 target = 2;
  if (has_target()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target());
  }
  // repeated int32 units = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->units_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->units_size());
    total_size += data_size;
  }

  // optional bool once = 3;
  if (has_once()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_AttackTarget::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.AttackTarget)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_AttackTarget* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_AttackTarget>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.AttackTarget)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.AttackTarget)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_AttackTarget::MergeFrom(const CMsgBotWorldState_Action_AttackTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.AttackTarget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  units_.MergeFrom(from.units_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      target_ = from.target_;
    }
    if (cached_has_bits & 0x00000002u) {
      once_ = from.once_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_AttackTarget::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.AttackTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_AttackTarget::CopyFrom(const CMsgBotWorldState_Action_AttackTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.AttackTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_AttackTarget::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMsgBotWorldState_Action_AttackTarget::Swap(CMsgBotWorldState_Action_AttackTarget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_AttackTarget::InternalSwap(CMsgBotWorldState_Action_AttackTarget* other) {
  using std::swap;
  units_.InternalSwap(&other->units_);
  swap(target_, other->target_);
  swap(once_, other->once_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_AttackTarget::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_HoldLocation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_HoldLocation::kUnitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_HoldLocation::CMsgBotWorldState_Action_HoldLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_HoldLocation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.HoldLocation)
}
CMsgBotWorldState_Action_HoldLocation::CMsgBotWorldState_Action_HoldLocation(const CMsgBotWorldState_Action_HoldLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      units_(from.units_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.HoldLocation)
}

void CMsgBotWorldState_Action_HoldLocation::SharedCtor() {
}

CMsgBotWorldState_Action_HoldLocation::~CMsgBotWorldState_Action_HoldLocation() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.HoldLocation)
  SharedDtor();
}

void CMsgBotWorldState_Action_HoldLocation::SharedDtor() {
}

void CMsgBotWorldState_Action_HoldLocation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_HoldLocation::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_HoldLocation& CMsgBotWorldState_Action_HoldLocation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_HoldLocation.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_HoldLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.HoldLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  units_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_HoldLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.HoldLocation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 units = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_units())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_units())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.HoldLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.HoldLocation)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_HoldLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.HoldLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  for (int i = 0, n = this->units_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->units(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.HoldLocation)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_HoldLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.HoldLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->units_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.HoldLocation)
  return target;
}

size_t CMsgBotWorldState_Action_HoldLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.HoldLocation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 units = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->units_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->units_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_HoldLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.HoldLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_HoldLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_HoldLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.HoldLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.HoldLocation)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_HoldLocation::MergeFrom(const CMsgBotWorldState_Action_HoldLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.HoldLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  units_.MergeFrom(from.units_);
}

void CMsgBotWorldState_Action_HoldLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.HoldLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_HoldLocation::CopyFrom(const CMsgBotWorldState_Action_HoldLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.HoldLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_HoldLocation::IsInitialized() const {
  return true;
}

void CMsgBotWorldState_Action_HoldLocation::Swap(CMsgBotWorldState_Action_HoldLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_HoldLocation::InternalSwap(CMsgBotWorldState_Action_HoldLocation* other) {
  using std::swap;
  units_.InternalSwap(&other->units_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_HoldLocation::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_Stop::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_Stop::kUnitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_Stop::CMsgBotWorldState_Action_Stop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_Stop.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.Stop)
}
CMsgBotWorldState_Action_Stop::CMsgBotWorldState_Action_Stop(const CMsgBotWorldState_Action_Stop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      units_(from.units_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.Stop)
}

void CMsgBotWorldState_Action_Stop::SharedCtor() {
}

CMsgBotWorldState_Action_Stop::~CMsgBotWorldState_Action_Stop() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.Stop)
  SharedDtor();
}

void CMsgBotWorldState_Action_Stop::SharedDtor() {
}

void CMsgBotWorldState_Action_Stop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_Stop::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_Stop& CMsgBotWorldState_Action_Stop::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_Stop.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_Stop::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  units_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_Stop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.Stop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 units = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_units())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_units())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.Stop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.Stop)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_Stop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  for (int i = 0, n = this->units_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->units(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.Stop)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_Stop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->units_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.Stop)
  return target;
}

size_t CMsgBotWorldState_Action_Stop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.Stop)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 units = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->units_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->units_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_Stop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.Stop)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_Stop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_Stop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.Stop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.Stop)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_Stop::MergeFrom(const CMsgBotWorldState_Action_Stop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.Stop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  units_.MergeFrom(from.units_);
}

void CMsgBotWorldState_Action_Stop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_Stop::CopyFrom(const CMsgBotWorldState_Action_Stop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_Stop::IsInitialized() const {
  return true;
}

void CMsgBotWorldState_Action_Stop::Swap(CMsgBotWorldState_Action_Stop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_Stop::InternalSwap(CMsgBotWorldState_Action_Stop* other) {
  using std::swap;
  units_.InternalSwap(&other->units_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_Stop::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_CastLocation::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_Action_CastLocation_default_instance_._instance.get_mutable()->location_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_CastLocation::kUnitsFieldNumber;
const int CMsgBotWorldState_Action_CastLocation::kAbilitySlotFieldNumber;
const int CMsgBotWorldState_Action_CastLocation::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_CastLocation::CMsgBotWorldState_Action_CastLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_CastLocation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.CastLocation)
}
CMsgBotWorldState_Action_CastLocation::CMsgBotWorldState_Action_CastLocation(const CMsgBotWorldState_Action_CastLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      units_(from.units_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::CMsgBotWorldState_Vector(*from.location_);
  } else {
    location_ = NULL;
  }
  abilityslot_ = from.abilityslot_;
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.CastLocation)
}

void CMsgBotWorldState_Action_CastLocation::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&abilityslot_) -
      reinterpret_cast<char*>(&location_)) + sizeof(abilityslot_));
}

CMsgBotWorldState_Action_CastLocation::~CMsgBotWorldState_Action_CastLocation() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.CastLocation)
  SharedDtor();
}

void CMsgBotWorldState_Action_CastLocation::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
}

void CMsgBotWorldState_Action_CastLocation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_CastLocation::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_CastLocation& CMsgBotWorldState_Action_CastLocation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_CastLocation.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_CastLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.CastLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  units_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(location_ != NULL);
    location_->Clear();
  }
  abilityslot_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_CastLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.CastLocation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 units = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_units())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_units())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 abilitySlot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_abilityslot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &abilityslot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .CMsgBotWorldState.Vector location = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.CastLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.CastLocation)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_CastLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.CastLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  for (int i = 0, n = this->units_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->units(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 abilitySlot = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->abilityslot(), output);
  }

  // required .CMsgBotWorldState.Vector location = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_location(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.CastLocation)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_CastLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.CastLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->units_, target);

  cached_has_bits = _has_bits_[0];
  // required int32 abilitySlot = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->abilityslot(), target);
  }

  // required .CMsgBotWorldState.Vector location = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_location(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.CastLocation)
  return target;
}

size_t CMsgBotWorldState_Action_CastLocation::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgBotWorldState.Action.CastLocation)
  size_t total_size = 0;

  if (has_location()) {
    // required .CMsgBotWorldState.Vector location = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *location_);
  }

  if (has_abilityslot()) {
    // required int32 abilitySlot = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->abilityslot());
  }

  return total_size;
}
size_t CMsgBotWorldState_Action_CastLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.CastLocation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .CMsgBotWorldState.Vector location = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *location_);

    // required int32 abilitySlot = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->abilityslot());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 units = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->units_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->units_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_CastLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.CastLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_CastLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_CastLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.CastLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.CastLocation)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_CastLocation::MergeFrom(const CMsgBotWorldState_Action_CastLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.CastLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  units_.MergeFrom(from.units_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_location()->::CMsgBotWorldState_Vector::MergeFrom(from.location());
    }
    if (cached_has_bits & 0x00000002u) {
      abilityslot_ = from.abilityslot_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_CastLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.CastLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_CastLocation::CopyFrom(const CMsgBotWorldState_Action_CastLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.CastLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_CastLocation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_location()) {
    if (!this->location_->IsInitialized()) return false;
  }
  return true;
}

void CMsgBotWorldState_Action_CastLocation::Swap(CMsgBotWorldState_Action_CastLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_CastLocation::InternalSwap(CMsgBotWorldState_Action_CastLocation* other) {
  using std::swap;
  units_.InternalSwap(&other->units_);
  swap(location_, other->location_);
  swap(abilityslot_, other->abilityslot_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_CastLocation::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_CastTarget::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_CastTarget::kUnitsFieldNumber;
const int CMsgBotWorldState_Action_CastTarget::kAbilitySlotFieldNumber;
const int CMsgBotWorldState_Action_CastTarget::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_CastTarget::CMsgBotWorldState_Action_CastTarget()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_CastTarget.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.CastTarget)
}
CMsgBotWorldState_Action_CastTarget::CMsgBotWorldState_Action_CastTarget(const CMsgBotWorldState_Action_CastTarget& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      units_(from.units_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&abilityslot_, &from.abilityslot_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_) -
    reinterpret_cast<char*>(&abilityslot_)) + sizeof(target_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.CastTarget)
}

void CMsgBotWorldState_Action_CastTarget::SharedCtor() {
  ::memset(&abilityslot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_) -
      reinterpret_cast<char*>(&abilityslot_)) + sizeof(target_));
}

CMsgBotWorldState_Action_CastTarget::~CMsgBotWorldState_Action_CastTarget() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.CastTarget)
  SharedDtor();
}

void CMsgBotWorldState_Action_CastTarget::SharedDtor() {
}

void CMsgBotWorldState_Action_CastTarget::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_CastTarget::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_CastTarget& CMsgBotWorldState_Action_CastTarget::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_CastTarget.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_CastTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.CastTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  units_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&abilityslot_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_) -
        reinterpret_cast<char*>(&abilityslot_)) + sizeof(target_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_CastTarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.CastTarget)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 units = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_units())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_units())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 abilitySlot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_abilityslot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &abilityslot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 target = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.CastTarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.CastTarget)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_CastTarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.CastTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  for (int i = 0, n = this->units_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->units(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 abilitySlot = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->abilityslot(), output);
  }

  // required int32 target = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->target(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.CastTarget)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_CastTarget::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.CastTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->units_, target);

  cached_has_bits = _has_bits_[0];
  // required int32 abilitySlot = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->abilityslot(), target);
  }

  // required int32 target = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->target(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.CastTarget)
  return target;
}

size_t CMsgBotWorldState_Action_CastTarget::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgBotWorldState.Action.CastTarget)
  size_t total_size = 0;

  if (has_abilityslot()) {
    // required int32 abilitySlot = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->abilityslot());
  }

  if (has_target()) {
    // required int32 target = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target());
  }

  return total_size;
}
size_t CMsgBotWorldState_Action_CastTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.CastTarget)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 abilitySlot = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->abilityslot());

    // required int32 target = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 units = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->units_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->units_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_CastTarget::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.CastTarget)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_CastTarget* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_CastTarget>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.CastTarget)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.CastTarget)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_CastTarget::MergeFrom(const CMsgBotWorldState_Action_CastTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.CastTarget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  units_.MergeFrom(from.units_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      abilityslot_ = from.abilityslot_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_ = from.target_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_CastTarget::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.CastTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_CastTarget::CopyFrom(const CMsgBotWorldState_Action_CastTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.CastTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_CastTarget::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CMsgBotWorldState_Action_CastTarget::Swap(CMsgBotWorldState_Action_CastTarget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_CastTarget::InternalSwap(CMsgBotWorldState_Action_CastTarget* other) {
  using std::swap;
  units_.InternalSwap(&other->units_);
  swap(abilityslot_, other->abilityslot_);
  swap(target_, other->target_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_CastTarget::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_CastTree::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_CastTree::kUnitsFieldNumber;
const int CMsgBotWorldState_Action_CastTree::kAbilitySlotFieldNumber;
const int CMsgBotWorldState_Action_CastTree::kTreeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_CastTree::CMsgBotWorldState_Action_CastTree()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_CastTree.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.CastTree)
}
CMsgBotWorldState_Action_CastTree::CMsgBotWorldState_Action_CastTree(const CMsgBotWorldState_Action_CastTree& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      units_(from.units_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&abilityslot_, &from.abilityslot_,
    static_cast<size_t>(reinterpret_cast<char*>(&tree_) -
    reinterpret_cast<char*>(&abilityslot_)) + sizeof(tree_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.CastTree)
}

void CMsgBotWorldState_Action_CastTree::SharedCtor() {
  ::memset(&abilityslot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tree_) -
      reinterpret_cast<char*>(&abilityslot_)) + sizeof(tree_));
}

CMsgBotWorldState_Action_CastTree::~CMsgBotWorldState_Action_CastTree() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.CastTree)
  SharedDtor();
}

void CMsgBotWorldState_Action_CastTree::SharedDtor() {
}

void CMsgBotWorldState_Action_CastTree::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_CastTree::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_CastTree& CMsgBotWorldState_Action_CastTree::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_CastTree.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_CastTree::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.CastTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  units_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&abilityslot_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tree_) -
        reinterpret_cast<char*>(&abilityslot_)) + sizeof(tree_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_CastTree::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.CastTree)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 units = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_units())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_units())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 abilitySlot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_abilityslot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &abilityslot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 tree = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_tree();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tree_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.CastTree)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.CastTree)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_CastTree::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.CastTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  for (int i = 0, n = this->units_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->units(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 abilitySlot = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->abilityslot(), output);
  }

  // required int32 tree = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->tree(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.CastTree)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_CastTree::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.CastTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->units_, target);

  cached_has_bits = _has_bits_[0];
  // required int32 abilitySlot = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->abilityslot(), target);
  }

  // required int32 tree = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->tree(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.CastTree)
  return target;
}

size_t CMsgBotWorldState_Action_CastTree::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgBotWorldState.Action.CastTree)
  size_t total_size = 0;

  if (has_abilityslot()) {
    // required int32 abilitySlot = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->abilityslot());
  }

  if (has_tree()) {
    // required int32 tree = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tree());
  }

  return total_size;
}
size_t CMsgBotWorldState_Action_CastTree::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.CastTree)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 abilitySlot = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->abilityslot());

    // required int32 tree = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tree());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 units = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->units_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->units_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_CastTree::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.CastTree)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_CastTree* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_CastTree>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.CastTree)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.CastTree)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_CastTree::MergeFrom(const CMsgBotWorldState_Action_CastTree& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.CastTree)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  units_.MergeFrom(from.units_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      abilityslot_ = from.abilityslot_;
    }
    if (cached_has_bits & 0x00000002u) {
      tree_ = from.tree_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_CastTree::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.CastTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_CastTree::CopyFrom(const CMsgBotWorldState_Action_CastTree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.CastTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_CastTree::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CMsgBotWorldState_Action_CastTree::Swap(CMsgBotWorldState_Action_CastTree* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_CastTree::InternalSwap(CMsgBotWorldState_Action_CastTree* other) {
  using std::swap;
  units_.InternalSwap(&other->units_);
  swap(abilityslot_, other->abilityslot_);
  swap(tree_, other->tree_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_CastTree::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_Cast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_Cast::kUnitsFieldNumber;
const int CMsgBotWorldState_Action_Cast::kAbilitySlotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_Cast::CMsgBotWorldState_Action_Cast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_Cast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.Cast)
}
CMsgBotWorldState_Action_Cast::CMsgBotWorldState_Action_Cast(const CMsgBotWorldState_Action_Cast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      units_(from.units_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  abilityslot_ = from.abilityslot_;
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.Cast)
}

void CMsgBotWorldState_Action_Cast::SharedCtor() {
  abilityslot_ = 0;
}

CMsgBotWorldState_Action_Cast::~CMsgBotWorldState_Action_Cast() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.Cast)
  SharedDtor();
}

void CMsgBotWorldState_Action_Cast::SharedDtor() {
}

void CMsgBotWorldState_Action_Cast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_Cast::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_Cast& CMsgBotWorldState_Action_Cast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_Cast.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_Cast::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.Cast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  units_.Clear();
  abilityslot_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_Cast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.Cast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 units = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_units())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_units())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 abilitySlot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_abilityslot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &abilityslot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.Cast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.Cast)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_Cast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.Cast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  for (int i = 0, n = this->units_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->units(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 abilitySlot = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->abilityslot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.Cast)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_Cast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.Cast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->units_, target);

  cached_has_bits = _has_bits_[0];
  // required int32 abilitySlot = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->abilityslot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.Cast)
  return target;
}

size_t CMsgBotWorldState_Action_Cast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.Cast)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 abilitySlot = 2;
  if (has_abilityslot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->abilityslot());
  }
  // repeated int32 units = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->units_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->units_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_Cast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.Cast)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_Cast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_Cast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.Cast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.Cast)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_Cast::MergeFrom(const CMsgBotWorldState_Action_Cast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.Cast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  units_.MergeFrom(from.units_);
  if (from.has_abilityslot()) {
    set_abilityslot(from.abilityslot());
  }
}

void CMsgBotWorldState_Action_Cast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.Cast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_Cast::CopyFrom(const CMsgBotWorldState_Action_Cast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.Cast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_Cast::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMsgBotWorldState_Action_Cast::Swap(CMsgBotWorldState_Action_Cast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_Cast::InternalSwap(CMsgBotWorldState_Action_Cast* other) {
  using std::swap;
  units_.InternalSwap(&other->units_);
  swap(abilityslot_, other->abilityslot_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_Cast::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_CastToggle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_CastToggle::kUnitsFieldNumber;
const int CMsgBotWorldState_Action_CastToggle::kAbilitySlotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_CastToggle::CMsgBotWorldState_Action_CastToggle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_CastToggle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.CastToggle)
}
CMsgBotWorldState_Action_CastToggle::CMsgBotWorldState_Action_CastToggle(const CMsgBotWorldState_Action_CastToggle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      units_(from.units_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  abilityslot_ = from.abilityslot_;
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.CastToggle)
}

void CMsgBotWorldState_Action_CastToggle::SharedCtor() {
  abilityslot_ = 0;
}

CMsgBotWorldState_Action_CastToggle::~CMsgBotWorldState_Action_CastToggle() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.CastToggle)
  SharedDtor();
}

void CMsgBotWorldState_Action_CastToggle::SharedDtor() {
}

void CMsgBotWorldState_Action_CastToggle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_CastToggle::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_CastToggle& CMsgBotWorldState_Action_CastToggle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_CastToggle.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_CastToggle::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.CastToggle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  units_.Clear();
  abilityslot_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_CastToggle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.CastToggle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 units = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_units())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_units())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 abilitySlot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_abilityslot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &abilityslot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.CastToggle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.CastToggle)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_CastToggle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.CastToggle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  for (int i = 0, n = this->units_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->units(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 abilitySlot = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->abilityslot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.CastToggle)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_CastToggle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.CastToggle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->units_, target);

  cached_has_bits = _has_bits_[0];
  // required int32 abilitySlot = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->abilityslot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.CastToggle)
  return target;
}

size_t CMsgBotWorldState_Action_CastToggle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.CastToggle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 abilitySlot = 2;
  if (has_abilityslot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->abilityslot());
  }
  // repeated int32 units = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->units_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->units_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_CastToggle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.CastToggle)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_CastToggle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_CastToggle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.CastToggle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.CastToggle)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_CastToggle::MergeFrom(const CMsgBotWorldState_Action_CastToggle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.CastToggle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  units_.MergeFrom(from.units_);
  if (from.has_abilityslot()) {
    set_abilityslot(from.abilityslot());
  }
}

void CMsgBotWorldState_Action_CastToggle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.CastToggle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_CastToggle::CopyFrom(const CMsgBotWorldState_Action_CastToggle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.CastToggle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_CastToggle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMsgBotWorldState_Action_CastToggle::Swap(CMsgBotWorldState_Action_CastToggle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_CastToggle::InternalSwap(CMsgBotWorldState_Action_CastToggle* other) {
  using std::swap;
  units_.InternalSwap(&other->units_);
  swap(abilityslot_, other->abilityslot_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_CastToggle::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_TrainAbility::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_TrainAbility::kAbilityFieldNumber;
const int CMsgBotWorldState_Action_TrainAbility::kLevelFieldNumber;
const int CMsgBotWorldState_Action_TrainAbility::kUnitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_TrainAbility::CMsgBotWorldState_Action_TrainAbility()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_TrainAbility.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.TrainAbility)
}
CMsgBotWorldState_Action_TrainAbility::CMsgBotWorldState_Action_TrainAbility(const CMsgBotWorldState_Action_TrainAbility& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ability_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ability()) {
    ability_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ability_);
  }
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&unit_) -
    reinterpret_cast<char*>(&level_)) + sizeof(unit_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.TrainAbility)
}

void CMsgBotWorldState_Action_TrainAbility::SharedCtor() {
  ability_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unit_) -
      reinterpret_cast<char*>(&level_)) + sizeof(unit_));
}

CMsgBotWorldState_Action_TrainAbility::~CMsgBotWorldState_Action_TrainAbility() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.TrainAbility)
  SharedDtor();
}

void CMsgBotWorldState_Action_TrainAbility::SharedDtor() {
  ability_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgBotWorldState_Action_TrainAbility::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_TrainAbility::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_TrainAbility& CMsgBotWorldState_Action_TrainAbility::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_TrainAbility.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_TrainAbility::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.TrainAbility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ability_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&unit_) -
        reinterpret_cast<char*>(&level_)) + sizeof(unit_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_TrainAbility::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.TrainAbility)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ability = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ability()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ability().data(), static_cast<int>(this->ability().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Action.TrainAbility.ability");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 unit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_unit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.TrainAbility)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.TrainAbility)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_TrainAbility::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.TrainAbility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string ability = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ability().data(), static_cast<int>(this->ability().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.TrainAbility.ability");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ability(), output);
  }

  // optional int32 level = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }

  // optional int32 unit = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->unit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.TrainAbility)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_TrainAbility::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.TrainAbility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string ability = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ability().data(), static_cast<int>(this->ability().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.TrainAbility.ability");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ability(), target);
  }

  // optional int32 level = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }

  // optional int32 unit = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->unit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.TrainAbility)
  return target;
}

size_t CMsgBotWorldState_Action_TrainAbility::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.TrainAbility)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string ability = 1;
  if (has_ability()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ability());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional int32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int32 unit = 3;
    if (has_unit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unit());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_TrainAbility::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.TrainAbility)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_TrainAbility* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_TrainAbility>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.TrainAbility)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.TrainAbility)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_TrainAbility::MergeFrom(const CMsgBotWorldState_Action_TrainAbility& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.TrainAbility)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ability();
      ability_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ability_);
    }
    if (cached_has_bits & 0x00000002u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000004u) {
      unit_ = from.unit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_TrainAbility::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.TrainAbility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_TrainAbility::CopyFrom(const CMsgBotWorldState_Action_TrainAbility& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.TrainAbility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_TrainAbility::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMsgBotWorldState_Action_TrainAbility::Swap(CMsgBotWorldState_Action_TrainAbility* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_TrainAbility::InternalSwap(CMsgBotWorldState_Action_TrainAbility* other) {
  using std::swap;
  ability_.Swap(&other->ability_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(level_, other->level_);
  swap(unit_, other->unit_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_TrainAbility::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_DropItem::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_Action_DropItem_default_instance_._instance.get_mutable()->location_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_DropItem::kUnitFieldNumber;
const int CMsgBotWorldState_Action_DropItem::kSlotFieldNumber;
const int CMsgBotWorldState_Action_DropItem::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_DropItem::CMsgBotWorldState_Action_DropItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_DropItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.DropItem)
}
CMsgBotWorldState_Action_DropItem::CMsgBotWorldState_Action_DropItem(const CMsgBotWorldState_Action_DropItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::CMsgBotWorldState_Vector(*from.location_);
  } else {
    location_ = NULL;
  }
  ::memcpy(&unit_, &from.unit_,
    static_cast<size_t>(reinterpret_cast<char*>(&slot_) -
    reinterpret_cast<char*>(&unit_)) + sizeof(slot_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.DropItem)
}

void CMsgBotWorldState_Action_DropItem::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&slot_) -
      reinterpret_cast<char*>(&location_)) + sizeof(slot_));
}

CMsgBotWorldState_Action_DropItem::~CMsgBotWorldState_Action_DropItem() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.DropItem)
  SharedDtor();
}

void CMsgBotWorldState_Action_DropItem::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
}

void CMsgBotWorldState_Action_DropItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_DropItem::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_DropItem& CMsgBotWorldState_Action_DropItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_DropItem.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_DropItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.DropItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(location_ != NULL);
    location_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&unit_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&slot_) -
        reinterpret_cast<char*>(&unit_)) + sizeof(slot_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_DropItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.DropItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 unit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_unit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 slot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Vector location = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.DropItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.DropItem)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_DropItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.DropItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 unit = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->unit(), output);
  }

  // optional int32 slot = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->slot(), output);
  }

  // optional .CMsgBotWorldState.Vector location = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_location(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.DropItem)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_DropItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.DropItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 unit = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->unit(), target);
  }

  // optional int32 slot = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->slot(), target);
  }

  // optional .CMsgBotWorldState.Vector location = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_location(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.DropItem)
  return target;
}

size_t CMsgBotWorldState_Action_DropItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.DropItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .CMsgBotWorldState.Vector location = 3;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *location_);
    }

    // optional int32 unit = 1;
    if (has_unit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unit());
    }

    // optional int32 slot = 2;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_DropItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.DropItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_DropItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_DropItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.DropItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.DropItem)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_DropItem::MergeFrom(const CMsgBotWorldState_Action_DropItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.DropItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_location()->::CMsgBotWorldState_Vector::MergeFrom(from.location());
    }
    if (cached_has_bits & 0x00000002u) {
      unit_ = from.unit_;
    }
    if (cached_has_bits & 0x00000004u) {
      slot_ = from.slot_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_DropItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.DropItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_DropItem::CopyFrom(const CMsgBotWorldState_Action_DropItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.DropItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_DropItem::IsInitialized() const {
  if (has_location()) {
    if (!this->location_->IsInitialized()) return false;
  }
  return true;
}

void CMsgBotWorldState_Action_DropItem::Swap(CMsgBotWorldState_Action_DropItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_DropItem::InternalSwap(CMsgBotWorldState_Action_DropItem* other) {
  using std::swap;
  swap(location_, other->location_);
  swap(unit_, other->unit_);
  swap(slot_, other->slot_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_DropItem::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_PickUpItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_PickUpItem::kUnitFieldNumber;
const int CMsgBotWorldState_Action_PickUpItem::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_PickUpItem::CMsgBotWorldState_Action_PickUpItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_PickUpItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.PickUpItem)
}
CMsgBotWorldState_Action_PickUpItem::CMsgBotWorldState_Action_PickUpItem(const CMsgBotWorldState_Action_PickUpItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&unit_, &from.unit_,
    static_cast<size_t>(reinterpret_cast<char*>(&itemid_) -
    reinterpret_cast<char*>(&unit_)) + sizeof(itemid_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.PickUpItem)
}

void CMsgBotWorldState_Action_PickUpItem::SharedCtor() {
  ::memset(&unit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&itemid_) -
      reinterpret_cast<char*>(&unit_)) + sizeof(itemid_));
}

CMsgBotWorldState_Action_PickUpItem::~CMsgBotWorldState_Action_PickUpItem() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.PickUpItem)
  SharedDtor();
}

void CMsgBotWorldState_Action_PickUpItem::SharedDtor() {
}

void CMsgBotWorldState_Action_PickUpItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_PickUpItem::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_PickUpItem& CMsgBotWorldState_Action_PickUpItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_PickUpItem.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_PickUpItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.PickUpItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&unit_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&itemid_) -
        reinterpret_cast<char*>(&unit_)) + sizeof(itemid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_PickUpItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.PickUpItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 unit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_unit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 itemId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.PickUpItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.PickUpItem)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_PickUpItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.PickUpItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 unit = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->unit(), output);
  }

  // optional int32 itemId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->itemid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.PickUpItem)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_PickUpItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.PickUpItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 unit = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->unit(), target);
  }

  // optional int32 itemId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->itemid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.PickUpItem)
  return target;
}

size_t CMsgBotWorldState_Action_PickUpItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.PickUpItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 unit = 1;
    if (has_unit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unit());
    }

    // optional int32 itemId = 2;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_PickUpItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.PickUpItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_PickUpItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_PickUpItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.PickUpItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.PickUpItem)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_PickUpItem::MergeFrom(const CMsgBotWorldState_Action_PickUpItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.PickUpItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      unit_ = from.unit_;
    }
    if (cached_has_bits & 0x00000002u) {
      itemid_ = from.itemid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_PickUpItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.PickUpItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_PickUpItem::CopyFrom(const CMsgBotWorldState_Action_PickUpItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.PickUpItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_PickUpItem::IsInitialized() const {
  return true;
}

void CMsgBotWorldState_Action_PickUpItem::Swap(CMsgBotWorldState_Action_PickUpItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_PickUpItem::InternalSwap(CMsgBotWorldState_Action_PickUpItem* other) {
  using std::swap;
  swap(unit_, other->unit_);
  swap(itemid_, other->itemid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_PickUpItem::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_PurchaseItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_PurchaseItem::kItemFieldNumber;
const int CMsgBotWorldState_Action_PurchaseItem::kItemNameFieldNumber;
const int CMsgBotWorldState_Action_PurchaseItem::kUnitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_PurchaseItem::CMsgBotWorldState_Action_PurchaseItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_PurchaseItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.PurchaseItem)
}
CMsgBotWorldState_Action_PurchaseItem::CMsgBotWorldState_Action_PurchaseItem(const CMsgBotWorldState_Action_PurchaseItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_item_name()) {
    item_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_name_);
  }
  ::memcpy(&item_, &from.item_,
    static_cast<size_t>(reinterpret_cast<char*>(&unit_) -
    reinterpret_cast<char*>(&item_)) + sizeof(unit_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.PurchaseItem)
}

void CMsgBotWorldState_Action_PurchaseItem::SharedCtor() {
  item_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&item_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unit_) -
      reinterpret_cast<char*>(&item_)) + sizeof(unit_));
}

CMsgBotWorldState_Action_PurchaseItem::~CMsgBotWorldState_Action_PurchaseItem() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.PurchaseItem)
  SharedDtor();
}

void CMsgBotWorldState_Action_PurchaseItem::SharedDtor() {
  item_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgBotWorldState_Action_PurchaseItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_PurchaseItem::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_PurchaseItem& CMsgBotWorldState_Action_PurchaseItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_PurchaseItem.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_PurchaseItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.PurchaseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    item_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&item_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&unit_) -
        reinterpret_cast<char*>(&item_)) + sizeof(unit_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_PurchaseItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.PurchaseItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_item();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string item_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_name().data(), static_cast<int>(this->item_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Action.PurchaseItem.item_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 unit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_unit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.PurchaseItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.PurchaseItem)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_PurchaseItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.PurchaseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item(), output);
  }

  // optional string item_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_name().data(), static_cast<int>(this->item_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.PurchaseItem.item_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_name(), output);
  }

  // optional int32 unit = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->unit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.PurchaseItem)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_PurchaseItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.PurchaseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item(), target);
  }

  // optional string item_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_name().data(), static_cast<int>(this->item_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.PurchaseItem.item_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_name(), target);
  }

  // optional int32 unit = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->unit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.PurchaseItem)
  return target;
}

size_t CMsgBotWorldState_Action_PurchaseItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.PurchaseItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string item_name = 2;
    if (has_item_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_name());
    }

    // optional int32 item = 1;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item());
    }

    // optional int32 unit = 3;
    if (has_unit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unit());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_PurchaseItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.PurchaseItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_PurchaseItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_PurchaseItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.PurchaseItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.PurchaseItem)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_PurchaseItem::MergeFrom(const CMsgBotWorldState_Action_PurchaseItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.PurchaseItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_item_name();
      item_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      item_ = from.item_;
    }
    if (cached_has_bits & 0x00000004u) {
      unit_ = from.unit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_PurchaseItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.PurchaseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_PurchaseItem::CopyFrom(const CMsgBotWorldState_Action_PurchaseItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.PurchaseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_PurchaseItem::IsInitialized() const {
  return true;
}

void CMsgBotWorldState_Action_PurchaseItem::Swap(CMsgBotWorldState_Action_PurchaseItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_PurchaseItem::InternalSwap(CMsgBotWorldState_Action_PurchaseItem* other) {
  using std::swap;
  item_name_.Swap(&other->item_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(item_, other->item_);
  swap(unit_, other->unit_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_PurchaseItem::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_SellItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_SellItem::kItemFieldNumber;
const int CMsgBotWorldState_Action_SellItem::kSlotFieldNumber;
const int CMsgBotWorldState_Action_SellItem::kUnitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_SellItem::CMsgBotWorldState_Action_SellItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_SellItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.SellItem)
}
CMsgBotWorldState_Action_SellItem::CMsgBotWorldState_Action_SellItem(const CMsgBotWorldState_Action_SellItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_, &from.item_,
    static_cast<size_t>(reinterpret_cast<char*>(&unit_) -
    reinterpret_cast<char*>(&item_)) + sizeof(unit_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.SellItem)
}

void CMsgBotWorldState_Action_SellItem::SharedCtor() {
  ::memset(&item_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unit_) -
      reinterpret_cast<char*>(&item_)) + sizeof(unit_));
}

CMsgBotWorldState_Action_SellItem::~CMsgBotWorldState_Action_SellItem() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.SellItem)
  SharedDtor();
}

void CMsgBotWorldState_Action_SellItem::SharedDtor() {
}

void CMsgBotWorldState_Action_SellItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_SellItem::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_SellItem& CMsgBotWorldState_Action_SellItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_SellItem.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_SellItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.SellItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&item_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&unit_) -
        reinterpret_cast<char*>(&item_)) + sizeof(unit_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_SellItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.SellItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_item();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 slot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 unit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_unit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.SellItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.SellItem)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_SellItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.SellItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item(), output);
  }

  // optional int32 slot = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->slot(), output);
  }

  // optional int32 unit = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->unit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.SellItem)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_SellItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.SellItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item(), target);
  }

  // optional int32 slot = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->slot(), target);
  }

  // optional int32 unit = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->unit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.SellItem)
  return target;
}

size_t CMsgBotWorldState_Action_SellItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.SellItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 item = 1;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item());
    }

    // optional int32 slot = 2;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot());
    }

    // optional int32 unit = 3;
    if (has_unit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unit());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_SellItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.SellItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_SellItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_SellItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.SellItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.SellItem)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_SellItem::MergeFrom(const CMsgBotWorldState_Action_SellItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.SellItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      item_ = from.item_;
    }
    if (cached_has_bits & 0x00000002u) {
      slot_ = from.slot_;
    }
    if (cached_has_bits & 0x00000004u) {
      unit_ = from.unit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_SellItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.SellItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_SellItem::CopyFrom(const CMsgBotWorldState_Action_SellItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.SellItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_SellItem::IsInitialized() const {
  return true;
}

void CMsgBotWorldState_Action_SellItem::Swap(CMsgBotWorldState_Action_SellItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_SellItem::InternalSwap(CMsgBotWorldState_Action_SellItem* other) {
  using std::swap;
  swap(item_, other->item_);
  swap(slot_, other->slot_);
  swap(unit_, other->unit_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_SellItem::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_SwapItems::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_SwapItems::kSlotAFieldNumber;
const int CMsgBotWorldState_Action_SwapItems::kSlotBFieldNumber;
const int CMsgBotWorldState_Action_SwapItems::kUnitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_SwapItems::CMsgBotWorldState_Action_SwapItems()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_SwapItems.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.SwapItems)
}
CMsgBotWorldState_Action_SwapItems::CMsgBotWorldState_Action_SwapItems(const CMsgBotWorldState_Action_SwapItems& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&slot_a_, &from.slot_a_,
    static_cast<size_t>(reinterpret_cast<char*>(&unit_) -
    reinterpret_cast<char*>(&slot_a_)) + sizeof(unit_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.SwapItems)
}

void CMsgBotWorldState_Action_SwapItems::SharedCtor() {
  ::memset(&slot_a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unit_) -
      reinterpret_cast<char*>(&slot_a_)) + sizeof(unit_));
}

CMsgBotWorldState_Action_SwapItems::~CMsgBotWorldState_Action_SwapItems() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.SwapItems)
  SharedDtor();
}

void CMsgBotWorldState_Action_SwapItems::SharedDtor() {
}

void CMsgBotWorldState_Action_SwapItems::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_SwapItems::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_SwapItems& CMsgBotWorldState_Action_SwapItems::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_SwapItems.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_SwapItems::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.SwapItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&slot_a_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&unit_) -
        reinterpret_cast<char*>(&slot_a_)) + sizeof(unit_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_SwapItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.SwapItems)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 slot_a = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_slot_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 slot_b = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_slot_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 unit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_unit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.SwapItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.SwapItems)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_SwapItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.SwapItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 slot_a = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->slot_a(), output);
  }

  // required int32 slot_b = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->slot_b(), output);
  }

  // optional int32 unit = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->unit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.SwapItems)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_SwapItems::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.SwapItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 slot_a = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->slot_a(), target);
  }

  // required int32 slot_b = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->slot_b(), target);
  }

  // optional int32 unit = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->unit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.SwapItems)
  return target;
}

size_t CMsgBotWorldState_Action_SwapItems::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgBotWorldState.Action.SwapItems)
  size_t total_size = 0;

  if (has_slot_a()) {
    // required int32 slot_a = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slot_a());
  }

  if (has_slot_b()) {
    // required int32 slot_b = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slot_b());
  }

  return total_size;
}
size_t CMsgBotWorldState_Action_SwapItems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.SwapItems)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 slot_a = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slot_a());

    // required int32 slot_b = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slot_b());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 unit = 3;
  if (has_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_SwapItems::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.SwapItems)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_SwapItems* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_SwapItems>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.SwapItems)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.SwapItems)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_SwapItems::MergeFrom(const CMsgBotWorldState_Action_SwapItems& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.SwapItems)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      slot_a_ = from.slot_a_;
    }
    if (cached_has_bits & 0x00000002u) {
      slot_b_ = from.slot_b_;
    }
    if (cached_has_bits & 0x00000004u) {
      unit_ = from.unit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_SwapItems::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.SwapItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_SwapItems::CopyFrom(const CMsgBotWorldState_Action_SwapItems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.SwapItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_SwapItems::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CMsgBotWorldState_Action_SwapItems::Swap(CMsgBotWorldState_Action_SwapItems* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_SwapItems::InternalSwap(CMsgBotWorldState_Action_SwapItems* other) {
  using std::swap;
  swap(slot_a_, other->slot_a_);
  swap(slot_b_, other->slot_b_);
  swap(unit_, other->unit_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_SwapItems::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_DisassembleItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_DisassembleItem::kSlotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_DisassembleItem::CMsgBotWorldState_Action_DisassembleItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_DisassembleItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.DisassembleItem)
}
CMsgBotWorldState_Action_DisassembleItem::CMsgBotWorldState_Action_DisassembleItem(const CMsgBotWorldState_Action_DisassembleItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  slot_ = from.slot_;
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.DisassembleItem)
}

void CMsgBotWorldState_Action_DisassembleItem::SharedCtor() {
  slot_ = 0;
}

CMsgBotWorldState_Action_DisassembleItem::~CMsgBotWorldState_Action_DisassembleItem() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.DisassembleItem)
  SharedDtor();
}

void CMsgBotWorldState_Action_DisassembleItem::SharedDtor() {
}

void CMsgBotWorldState_Action_DisassembleItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_DisassembleItem::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_DisassembleItem& CMsgBotWorldState_Action_DisassembleItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_DisassembleItem.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_DisassembleItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.DisassembleItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slot_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_DisassembleItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.DisassembleItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 slot = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.DisassembleItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.DisassembleItem)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_DisassembleItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.DisassembleItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 slot = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->slot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.DisassembleItem)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_DisassembleItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.DisassembleItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 slot = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->slot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.DisassembleItem)
  return target;
}

size_t CMsgBotWorldState_Action_DisassembleItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.DisassembleItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 slot = 1;
  if (has_slot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slot());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_DisassembleItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.DisassembleItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_DisassembleItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_DisassembleItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.DisassembleItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.DisassembleItem)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_DisassembleItem::MergeFrom(const CMsgBotWorldState_Action_DisassembleItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.DisassembleItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_slot()) {
    set_slot(from.slot());
  }
}

void CMsgBotWorldState_Action_DisassembleItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.DisassembleItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_DisassembleItem::CopyFrom(const CMsgBotWorldState_Action_DisassembleItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.DisassembleItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_DisassembleItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMsgBotWorldState_Action_DisassembleItem::Swap(CMsgBotWorldState_Action_DisassembleItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_DisassembleItem::InternalSwap(CMsgBotWorldState_Action_DisassembleItem* other) {
  using std::swap;
  swap(slot_, other->slot_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_DisassembleItem::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_SetCombineLockItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_SetCombineLockItem::kSlotFieldNumber;
const int CMsgBotWorldState_Action_SetCombineLockItem::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_SetCombineLockItem::CMsgBotWorldState_Action_SetCombineLockItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_SetCombineLockItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.SetCombineLockItem)
}
CMsgBotWorldState_Action_SetCombineLockItem::CMsgBotWorldState_Action_SetCombineLockItem(const CMsgBotWorldState_Action_SetCombineLockItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&slot_, &from.slot_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&slot_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.SetCombineLockItem)
}

void CMsgBotWorldState_Action_SetCombineLockItem::SharedCtor() {
  ::memset(&slot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&slot_)) + sizeof(value_));
}

CMsgBotWorldState_Action_SetCombineLockItem::~CMsgBotWorldState_Action_SetCombineLockItem() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.SetCombineLockItem)
  SharedDtor();
}

void CMsgBotWorldState_Action_SetCombineLockItem::SharedDtor() {
}

void CMsgBotWorldState_Action_SetCombineLockItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_SetCombineLockItem::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_SetCombineLockItem& CMsgBotWorldState_Action_SetCombineLockItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_SetCombineLockItem.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_SetCombineLockItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.SetCombineLockItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&slot_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_) -
        reinterpret_cast<char*>(&slot_)) + sizeof(value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_SetCombineLockItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.SetCombineLockItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 slot = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.SetCombineLockItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.SetCombineLockItem)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_SetCombineLockItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.SetCombineLockItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 slot = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->slot(), output);
  }

  // required bool value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.SetCombineLockItem)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_SetCombineLockItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.SetCombineLockItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 slot = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->slot(), target);
  }

  // required bool value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.SetCombineLockItem)
  return target;
}

size_t CMsgBotWorldState_Action_SetCombineLockItem::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgBotWorldState.Action.SetCombineLockItem)
  size_t total_size = 0;

  if (has_slot()) {
    // required int32 slot = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slot());
  }

  if (has_value()) {
    // required bool value = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t CMsgBotWorldState_Action_SetCombineLockItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.SetCombineLockItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 slot = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slot());

    // required bool value = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_SetCombineLockItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.SetCombineLockItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_SetCombineLockItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_SetCombineLockItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.SetCombineLockItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.SetCombineLockItem)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_SetCombineLockItem::MergeFrom(const CMsgBotWorldState_Action_SetCombineLockItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.SetCombineLockItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      slot_ = from.slot_;
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_SetCombineLockItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.SetCombineLockItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_SetCombineLockItem::CopyFrom(const CMsgBotWorldState_Action_SetCombineLockItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.SetCombineLockItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_SetCombineLockItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CMsgBotWorldState_Action_SetCombineLockItem::Swap(CMsgBotWorldState_Action_SetCombineLockItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_SetCombineLockItem::InternalSwap(CMsgBotWorldState_Action_SetCombineLockItem* other) {
  using std::swap;
  swap(slot_, other->slot_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_SetCombineLockItem::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_PickupRune::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_PickupRune::kUnitsFieldNumber;
const int CMsgBotWorldState_Action_PickupRune::kRuneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_PickupRune::CMsgBotWorldState_Action_PickupRune()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_PickupRune.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.PickupRune)
}
CMsgBotWorldState_Action_PickupRune::CMsgBotWorldState_Action_PickupRune(const CMsgBotWorldState_Action_PickupRune& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      units_(from.units_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rune_ = from.rune_;
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.PickupRune)
}

void CMsgBotWorldState_Action_PickupRune::SharedCtor() {
  rune_ = 0;
}

CMsgBotWorldState_Action_PickupRune::~CMsgBotWorldState_Action_PickupRune() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.PickupRune)
  SharedDtor();
}

void CMsgBotWorldState_Action_PickupRune::SharedDtor() {
}

void CMsgBotWorldState_Action_PickupRune::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_PickupRune::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_PickupRune& CMsgBotWorldState_Action_PickupRune::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_PickupRune.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_PickupRune::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.PickupRune)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  units_.Clear();
  rune_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_PickupRune::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.PickupRune)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 units = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_units())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_units())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 rune = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_rune();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rune_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.PickupRune)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.PickupRune)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_PickupRune::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.PickupRune)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  for (int i = 0, n = this->units_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->units(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 rune = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rune(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.PickupRune)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_PickupRune::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.PickupRune)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->units_, target);

  cached_has_bits = _has_bits_[0];
  // required int32 rune = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rune(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.PickupRune)
  return target;
}

size_t CMsgBotWorldState_Action_PickupRune::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.PickupRune)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 rune = 2;
  if (has_rune()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rune());
  }
  // repeated int32 units = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->units_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->units_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_PickupRune::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.PickupRune)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_PickupRune* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_PickupRune>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.PickupRune)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.PickupRune)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_PickupRune::MergeFrom(const CMsgBotWorldState_Action_PickupRune& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.PickupRune)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  units_.MergeFrom(from.units_);
  if (from.has_rune()) {
    set_rune(from.rune());
  }
}

void CMsgBotWorldState_Action_PickupRune::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.PickupRune)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_PickupRune::CopyFrom(const CMsgBotWorldState_Action_PickupRune& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.PickupRune)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_PickupRune::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMsgBotWorldState_Action_PickupRune::Swap(CMsgBotWorldState_Action_PickupRune* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_PickupRune::InternalSwap(CMsgBotWorldState_Action_PickupRune* other) {
  using std::swap;
  units_.InternalSwap(&other->units_);
  swap(rune_, other->rune_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_PickupRune::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_Chat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_Chat::kMessageFieldNumber;
const int CMsgBotWorldState_Action_Chat::kToAllchatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_Chat::CMsgBotWorldState_Action_Chat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_Chat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.Chat)
}
CMsgBotWorldState_Action_Chat::CMsgBotWorldState_Action_Chat(const CMsgBotWorldState_Action_Chat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  to_allchat_ = from.to_allchat_;
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.Chat)
}

void CMsgBotWorldState_Action_Chat::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_allchat_ = false;
}

CMsgBotWorldState_Action_Chat::~CMsgBotWorldState_Action_Chat() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.Chat)
  SharedDtor();
}

void CMsgBotWorldState_Action_Chat::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgBotWorldState_Action_Chat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_Chat::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_Chat& CMsgBotWorldState_Action_Chat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_Chat.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_Chat::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.Chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  to_allchat_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_Chat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.Chat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Action.Chat.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool to_allchat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_to_allchat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &to_allchat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.Chat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.Chat)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_Chat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.Chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.Chat.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // required bool to_allchat = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->to_allchat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.Chat)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_Chat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.Chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.Chat.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // required bool to_allchat = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->to_allchat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.Chat)
  return target;
}

size_t CMsgBotWorldState_Action_Chat::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgBotWorldState.Action.Chat)
  size_t total_size = 0;

  if (has_message()) {
    // required string message = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  if (has_to_allchat()) {
    // required bool to_allchat = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t CMsgBotWorldState_Action_Chat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.Chat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string message = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());

    // required bool to_allchat = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_Chat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.Chat)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_Chat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_Chat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.Chat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.Chat)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_Chat::MergeFrom(const CMsgBotWorldState_Action_Chat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.Chat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      to_allchat_ = from.to_allchat_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_Chat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.Chat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_Chat::CopyFrom(const CMsgBotWorldState_Action_Chat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.Chat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_Chat::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CMsgBotWorldState_Action_Chat::Swap(CMsgBotWorldState_Action_Chat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_Chat::InternalSwap(CMsgBotWorldState_Action_Chat* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(to_allchat_, other->to_allchat_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_Chat::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_UseShrine::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_UseShrine::kUnitsFieldNumber;
const int CMsgBotWorldState_Action_UseShrine::kShrineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_UseShrine::CMsgBotWorldState_Action_UseShrine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_UseShrine.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.UseShrine)
}
CMsgBotWorldState_Action_UseShrine::CMsgBotWorldState_Action_UseShrine(const CMsgBotWorldState_Action_UseShrine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      units_(from.units_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  shrine_ = from.shrine_;
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.UseShrine)
}

void CMsgBotWorldState_Action_UseShrine::SharedCtor() {
  shrine_ = 0;
}

CMsgBotWorldState_Action_UseShrine::~CMsgBotWorldState_Action_UseShrine() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.UseShrine)
  SharedDtor();
}

void CMsgBotWorldState_Action_UseShrine::SharedDtor() {
}

void CMsgBotWorldState_Action_UseShrine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_UseShrine::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_UseShrine& CMsgBotWorldState_Action_UseShrine::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_UseShrine.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_UseShrine::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.UseShrine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  units_.Clear();
  shrine_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_UseShrine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.UseShrine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 units = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_units())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_units())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 shrine = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_shrine();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shrine_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.UseShrine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.UseShrine)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_UseShrine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.UseShrine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  for (int i = 0, n = this->units_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->units(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 shrine = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->shrine(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.UseShrine)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_UseShrine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.UseShrine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 units = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->units_, target);

  cached_has_bits = _has_bits_[0];
  // required int32 shrine = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->shrine(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.UseShrine)
  return target;
}

size_t CMsgBotWorldState_Action_UseShrine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.UseShrine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 shrine = 2;
  if (has_shrine()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shrine());
  }
  // repeated int32 units = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->units_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->units_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_UseShrine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.UseShrine)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_UseShrine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_UseShrine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.UseShrine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.UseShrine)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_UseShrine::MergeFrom(const CMsgBotWorldState_Action_UseShrine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.UseShrine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  units_.MergeFrom(from.units_);
  if (from.has_shrine()) {
    set_shrine(from.shrine());
  }
}

void CMsgBotWorldState_Action_UseShrine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.UseShrine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_UseShrine::CopyFrom(const CMsgBotWorldState_Action_UseShrine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.UseShrine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_UseShrine::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMsgBotWorldState_Action_UseShrine::Swap(CMsgBotWorldState_Action_UseShrine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_UseShrine::InternalSwap(CMsgBotWorldState_Action_UseShrine* other) {
  using std::swap;
  units_.InternalSwap(&other->units_);
  swap(shrine_, other->shrine_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_UseShrine::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_Courier::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_Courier::kUnitFieldNumber;
const int CMsgBotWorldState_Action_Courier::kCourierFieldNumber;
const int CMsgBotWorldState_Action_Courier::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_Courier::CMsgBotWorldState_Action_Courier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_Courier.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.Courier)
}
CMsgBotWorldState_Action_Courier::CMsgBotWorldState_Action_Courier(const CMsgBotWorldState_Action_Courier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&unit_, &from.unit_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&unit_)) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.Courier)
}

void CMsgBotWorldState_Action_Courier::SharedCtor() {
  ::memset(&unit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&unit_)) + sizeof(action_));
}

CMsgBotWorldState_Action_Courier::~CMsgBotWorldState_Action_Courier() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.Courier)
  SharedDtor();
}

void CMsgBotWorldState_Action_Courier::SharedDtor() {
}

void CMsgBotWorldState_Action_Courier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_Courier::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_Courier& CMsgBotWorldState_Action_Courier::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_Courier.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_Courier::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.Courier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&unit_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&action_) -
        reinterpret_cast<char*>(&unit_)) + sizeof(action_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_Courier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.Courier)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 unit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_unit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 courier = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_courier();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &courier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_action();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.Courier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.Courier)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_Courier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.Courier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 unit = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->unit(), output);
  }

  // required int32 courier = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->courier(), output);
  }

  // required int32 action = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->action(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.Courier)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_Courier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.Courier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 unit = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->unit(), target);
  }

  // required int32 courier = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->courier(), target);
  }

  // required int32 action = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->action(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.Courier)
  return target;
}

size_t CMsgBotWorldState_Action_Courier::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgBotWorldState.Action.Courier)
  size_t total_size = 0;

  if (has_unit()) {
    // required int32 unit = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unit());
  }

  if (has_courier()) {
    // required int32 courier = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->courier());
  }

  if (has_action()) {
    // required int32 action = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->action());
  }

  return total_size;
}
size_t CMsgBotWorldState_Action_Courier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.Courier)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 unit = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unit());

    // required int32 courier = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->courier());

    // required int32 action = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->action());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_Courier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.Courier)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_Courier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_Courier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.Courier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.Courier)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_Courier::MergeFrom(const CMsgBotWorldState_Action_Courier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.Courier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      unit_ = from.unit_;
    }
    if (cached_has_bits & 0x00000002u) {
      courier_ = from.courier_;
    }
    if (cached_has_bits & 0x00000004u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_Courier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.Courier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_Courier::CopyFrom(const CMsgBotWorldState_Action_Courier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.Courier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_Courier::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void CMsgBotWorldState_Action_Courier::Swap(CMsgBotWorldState_Action_Courier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_Courier::InternalSwap(CMsgBotWorldState_Action_Courier* other) {
  using std::swap;
  swap(unit_, other->unit_);
  swap(courier_, other->courier_);
  swap(action_, other->action_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_Courier::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_GetActualIncomingDamage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_GetActualIncomingDamage::kUnitFieldNumber;
const int CMsgBotWorldState_Action_GetActualIncomingDamage::kNDamageFieldNumber;
const int CMsgBotWorldState_Action_GetActualIncomingDamage::kNDamageTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_GetActualIncomingDamage::CMsgBotWorldState_Action_GetActualIncomingDamage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_GetActualIncomingDamage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.GetActualIncomingDamage)
}
CMsgBotWorldState_Action_GetActualIncomingDamage::CMsgBotWorldState_Action_GetActualIncomingDamage(const CMsgBotWorldState_Action_GetActualIncomingDamage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&unit_, &from.unit_,
    static_cast<size_t>(reinterpret_cast<char*>(&ndamagetype_) -
    reinterpret_cast<char*>(&unit_)) + sizeof(ndamagetype_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.GetActualIncomingDamage)
}

void CMsgBotWorldState_Action_GetActualIncomingDamage::SharedCtor() {
  ::memset(&unit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ndamagetype_) -
      reinterpret_cast<char*>(&unit_)) + sizeof(ndamagetype_));
}

CMsgBotWorldState_Action_GetActualIncomingDamage::~CMsgBotWorldState_Action_GetActualIncomingDamage() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.GetActualIncomingDamage)
  SharedDtor();
}

void CMsgBotWorldState_Action_GetActualIncomingDamage::SharedDtor() {
}

void CMsgBotWorldState_Action_GetActualIncomingDamage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_GetActualIncomingDamage::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_GetActualIncomingDamage& CMsgBotWorldState_Action_GetActualIncomingDamage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_GetActualIncomingDamage.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_GetActualIncomingDamage::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.GetActualIncomingDamage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&unit_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ndamagetype_) -
        reinterpret_cast<char*>(&unit_)) + sizeof(ndamagetype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_GetActualIncomingDamage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.GetActualIncomingDamage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 unit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_unit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float nDamage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_ndamage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ndamage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 nDamageType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_ndamagetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ndamagetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.GetActualIncomingDamage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.GetActualIncomingDamage)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_GetActualIncomingDamage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.GetActualIncomingDamage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 unit = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->unit(), output);
  }

  // required float nDamage = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->ndamage(), output);
  }

  // required int32 nDamageType = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ndamagetype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.GetActualIncomingDamage)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_GetActualIncomingDamage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.GetActualIncomingDamage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 unit = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->unit(), target);
  }

  // required float nDamage = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->ndamage(), target);
  }

  // required int32 nDamageType = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ndamagetype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.GetActualIncomingDamage)
  return target;
}

size_t CMsgBotWorldState_Action_GetActualIncomingDamage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgBotWorldState.Action.GetActualIncomingDamage)
  size_t total_size = 0;

  if (has_unit()) {
    // required int32 unit = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unit());
  }

  if (has_ndamage()) {
    // required float nDamage = 2;
    total_size += 1 + 4;
  }

  if (has_ndamagetype()) {
    // required int32 nDamageType = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ndamagetype());
  }

  return total_size;
}
size_t CMsgBotWorldState_Action_GetActualIncomingDamage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.GetActualIncomingDamage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 unit = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unit());

    // required float nDamage = 2;
    total_size += 1 + 4;

    // required int32 nDamageType = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ndamagetype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_GetActualIncomingDamage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.GetActualIncomingDamage)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_GetActualIncomingDamage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_GetActualIncomingDamage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.GetActualIncomingDamage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.GetActualIncomingDamage)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_GetActualIncomingDamage::MergeFrom(const CMsgBotWorldState_Action_GetActualIncomingDamage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.GetActualIncomingDamage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      unit_ = from.unit_;
    }
    if (cached_has_bits & 0x00000002u) {
      ndamage_ = from.ndamage_;
    }
    if (cached_has_bits & 0x00000004u) {
      ndamagetype_ = from.ndamagetype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_GetActualIncomingDamage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.GetActualIncomingDamage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_GetActualIncomingDamage::CopyFrom(const CMsgBotWorldState_Action_GetActualIncomingDamage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.GetActualIncomingDamage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_GetActualIncomingDamage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void CMsgBotWorldState_Action_GetActualIncomingDamage::Swap(CMsgBotWorldState_Action_GetActualIncomingDamage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_GetActualIncomingDamage::InternalSwap(CMsgBotWorldState_Action_GetActualIncomingDamage* other) {
  using std::swap;
  swap(unit_, other->unit_);
  swap(ndamage_, other->ndamage_);
  swap(ndamagetype_, other->ndamagetype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_GetActualIncomingDamage::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_GetEstimatedDamageToTarget::kUnitFieldNumber;
const int CMsgBotWorldState_Action_GetEstimatedDamageToTarget::kBCurrentlyAvailableFieldNumber;
const int CMsgBotWorldState_Action_GetEstimatedDamageToTarget::kHTargetFieldNumber;
const int CMsgBotWorldState_Action_GetEstimatedDamageToTarget::kFDurationFieldNumber;
const int CMsgBotWorldState_Action_GetEstimatedDamageToTarget::kNDamageTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_GetEstimatedDamageToTarget::CMsgBotWorldState_Action_GetEstimatedDamageToTarget()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_GetEstimatedDamageToTarget.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
}
CMsgBotWorldState_Action_GetEstimatedDamageToTarget::CMsgBotWorldState_Action_GetEstimatedDamageToTarget(const CMsgBotWorldState_Action_GetEstimatedDamageToTarget& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&unit_, &from.unit_,
    static_cast<size_t>(reinterpret_cast<char*>(&ndamagetypes_) -
    reinterpret_cast<char*>(&unit_)) + sizeof(ndamagetypes_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
}

void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::SharedCtor() {
  ::memset(&unit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ndamagetypes_) -
      reinterpret_cast<char*>(&unit_)) + sizeof(ndamagetypes_));
}

CMsgBotWorldState_Action_GetEstimatedDamageToTarget::~CMsgBotWorldState_Action_GetEstimatedDamageToTarget() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
  SharedDtor();
}

void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::SharedDtor() {
}

void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_GetEstimatedDamageToTarget::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_GetEstimatedDamageToTarget& CMsgBotWorldState_Action_GetEstimatedDamageToTarget::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_GetEstimatedDamageToTarget.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&unit_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ndamagetypes_) -
        reinterpret_cast<char*>(&unit_)) + sizeof(ndamagetypes_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_GetEstimatedDamageToTarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 unit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_unit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool bCurrentlyAvailable = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bcurrentlyavailable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bcurrentlyavailable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 hTarget = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_htarget();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &htarget_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float fDuration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_fduration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fduration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 nDamageTypes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_ndamagetypes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ndamagetypes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 unit = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->unit(), output);
  }

  // required bool bCurrentlyAvailable = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bcurrentlyavailable(), output);
  }

  // required int32 hTarget = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->htarget(), output);
  }

  // required float fDuration = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->fduration(), output);
  }

  // required int32 nDamageTypes = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ndamagetypes(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_GetEstimatedDamageToTarget::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 unit = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->unit(), target);
  }

  // required bool bCurrentlyAvailable = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bcurrentlyavailable(), target);
  }

  // required int32 hTarget = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->htarget(), target);
  }

  // required float fDuration = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->fduration(), target);
  }

  // required int32 nDamageTypes = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ndamagetypes(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
  return target;
}

size_t CMsgBotWorldState_Action_GetEstimatedDamageToTarget::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
  size_t total_size = 0;

  if (has_unit()) {
    // required int32 unit = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unit());
  }

  if (has_bcurrentlyavailable()) {
    // required bool bCurrentlyAvailable = 2;
    total_size += 1 + 1;
  }

  if (has_htarget()) {
    // required int32 hTarget = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->htarget());
  }

  if (has_fduration()) {
    // required float fDuration = 4;
    total_size += 1 + 4;
  }

  if (has_ndamagetypes()) {
    // required int32 nDamageTypes = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ndamagetypes());
  }

  return total_size;
}
size_t CMsgBotWorldState_Action_GetEstimatedDamageToTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required int32 unit = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unit());

    // required bool bCurrentlyAvailable = 2;
    total_size += 1 + 1;

    // required int32 hTarget = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->htarget());

    // required float fDuration = 4;
    total_size += 1 + 4;

    // required int32 nDamageTypes = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ndamagetypes());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_GetEstimatedDamageToTarget* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_GetEstimatedDamageToTarget>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::MergeFrom(const CMsgBotWorldState_Action_GetEstimatedDamageToTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      unit_ = from.unit_;
    }
    if (cached_has_bits & 0x00000002u) {
      bcurrentlyavailable_ = from.bcurrentlyavailable_;
    }
    if (cached_has_bits & 0x00000004u) {
      htarget_ = from.htarget_;
    }
    if (cached_has_bits & 0x00000008u) {
      fduration_ = from.fduration_;
    }
    if (cached_has_bits & 0x00000010u) {
      ndamagetypes_ = from.ndamagetypes_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::CopyFrom(const CMsgBotWorldState_Action_GetEstimatedDamageToTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_GetEstimatedDamageToTarget::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::Swap(CMsgBotWorldState_Action_GetEstimatedDamageToTarget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::InternalSwap(CMsgBotWorldState_Action_GetEstimatedDamageToTarget* other) {
  using std::swap;
  swap(unit_, other->unit_);
  swap(bcurrentlyavailable_, other->bcurrentlyavailable_);
  swap(htarget_, other->htarget_);
  swap(fduration_, other->fduration_);
  swap(ndamagetypes_, other->ndamagetypes_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_GetEstimatedDamageToTarget::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_Glyph::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_Glyph::kUnitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_Glyph::CMsgBotWorldState_Action_Glyph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_Glyph.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.Glyph)
}
CMsgBotWorldState_Action_Glyph::CMsgBotWorldState_Action_Glyph(const CMsgBotWorldState_Action_Glyph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unit_ = from.unit_;
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.Glyph)
}

void CMsgBotWorldState_Action_Glyph::SharedCtor() {
  unit_ = 0;
}

CMsgBotWorldState_Action_Glyph::~CMsgBotWorldState_Action_Glyph() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.Glyph)
  SharedDtor();
}

void CMsgBotWorldState_Action_Glyph::SharedDtor() {
}

void CMsgBotWorldState_Action_Glyph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_Glyph::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_Glyph& CMsgBotWorldState_Action_Glyph::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_Glyph.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_Glyph::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.Glyph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unit_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_Glyph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.Glyph)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 unit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_unit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.Glyph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.Glyph)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_Glyph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.Glyph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 unit = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->unit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.Glyph)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_Glyph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.Glyph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 unit = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->unit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.Glyph)
  return target;
}

size_t CMsgBotWorldState_Action_Glyph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.Glyph)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 unit = 1;
  if (has_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unit());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_Glyph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.Glyph)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_Glyph* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_Glyph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.Glyph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.Glyph)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_Glyph::MergeFrom(const CMsgBotWorldState_Action_Glyph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.Glyph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_unit()) {
    set_unit(from.unit());
  }
}

void CMsgBotWorldState_Action_Glyph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.Glyph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_Glyph::CopyFrom(const CMsgBotWorldState_Action_Glyph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.Glyph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_Glyph::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMsgBotWorldState_Action_Glyph::Swap(CMsgBotWorldState_Action_Glyph* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_Glyph::InternalSwap(CMsgBotWorldState_Action_Glyph* other) {
  using std::swap;
  swap(unit_, other->unit_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_Glyph::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_SoftReset::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_SoftReset::kMinigameConfigFieldNumber;
const int CMsgBotWorldState_Action_SoftReset::kSnapshotDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_SoftReset::CMsgBotWorldState_Action_SoftReset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_SoftReset.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.SoftReset)
}
CMsgBotWorldState_Action_SoftReset::CMsgBotWorldState_Action_SoftReset(const CMsgBotWorldState_Action_SoftReset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  minigameconfig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_minigameconfig()) {
    minigameconfig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.minigameconfig_);
  }
  snapshotdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_snapshotdata()) {
    snapshotdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.snapshotdata_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.SoftReset)
}

void CMsgBotWorldState_Action_SoftReset::SharedCtor() {
  minigameconfig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snapshotdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgBotWorldState_Action_SoftReset::~CMsgBotWorldState_Action_SoftReset() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.SoftReset)
  SharedDtor();
}

void CMsgBotWorldState_Action_SoftReset::SharedDtor() {
  minigameconfig_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snapshotdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgBotWorldState_Action_SoftReset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_SoftReset::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_SoftReset& CMsgBotWorldState_Action_SoftReset::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_SoftReset.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_SoftReset::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.SoftReset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      minigameconfig_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      snapshotdata_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_SoftReset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.SoftReset)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string minigameConfig = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_minigameconfig()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->minigameconfig().data(), static_cast<int>(this->minigameconfig().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Action.SoftReset.minigameConfig");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string snapshotData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_snapshotdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->snapshotdata().data(), static_cast<int>(this->snapshotdata().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Action.SoftReset.snapshotData");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.SoftReset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.SoftReset)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_SoftReset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.SoftReset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string minigameConfig = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->minigameconfig().data(), static_cast<int>(this->minigameconfig().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.SoftReset.minigameConfig");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->minigameconfig(), output);
  }

  // optional string snapshotData = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->snapshotdata().data(), static_cast<int>(this->snapshotdata().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.SoftReset.snapshotData");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->snapshotdata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.SoftReset)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_SoftReset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.SoftReset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string minigameConfig = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->minigameconfig().data(), static_cast<int>(this->minigameconfig().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.SoftReset.minigameConfig");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->minigameconfig(), target);
  }

  // optional string snapshotData = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->snapshotdata().data(), static_cast<int>(this->snapshotdata().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.SoftReset.snapshotData");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->snapshotdata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.SoftReset)
  return target;
}

size_t CMsgBotWorldState_Action_SoftReset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.SoftReset)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string minigameConfig = 1;
    if (has_minigameconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->minigameconfig());
    }

    // optional string snapshotData = 2;
    if (has_snapshotdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->snapshotdata());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_SoftReset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.SoftReset)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_SoftReset* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_SoftReset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.SoftReset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.SoftReset)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_SoftReset::MergeFrom(const CMsgBotWorldState_Action_SoftReset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.SoftReset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_minigameconfig();
      minigameconfig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.minigameconfig_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_snapshotdata();
      snapshotdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.snapshotdata_);
    }
  }
}

void CMsgBotWorldState_Action_SoftReset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.SoftReset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_SoftReset::CopyFrom(const CMsgBotWorldState_Action_SoftReset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.SoftReset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_SoftReset::IsInitialized() const {
  return true;
}

void CMsgBotWorldState_Action_SoftReset::Swap(CMsgBotWorldState_Action_SoftReset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_SoftReset::InternalSwap(CMsgBotWorldState_Action_SoftReset* other) {
  using std::swap;
  minigameconfig_.Swap(&other->minigameconfig_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  snapshotdata_.Swap(&other->snapshotdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_SoftReset::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_Buyback::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_Buyback::kUnitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_Buyback::CMsgBotWorldState_Action_Buyback()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_Buyback.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.Buyback)
}
CMsgBotWorldState_Action_Buyback::CMsgBotWorldState_Action_Buyback(const CMsgBotWorldState_Action_Buyback& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unit_ = from.unit_;
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.Buyback)
}

void CMsgBotWorldState_Action_Buyback::SharedCtor() {
  unit_ = 0;
}

CMsgBotWorldState_Action_Buyback::~CMsgBotWorldState_Action_Buyback() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.Buyback)
  SharedDtor();
}

void CMsgBotWorldState_Action_Buyback::SharedDtor() {
}

void CMsgBotWorldState_Action_Buyback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_Buyback::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_Buyback& CMsgBotWorldState_Action_Buyback::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_Buyback.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_Buyback::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.Buyback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unit_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_Buyback::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.Buyback)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 unit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_unit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.Buyback)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.Buyback)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_Buyback::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.Buyback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 unit = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->unit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.Buyback)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_Buyback::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.Buyback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 unit = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->unit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.Buyback)
  return target;
}

size_t CMsgBotWorldState_Action_Buyback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.Buyback)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 unit = 1;
  if (has_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unit());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_Buyback::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.Buyback)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_Buyback* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_Buyback>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.Buyback)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.Buyback)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_Buyback::MergeFrom(const CMsgBotWorldState_Action_Buyback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.Buyback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_unit()) {
    set_unit(from.unit());
  }
}

void CMsgBotWorldState_Action_Buyback::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.Buyback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_Buyback::CopyFrom(const CMsgBotWorldState_Action_Buyback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.Buyback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_Buyback::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMsgBotWorldState_Action_Buyback::Swap(CMsgBotWorldState_Action_Buyback* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_Buyback::InternalSwap(CMsgBotWorldState_Action_Buyback* other) {
  using std::swap;
  swap(unit_, other->unit_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_Buyback::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_ScriptingDebugDrawText::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_Action_ScriptingDebugDrawText_default_instance_._instance.get_mutable()->origin_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_ScriptingDebugDrawText::kOriginFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawText::kTextFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawText::kBViewCheckFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawText::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_ScriptingDebugDrawText::CMsgBotWorldState_Action_ScriptingDebugDrawText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawText.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.ScriptingDebugDrawText)
}
CMsgBotWorldState_Action_ScriptingDebugDrawText::CMsgBotWorldState_Action_ScriptingDebugDrawText(const CMsgBotWorldState_Action_ScriptingDebugDrawText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_origin()) {
    origin_ = new ::CMsgBotWorldState_Vector(*from.origin_);
  } else {
    origin_ = NULL;
  }
  ::memcpy(&bviewcheck_, &from.bviewcheck_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&bviewcheck_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.ScriptingDebugDrawText)
}

void CMsgBotWorldState_Action_ScriptingDebugDrawText::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&origin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&origin_)) + sizeof(duration_));
}

CMsgBotWorldState_Action_ScriptingDebugDrawText::~CMsgBotWorldState_Action_ScriptingDebugDrawText() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.ScriptingDebugDrawText)
  SharedDtor();
}

void CMsgBotWorldState_Action_ScriptingDebugDrawText::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete origin_;
}

void CMsgBotWorldState_Action_ScriptingDebugDrawText::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_ScriptingDebugDrawText::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_ScriptingDebugDrawText& CMsgBotWorldState_Action_ScriptingDebugDrawText::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawText.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_ScriptingDebugDrawText::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.ScriptingDebugDrawText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      text_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(origin_ != NULL);
      origin_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&bviewcheck_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duration_) -
        reinterpret_cast<char*>(&bviewcheck_)) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_ScriptingDebugDrawText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.ScriptingDebugDrawText)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CMsgBotWorldState.Vector origin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Action.ScriptingDebugDrawText.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool bViewCheck = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_bviewcheck();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bviewcheck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float duration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.ScriptingDebugDrawText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.ScriptingDebugDrawText)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_ScriptingDebugDrawText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.ScriptingDebugDrawText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CMsgBotWorldState.Vector origin = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_origin(), output);
  }

  // required string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.ScriptingDebugDrawText.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // required bool bViewCheck = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->bviewcheck(), output);
  }

  // required float duration = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->duration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.ScriptingDebugDrawText)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_ScriptingDebugDrawText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.ScriptingDebugDrawText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CMsgBotWorldState.Vector origin = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_origin(), deterministic, target);
  }

  // required string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.ScriptingDebugDrawText.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // required bool bViewCheck = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->bviewcheck(), target);
  }

  // required float duration = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->duration(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.ScriptingDebugDrawText)
  return target;
}

size_t CMsgBotWorldState_Action_ScriptingDebugDrawText::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgBotWorldState.Action.ScriptingDebugDrawText)
  size_t total_size = 0;

  if (has_text()) {
    // required string text = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  if (has_origin()) {
    // required .CMsgBotWorldState.Vector origin = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *origin_);
  }

  if (has_bviewcheck()) {
    // required bool bViewCheck = 3;
    total_size += 1 + 1;
  }

  if (has_duration()) {
    // required float duration = 4;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t CMsgBotWorldState_Action_ScriptingDebugDrawText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.ScriptingDebugDrawText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string text = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

    // required .CMsgBotWorldState.Vector origin = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *origin_);

    // required bool bViewCheck = 3;
    total_size += 1 + 1;

    // required float duration = 4;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_ScriptingDebugDrawText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawText)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_ScriptingDebugDrawText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_ScriptingDebugDrawText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.ScriptingDebugDrawText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.ScriptingDebugDrawText)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_ScriptingDebugDrawText::MergeFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_origin()->::CMsgBotWorldState_Vector::MergeFrom(from.origin());
    }
    if (cached_has_bits & 0x00000004u) {
      bviewcheck_ = from.bviewcheck_;
    }
    if (cached_has_bits & 0x00000008u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_ScriptingDebugDrawText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_ScriptingDebugDrawText::CopyFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_ScriptingDebugDrawText::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_origin()) {
    if (!this->origin_->IsInitialized()) return false;
  }
  return true;
}

void CMsgBotWorldState_Action_ScriptingDebugDrawText::Swap(CMsgBotWorldState_Action_ScriptingDebugDrawText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_ScriptingDebugDrawText::InternalSwap(CMsgBotWorldState_Action_ScriptingDebugDrawText* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(origin_, other->origin_);
  swap(bviewcheck_, other->bviewcheck_);
  swap(duration_, other->duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_ScriptingDebugDrawText::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_ScriptingDebugDrawLine::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_Action_ScriptingDebugDrawLine_default_instance_._instance.get_mutable()->origin_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
  ::_CMsgBotWorldState_Action_ScriptingDebugDrawLine_default_instance_._instance.get_mutable()->target_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_ScriptingDebugDrawLine::kOriginFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawLine::kTargetFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawLine::kRFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawLine::kGFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawLine::kBFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawLine::kZtestFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawLine::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_ScriptingDebugDrawLine::CMsgBotWorldState_Action_ScriptingDebugDrawLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawLine.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
}
CMsgBotWorldState_Action_ScriptingDebugDrawLine::CMsgBotWorldState_Action_ScriptingDebugDrawLine(const CMsgBotWorldState_Action_ScriptingDebugDrawLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_origin()) {
    origin_ = new ::CMsgBotWorldState_Vector(*from.origin_);
  } else {
    origin_ = NULL;
  }
  if (from.has_target()) {
    target_ = new ::CMsgBotWorldState_Vector(*from.target_);
  } else {
    target_ = NULL;
  }
  ::memcpy(&r_, &from.r_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&r_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
}

void CMsgBotWorldState_Action_ScriptingDebugDrawLine::SharedCtor() {
  ::memset(&origin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&origin_)) + sizeof(duration_));
}

CMsgBotWorldState_Action_ScriptingDebugDrawLine::~CMsgBotWorldState_Action_ScriptingDebugDrawLine() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
  SharedDtor();
}

void CMsgBotWorldState_Action_ScriptingDebugDrawLine::SharedDtor() {
  if (this != internal_default_instance()) delete origin_;
  if (this != internal_default_instance()) delete target_;
}

void CMsgBotWorldState_Action_ScriptingDebugDrawLine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_ScriptingDebugDrawLine::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_ScriptingDebugDrawLine& CMsgBotWorldState_Action_ScriptingDebugDrawLine::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawLine.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_ScriptingDebugDrawLine::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(origin_ != NULL);
      origin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(target_ != NULL);
      target_->Clear();
    }
  }
  if (cached_has_bits & 124u) {
    ::memset(&r_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duration_) -
        reinterpret_cast<char*>(&r_)) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_ScriptingDebugDrawLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CMsgBotWorldState.Vector origin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .CMsgBotWorldState.Vector target = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 r = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_r();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 g = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_g();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &g_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 b = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool ztest = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_ztest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ztest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float duration = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_ScriptingDebugDrawLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CMsgBotWorldState.Vector origin = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_origin(), output);
  }

  // required .CMsgBotWorldState.Vector target = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_target(), output);
  }

  // required int32 r = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->r(), output);
  }

  // required int32 g = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->g(), output);
  }

  // required int32 b = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->b(), output);
  }

  // required bool ztest = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->ztest(), output);
  }

  // required float duration = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->duration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_ScriptingDebugDrawLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CMsgBotWorldState.Vector origin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_origin(), deterministic, target);
  }

  // required .CMsgBotWorldState.Vector target = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_target(), deterministic, target);
  }

  // required int32 r = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->r(), target);
  }

  // required int32 g = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->g(), target);
  }

  // required int32 b = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->b(), target);
  }

  // required bool ztest = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->ztest(), target);
  }

  // required float duration = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->duration(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
  return target;
}

size_t CMsgBotWorldState_Action_ScriptingDebugDrawLine::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
  size_t total_size = 0;

  if (has_origin()) {
    // required .CMsgBotWorldState.Vector origin = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *origin_);
  }

  if (has_target()) {
    // required .CMsgBotWorldState.Vector target = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *target_);
  }

  if (has_r()) {
    // required int32 r = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->r());
  }

  if (has_g()) {
    // required int32 g = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->g());
  }

  if (has_b()) {
    // required int32 b = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->b());
  }

  if (has_ztest()) {
    // required bool ztest = 6;
    total_size += 1 + 1;
  }

  if (has_duration()) {
    // required float duration = 7;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t CMsgBotWorldState_Action_ScriptingDebugDrawLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required .CMsgBotWorldState.Vector origin = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *origin_);

    // required .CMsgBotWorldState.Vector target = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *target_);

    // required int32 r = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->r());

    // required int32 g = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->g());

    // required int32 b = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->b());

    // required bool ztest = 6;
    total_size += 1 + 1;

    // required float duration = 7;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_ScriptingDebugDrawLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_ScriptingDebugDrawLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_ScriptingDebugDrawLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_ScriptingDebugDrawLine::MergeFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_origin()->::CMsgBotWorldState_Vector::MergeFrom(from.origin());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_target()->::CMsgBotWorldState_Vector::MergeFrom(from.target());
    }
    if (cached_has_bits & 0x00000004u) {
      r_ = from.r_;
    }
    if (cached_has_bits & 0x00000008u) {
      g_ = from.g_;
    }
    if (cached_has_bits & 0x00000010u) {
      b_ = from.b_;
    }
    if (cached_has_bits & 0x00000020u) {
      ztest_ = from.ztest_;
    }
    if (cached_has_bits & 0x00000040u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_ScriptingDebugDrawLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_ScriptingDebugDrawLine::CopyFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_ScriptingDebugDrawLine::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  if (has_origin()) {
    if (!this->origin_->IsInitialized()) return false;
  }
  if (has_target()) {
    if (!this->target_->IsInitialized()) return false;
  }
  return true;
}

void CMsgBotWorldState_Action_ScriptingDebugDrawLine::Swap(CMsgBotWorldState_Action_ScriptingDebugDrawLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_ScriptingDebugDrawLine::InternalSwap(CMsgBotWorldState_Action_ScriptingDebugDrawLine* other) {
  using std::swap;
  swap(origin_, other->origin_);
  swap(target_, other->target_);
  swap(r_, other->r_);
  swap(g_, other->g_);
  swap(b_, other->b_);
  swap(ztest_, other->ztest_);
  swap(duration_, other->duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_ScriptingDebugDrawLine::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::kXFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::kYFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::kLineOffsetFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::kTextFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::kRFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::kGFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::kBFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::kAFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawScreenText.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
}
CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText(const CMsgBotWorldState_Action_ScriptingDebugDrawScreenText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&x_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
}

void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&x_)) + sizeof(duration_));
}

CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::~CMsgBotWorldState_Action_ScriptingDebugDrawScreenText() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
  SharedDtor();
}

void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_ScriptingDebugDrawScreenText& CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawScreenText.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    text_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&a_) -
        reinterpret_cast<char*>(&x_)) + sizeof(a_));
  }
  duration_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lineOffset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_lineoffset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lineoffset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string text = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 r = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_r();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 g = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_g();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &g_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 b = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 a = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float duration = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float x = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // required float y = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // required int32 lineOffset = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lineoffset(), output);
  }

  // required string text = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->text(), output);
  }

  // required int32 r = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->r(), output);
  }

  // required int32 g = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->g(), output);
  }

  // required int32 b = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->b(), output);
  }

  // required int32 a = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->a(), output);
  }

  // required float duration = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->duration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float x = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // required float y = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // required int32 lineOffset = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lineoffset(), target);
  }

  // required string text = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->text(), target);
  }

  // required int32 r = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->r(), target);
  }

  // required int32 g = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->g(), target);
  }

  // required int32 b = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->b(), target);
  }

  // required int32 a = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->a(), target);
  }

  // required float duration = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->duration(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
  return target;
}

size_t CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
  size_t total_size = 0;

  if (has_text()) {
    // required string text = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  if (has_x()) {
    // required float x = 1;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 2;
    total_size += 1 + 4;
  }

  if (has_lineoffset()) {
    // required int32 lineOffset = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lineoffset());
  }

  if (has_r()) {
    // required int32 r = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->r());
  }

  if (has_g()) {
    // required int32 g = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->g());
  }

  if (has_b()) {
    // required int32 b = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->b());
  }

  if (has_a()) {
    // required int32 a = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  if (has_duration()) {
    // required float duration = 9;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001ff) ^ 0x000001ff) == 0) {  // All required fields are present.
    // required string text = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

    // required float x = 1;
    total_size += 1 + 4;

    // required float y = 2;
    total_size += 1 + 4;

    // required int32 lineOffset = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lineoffset());

    // required int32 r = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->r());

    // required int32 g = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->g());

    // required int32 b = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->b());

    // required int32 a = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());

    // required float duration = 9;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_ScriptingDebugDrawScreenText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::MergeFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawScreenText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000008u) {
      lineoffset_ = from.lineoffset_;
    }
    if (cached_has_bits & 0x00000010u) {
      r_ = from.r_;
    }
    if (cached_has_bits & 0x00000020u) {
      g_ = from.g_;
    }
    if (cached_has_bits & 0x00000040u) {
      b_ = from.b_;
    }
    if (cached_has_bits & 0x00000080u) {
      a_ = from.a_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_duration(from.duration());
  }
}

void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::CopyFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawScreenText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;
  return true;
}

void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::Swap(CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::InternalSwap(CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(lineoffset_, other->lineoffset_);
  swap(r_, other->r_);
  swap(g_, other->g_);
  swap(b_, other->b_);
  swap(a_, other->a_);
  swap(duration_, other->duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::kXFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::kYFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::kLineOffsetFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::kTextFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::kRFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::kGFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::kBFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::kAFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::kDurationFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::kFontFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::kSizeFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::kBBoldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
}
CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty(const CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  font_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_font()) {
    font_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.font_);
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&bbold_) -
    reinterpret_cast<char*>(&x_)) + sizeof(bbold_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
}

void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  font_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bbold_) -
      reinterpret_cast<char*>(&x_)) + sizeof(bbold_));
}

CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::~CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
  SharedDtor();
}

void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  font_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty& CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      text_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      font_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&b_) -
        reinterpret_cast<char*>(&x_)) + sizeof(b_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&a_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bbold_) -
        reinterpret_cast<char*>(&a_)) + sizeof(bbold_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lineOffset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_lineoffset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lineoffset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string text = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 r = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_r();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 g = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_g();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &g_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 b = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 a = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float duration = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string font = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_font()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->font().data(), static_cast<int>(this->font().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.font");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float size = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool bBold = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_bbold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bbold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float x = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // required float y = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // required int32 lineOffset = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lineoffset(), output);
  }

  // required string text = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->text(), output);
  }

  // required int32 r = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->r(), output);
  }

  // required int32 g = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->g(), output);
  }

  // required int32 b = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->b(), output);
  }

  // required int32 a = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->a(), output);
  }

  // required float duration = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->duration(), output);
  }

  // required string font = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->font().data(), static_cast<int>(this->font().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.font");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->font(), output);
  }

  // required float size = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->size(), output);
  }

  // required bool bBold = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->bbold(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float x = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // required float y = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // required int32 lineOffset = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lineoffset(), target);
  }

  // required string text = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->text(), target);
  }

  // required int32 r = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->r(), target);
  }

  // required int32 g = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->g(), target);
  }

  // required int32 b = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->b(), target);
  }

  // required int32 a = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->a(), target);
  }

  // required float duration = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->duration(), target);
  }

  // required string font = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->font().data(), static_cast<int>(this->font().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.font");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->font(), target);
  }

  // required float size = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->size(), target);
  }

  // required bool bBold = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->bbold(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
  return target;
}

size_t CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
  size_t total_size = 0;

  if (has_text()) {
    // required string text = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  if (has_font()) {
    // required string font = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->font());
  }

  if (has_x()) {
    // required float x = 1;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 2;
    total_size += 1 + 4;
  }

  if (has_lineoffset()) {
    // required int32 lineOffset = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lineoffset());
  }

  if (has_r()) {
    // required int32 r = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->r());
  }

  if (has_g()) {
    // required int32 g = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->g());
  }

  if (has_b()) {
    // required int32 b = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->b());
  }

  if (has_a()) {
    // required int32 a = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  if (has_duration()) {
    // required float duration = 9;
    total_size += 1 + 4;
  }

  if (has_size()) {
    // required float size = 11;
    total_size += 1 + 4;
  }

  if (has_bbold()) {
    // required bool bBold = 12;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000fff) ^ 0x00000fff) == 0) {  // All required fields are present.
    // required string text = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

    // required string font = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->font());

    // required float x = 1;
    total_size += 1 + 4;

    // required float y = 2;
    total_size += 1 + 4;

    // required int32 lineOffset = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lineoffset());

    // required int32 r = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->r());

    // required int32 g = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->g());

    // required int32 b = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->b());

    // required int32 a = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());

    // required float duration = 9;
    total_size += 1 + 4;

    // required float size = 11;
    total_size += 1 + 4;

    // required bool bBold = 12;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::MergeFrom(const CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_font();
      font_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.font_);
    }
    if (cached_has_bits & 0x00000004u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000008u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000010u) {
      lineoffset_ = from.lineoffset_;
    }
    if (cached_has_bits & 0x00000020u) {
      r_ = from.r_;
    }
    if (cached_has_bits & 0x00000040u) {
      g_ = from.g_;
    }
    if (cached_has_bits & 0x00000080u) {
      b_ = from.b_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      a_ = from.a_;
    }
    if (cached_has_bits & 0x00000200u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000400u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000800u) {
      bbold_ = from.bbold_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::CopyFrom(const CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000fff) != 0x00000fff) return false;
  return true;
}

void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::Swap(CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::InternalSwap(CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  font_.Swap(&other->font_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(lineoffset_, other->lineoffset_);
  swap(r_, other->r_);
  swap(g_, other->g_);
  swap(b_, other->b_);
  swap(a_, other->a_);
  swap(duration_, other->duration_);
  swap(size_, other->size_);
  swap(bbold_, other->bbold_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_ScriptingDebugDrawBox::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_Action_ScriptingDebugDrawBox_default_instance_._instance.get_mutable()->origin_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
  ::_CMsgBotWorldState_Action_ScriptingDebugDrawBox_default_instance_._instance.get_mutable()->minimum_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
  ::_CMsgBotWorldState_Action_ScriptingDebugDrawBox_default_instance_._instance.get_mutable()->maximum_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_ScriptingDebugDrawBox::kOriginFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawBox::kMinimumFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawBox::kMaximumFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawBox::kRFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawBox::kGFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawBox::kBFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawBox::kAFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawBox::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_ScriptingDebugDrawBox::CMsgBotWorldState_Action_ScriptingDebugDrawBox()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawBox.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
}
CMsgBotWorldState_Action_ScriptingDebugDrawBox::CMsgBotWorldState_Action_ScriptingDebugDrawBox(const CMsgBotWorldState_Action_ScriptingDebugDrawBox& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_origin()) {
    origin_ = new ::CMsgBotWorldState_Vector(*from.origin_);
  } else {
    origin_ = NULL;
  }
  if (from.has_minimum()) {
    minimum_ = new ::CMsgBotWorldState_Vector(*from.minimum_);
  } else {
    minimum_ = NULL;
  }
  if (from.has_maximum()) {
    maximum_ = new ::CMsgBotWorldState_Vector(*from.maximum_);
  } else {
    maximum_ = NULL;
  }
  ::memcpy(&r_, &from.r_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&r_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
}

void CMsgBotWorldState_Action_ScriptingDebugDrawBox::SharedCtor() {
  ::memset(&origin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&origin_)) + sizeof(duration_));
}

CMsgBotWorldState_Action_ScriptingDebugDrawBox::~CMsgBotWorldState_Action_ScriptingDebugDrawBox() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
  SharedDtor();
}

void CMsgBotWorldState_Action_ScriptingDebugDrawBox::SharedDtor() {
  if (this != internal_default_instance()) delete origin_;
  if (this != internal_default_instance()) delete minimum_;
  if (this != internal_default_instance()) delete maximum_;
}

void CMsgBotWorldState_Action_ScriptingDebugDrawBox::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_ScriptingDebugDrawBox::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_ScriptingDebugDrawBox& CMsgBotWorldState_Action_ScriptingDebugDrawBox::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawBox.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_ScriptingDebugDrawBox::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(origin_ != NULL);
      origin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(minimum_ != NULL);
      minimum_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(maximum_ != NULL);
      maximum_->Clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&r_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duration_) -
        reinterpret_cast<char*>(&r_)) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_ScriptingDebugDrawBox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CMsgBotWorldState.Vector origin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .CMsgBotWorldState.Vector minimum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_minimum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .CMsgBotWorldState.Vector maximum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_maximum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 r = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_r();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 g = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_g();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &g_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 b = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 a = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float duration = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_ScriptingDebugDrawBox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CMsgBotWorldState.Vector origin = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_origin(), output);
  }

  // required .CMsgBotWorldState.Vector minimum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_minimum(), output);
  }

  // required .CMsgBotWorldState.Vector maximum = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_maximum(), output);
  }

  // required int32 r = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->r(), output);
  }

  // required int32 g = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->g(), output);
  }

  // required int32 b = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->b(), output);
  }

  // required int32 a = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->a(), output);
  }

  // required float duration = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->duration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_ScriptingDebugDrawBox::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CMsgBotWorldState.Vector origin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_origin(), deterministic, target);
  }

  // required .CMsgBotWorldState.Vector minimum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_minimum(), deterministic, target);
  }

  // required .CMsgBotWorldState.Vector maximum = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_maximum(), deterministic, target);
  }

  // required int32 r = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->r(), target);
  }

  // required int32 g = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->g(), target);
  }

  // required int32 b = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->b(), target);
  }

  // required int32 a = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->a(), target);
  }

  // required float duration = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->duration(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
  return target;
}

size_t CMsgBotWorldState_Action_ScriptingDebugDrawBox::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
  size_t total_size = 0;

  if (has_origin()) {
    // required .CMsgBotWorldState.Vector origin = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *origin_);
  }

  if (has_minimum()) {
    // required .CMsgBotWorldState.Vector minimum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *minimum_);
  }

  if (has_maximum()) {
    // required .CMsgBotWorldState.Vector maximum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *maximum_);
  }

  if (has_r()) {
    // required int32 r = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->r());
  }

  if (has_g()) {
    // required int32 g = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->g());
  }

  if (has_b()) {
    // required int32 b = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->b());
  }

  if (has_a()) {
    // required int32 a = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  if (has_duration()) {
    // required float duration = 8;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t CMsgBotWorldState_Action_ScriptingDebugDrawBox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000ff) ^ 0x000000ff) == 0) {  // All required fields are present.
    // required .CMsgBotWorldState.Vector origin = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *origin_);

    // required .CMsgBotWorldState.Vector minimum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *minimum_);

    // required .CMsgBotWorldState.Vector maximum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *maximum_);

    // required int32 r = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->r());

    // required int32 g = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->g());

    // required int32 b = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->b());

    // required int32 a = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());

    // required float duration = 8;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_ScriptingDebugDrawBox::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_ScriptingDebugDrawBox* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_ScriptingDebugDrawBox>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_ScriptingDebugDrawBox::MergeFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawBox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_origin()->::CMsgBotWorldState_Vector::MergeFrom(from.origin());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_minimum()->::CMsgBotWorldState_Vector::MergeFrom(from.minimum());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_maximum()->::CMsgBotWorldState_Vector::MergeFrom(from.maximum());
    }
    if (cached_has_bits & 0x00000008u) {
      r_ = from.r_;
    }
    if (cached_has_bits & 0x00000010u) {
      g_ = from.g_;
    }
    if (cached_has_bits & 0x00000020u) {
      b_ = from.b_;
    }
    if (cached_has_bits & 0x00000040u) {
      a_ = from.a_;
    }
    if (cached_has_bits & 0x00000080u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_ScriptingDebugDrawBox::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_ScriptingDebugDrawBox::CopyFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawBox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_ScriptingDebugDrawBox::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;
  if (has_origin()) {
    if (!this->origin_->IsInitialized()) return false;
  }
  if (has_minimum()) {
    if (!this->minimum_->IsInitialized()) return false;
  }
  if (has_maximum()) {
    if (!this->maximum_->IsInitialized()) return false;
  }
  return true;
}

void CMsgBotWorldState_Action_ScriptingDebugDrawBox::Swap(CMsgBotWorldState_Action_ScriptingDebugDrawBox* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_ScriptingDebugDrawBox::InternalSwap(CMsgBotWorldState_Action_ScriptingDebugDrawBox* other) {
  using std::swap;
  swap(origin_, other->origin_);
  swap(minimum_, other->minimum_);
  swap(maximum_, other->maximum_);
  swap(r_, other->r_);
  swap(g_, other->g_);
  swap(b_, other->b_);
  swap(a_, other->a_);
  swap(duration_, other->duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_ScriptingDebugDrawBox::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_Action_ScriptingDebugDrawCircle_default_instance_._instance.get_mutable()->center_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
  ::_CMsgBotWorldState_Action_ScriptingDebugDrawCircle_default_instance_._instance.get_mutable()->vrgb_ = const_cast< ::CMsgBotWorldState_Vector*>(
      ::CMsgBotWorldState_Vector::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_ScriptingDebugDrawCircle::kCenterFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawCircle::kVRgbFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawCircle::kAFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawCircle::kRadFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawCircle::kZtestFieldNumber;
const int CMsgBotWorldState_Action_ScriptingDebugDrawCircle::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_ScriptingDebugDrawCircle::CMsgBotWorldState_Action_ScriptingDebugDrawCircle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawCircle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
}
CMsgBotWorldState_Action_ScriptingDebugDrawCircle::CMsgBotWorldState_Action_ScriptingDebugDrawCircle(const CMsgBotWorldState_Action_ScriptingDebugDrawCircle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_center()) {
    center_ = new ::CMsgBotWorldState_Vector(*from.center_);
  } else {
    center_ = NULL;
  }
  if (from.has_vrgb()) {
    vrgb_ = new ::CMsgBotWorldState_Vector(*from.vrgb_);
  } else {
    vrgb_ = NULL;
  }
  ::memcpy(&a_, &from.a_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&a_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
}

void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::SharedCtor() {
  ::memset(&center_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&center_)) + sizeof(duration_));
}

CMsgBotWorldState_Action_ScriptingDebugDrawCircle::~CMsgBotWorldState_Action_ScriptingDebugDrawCircle() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
  SharedDtor();
}

void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::SharedDtor() {
  if (this != internal_default_instance()) delete center_;
  if (this != internal_default_instance()) delete vrgb_;
}

void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_ScriptingDebugDrawCircle::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_ScriptingDebugDrawCircle& CMsgBotWorldState_Action_ScriptingDebugDrawCircle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawCircle.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(center_ != NULL);
      center_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(vrgb_ != NULL);
      vrgb_->Clear();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&a_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duration_) -
        reinterpret_cast<char*>(&a_)) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_ScriptingDebugDrawCircle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CMsgBotWorldState.Vector center = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_center()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .CMsgBotWorldState.Vector vRgb = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vrgb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float a = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float rad = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_rad();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rad_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool ztest = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_ztest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ztest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float duration = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CMsgBotWorldState.Vector center = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_center(), output);
  }

  // required .CMsgBotWorldState.Vector vRgb = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_vrgb(), output);
  }

  // required float a = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->a(), output);
  }

  // required float rad = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->rad(), output);
  }

  // required bool ztest = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->ztest(), output);
  }

  // required float duration = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->duration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_ScriptingDebugDrawCircle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CMsgBotWorldState.Vector center = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_center(), deterministic, target);
  }

  // required .CMsgBotWorldState.Vector vRgb = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_vrgb(), deterministic, target);
  }

  // required float a = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->a(), target);
  }

  // required float rad = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->rad(), target);
  }

  // required bool ztest = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->ztest(), target);
  }

  // required float duration = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->duration(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
  return target;
}

size_t CMsgBotWorldState_Action_ScriptingDebugDrawCircle::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
  size_t total_size = 0;

  if (has_center()) {
    // required .CMsgBotWorldState.Vector center = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *center_);
  }

  if (has_vrgb()) {
    // required .CMsgBotWorldState.Vector vRgb = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vrgb_);
  }

  if (has_a()) {
    // required float a = 3;
    total_size += 1 + 4;
  }

  if (has_rad()) {
    // required float rad = 4;
    total_size += 1 + 4;
  }

  if (has_ztest()) {
    // required bool ztest = 5;
    total_size += 1 + 1;
  }

  if (has_duration()) {
    // required float duration = 6;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t CMsgBotWorldState_Action_ScriptingDebugDrawCircle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required .CMsgBotWorldState.Vector center = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *center_);

    // required .CMsgBotWorldState.Vector vRgb = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vrgb_);

    // required float a = 3;
    total_size += 1 + 4;

    // required float rad = 4;
    total_size += 1 + 4;

    // required bool ztest = 5;
    total_size += 1 + 1;

    // required float duration = 6;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_ScriptingDebugDrawCircle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_ScriptingDebugDrawCircle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::MergeFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawCircle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_center()->::CMsgBotWorldState_Vector::MergeFrom(from.center());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_vrgb()->::CMsgBotWorldState_Vector::MergeFrom(from.vrgb());
    }
    if (cached_has_bits & 0x00000004u) {
      a_ = from.a_;
    }
    if (cached_has_bits & 0x00000008u) {
      rad_ = from.rad_;
    }
    if (cached_has_bits & 0x00000010u) {
      ztest_ = from.ztest_;
    }
    if (cached_has_bits & 0x00000020u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::CopyFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawCircle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_ScriptingDebugDrawCircle::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  if (has_center()) {
    if (!this->center_->IsInitialized()) return false;
  }
  if (has_vrgb()) {
    if (!this->vrgb_->IsInitialized()) return false;
  }
  return true;
}

void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::Swap(CMsgBotWorldState_Action_ScriptingDebugDrawCircle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::InternalSwap(CMsgBotWorldState_Action_ScriptingDebugDrawCircle* other) {
  using std::swap;
  swap(center_, other->center_);
  swap(vrgb_, other->vrgb_);
  swap(a_, other->a_);
  swap(rad_, other->rad_);
  swap(ztest_, other->ztest_);
  swap(duration_, other->duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_ScriptingDebugDrawCircle::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_ScriptingDebugDrawClear::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_ScriptingDebugDrawClear::CMsgBotWorldState_Action_ScriptingDebugDrawClear()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawClear.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
}
CMsgBotWorldState_Action_ScriptingDebugDrawClear::CMsgBotWorldState_Action_ScriptingDebugDrawClear(const CMsgBotWorldState_Action_ScriptingDebugDrawClear& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
}

void CMsgBotWorldState_Action_ScriptingDebugDrawClear::SharedCtor() {
}

CMsgBotWorldState_Action_ScriptingDebugDrawClear::~CMsgBotWorldState_Action_ScriptingDebugDrawClear() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
  SharedDtor();
}

void CMsgBotWorldState_Action_ScriptingDebugDrawClear::SharedDtor() {
}

void CMsgBotWorldState_Action_ScriptingDebugDrawClear::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_ScriptingDebugDrawClear::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_ScriptingDebugDrawClear& CMsgBotWorldState_Action_ScriptingDebugDrawClear::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_ScriptingDebugDrawClear.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_ScriptingDebugDrawClear::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_ScriptingDebugDrawClear::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_ScriptingDebugDrawClear::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_ScriptingDebugDrawClear::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
  return target;
}

size_t CMsgBotWorldState_Action_ScriptingDebugDrawClear::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_ScriptingDebugDrawClear::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_ScriptingDebugDrawClear* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_ScriptingDebugDrawClear>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_ScriptingDebugDrawClear::MergeFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawClear& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgBotWorldState_Action_ScriptingDebugDrawClear::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_ScriptingDebugDrawClear::CopyFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawClear& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_ScriptingDebugDrawClear::IsInitialized() const {
  return true;
}

void CMsgBotWorldState_Action_ScriptingDebugDrawClear::Swap(CMsgBotWorldState_Action_ScriptingDebugDrawClear* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_ScriptingDebugDrawClear::InternalSwap(CMsgBotWorldState_Action_ScriptingDebugDrawClear* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_ScriptingDebugDrawClear::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_OceanWinGame::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_OceanWinGame::kTeamFieldNumber;
const int CMsgBotWorldState_Action_OceanWinGame::kRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_OceanWinGame::CMsgBotWorldState_Action_OceanWinGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_OceanWinGame.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.OceanWinGame)
}
CMsgBotWorldState_Action_OceanWinGame::CMsgBotWorldState_Action_OceanWinGame(const CMsgBotWorldState_Action_OceanWinGame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  team_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_team()) {
    team_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_);
  }
  reward_ = from.reward_;
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.OceanWinGame)
}

void CMsgBotWorldState_Action_OceanWinGame::SharedCtor() {
  team_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reward_ = 0;
}

CMsgBotWorldState_Action_OceanWinGame::~CMsgBotWorldState_Action_OceanWinGame() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.OceanWinGame)
  SharedDtor();
}

void CMsgBotWorldState_Action_OceanWinGame::SharedDtor() {
  team_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgBotWorldState_Action_OceanWinGame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_OceanWinGame::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_OceanWinGame& CMsgBotWorldState_Action_OceanWinGame::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_OceanWinGame.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_OceanWinGame::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.OceanWinGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    team_.ClearNonDefaultToEmptyNoArena();
  }
  reward_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_OceanWinGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.OceanWinGame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string team = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_team()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->team().data(), static_cast<int>(this->team().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgBotWorldState.Action.OceanWinGame.team");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float reward = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_reward();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.OceanWinGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.OceanWinGame)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_OceanWinGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.OceanWinGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string team = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->team().data(), static_cast<int>(this->team().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.OceanWinGame.team");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->team(), output);
  }

  // optional float reward = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->reward(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.OceanWinGame)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_OceanWinGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.OceanWinGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string team = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->team().data(), static_cast<int>(this->team().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgBotWorldState.Action.OceanWinGame.team");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->team(), target);
  }

  // optional float reward = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->reward(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.OceanWinGame)
  return target;
}

size_t CMsgBotWorldState_Action_OceanWinGame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.OceanWinGame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string team = 1;
  if (has_team()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->team());
  }
  // optional float reward = 2;
  if (has_reward()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_OceanWinGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.OceanWinGame)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_OceanWinGame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_OceanWinGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.OceanWinGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.OceanWinGame)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_OceanWinGame::MergeFrom(const CMsgBotWorldState_Action_OceanWinGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.OceanWinGame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_team();
      team_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_);
    }
    if (cached_has_bits & 0x00000002u) {
      reward_ = from.reward_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState_Action_OceanWinGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.OceanWinGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_OceanWinGame::CopyFrom(const CMsgBotWorldState_Action_OceanWinGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.OceanWinGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_OceanWinGame::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMsgBotWorldState_Action_OceanWinGame::Swap(CMsgBotWorldState_Action_OceanWinGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_OceanWinGame::InternalSwap(CMsgBotWorldState_Action_OceanWinGame* other) {
  using std::swap;
  team_.Swap(&other->team_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(reward_, other->reward_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_OceanWinGame::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action_OceanReplayCorrectTime::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action_OceanReplayCorrectTime::kDeltaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action_OceanReplayCorrectTime::CMsgBotWorldState_Action_OceanReplayCorrectTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_OceanReplayCorrectTime.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action.OceanReplayCorrectTime)
}
CMsgBotWorldState_Action_OceanReplayCorrectTime::CMsgBotWorldState_Action_OceanReplayCorrectTime(const CMsgBotWorldState_Action_OceanReplayCorrectTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  delta_ = from.delta_;
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action.OceanReplayCorrectTime)
}

void CMsgBotWorldState_Action_OceanReplayCorrectTime::SharedCtor() {
  delta_ = 0;
}

CMsgBotWorldState_Action_OceanReplayCorrectTime::~CMsgBotWorldState_Action_OceanReplayCorrectTime() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action.OceanReplayCorrectTime)
  SharedDtor();
}

void CMsgBotWorldState_Action_OceanReplayCorrectTime::SharedDtor() {
}

void CMsgBotWorldState_Action_OceanReplayCorrectTime::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action_OceanReplayCorrectTime::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action_OceanReplayCorrectTime& CMsgBotWorldState_Action_OceanReplayCorrectTime::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action_OceanReplayCorrectTime.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action_OceanReplayCorrectTime::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action.OceanReplayCorrectTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delta_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action_OceanReplayCorrectTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action.OceanReplayCorrectTime)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float delta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_delta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action.OceanReplayCorrectTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action.OceanReplayCorrectTime)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action_OceanReplayCorrectTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action.OceanReplayCorrectTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float delta = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->delta(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action.OceanReplayCorrectTime)
}

::google::protobuf::uint8* CMsgBotWorldState_Action_OceanReplayCorrectTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action.OceanReplayCorrectTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float delta = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->delta(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action.OceanReplayCorrectTime)
  return target;
}

size_t CMsgBotWorldState_Action_OceanReplayCorrectTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action.OceanReplayCorrectTime)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required float delta = 1;
  if (has_delta()) {
    total_size += 1 + 4;
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action_OceanReplayCorrectTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action.OceanReplayCorrectTime)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action_OceanReplayCorrectTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action_OceanReplayCorrectTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action.OceanReplayCorrectTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action.OceanReplayCorrectTime)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action_OceanReplayCorrectTime::MergeFrom(const CMsgBotWorldState_Action_OceanReplayCorrectTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action.OceanReplayCorrectTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_delta()) {
    set_delta(from.delta());
  }
}

void CMsgBotWorldState_Action_OceanReplayCorrectTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action.OceanReplayCorrectTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action_OceanReplayCorrectTime::CopyFrom(const CMsgBotWorldState_Action_OceanReplayCorrectTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action.OceanReplayCorrectTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action_OceanReplayCorrectTime::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMsgBotWorldState_Action_OceanReplayCorrectTime::Swap(CMsgBotWorldState_Action_OceanReplayCorrectTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action_OceanReplayCorrectTime::InternalSwap(CMsgBotWorldState_Action_OceanReplayCorrectTime* other) {
  using std::swap;
  swap(delta_, other->delta_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action_OceanReplayCorrectTime::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState_Action::InitAsDefaultInstance() {
  ::_CMsgBotWorldState_Action_default_instance_.movetolocation_ = const_cast< ::CMsgBotWorldState_Action_MoveToLocation*>(
      ::CMsgBotWorldState_Action_MoveToLocation::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.movetotarget_ = const_cast< ::CMsgBotWorldState_Action_MoveToTarget*>(
      ::CMsgBotWorldState_Action_MoveToTarget::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.attackmove_ = const_cast< ::CMsgBotWorldState_Action_AttackMove*>(
      ::CMsgBotWorldState_Action_AttackMove::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.attacktarget_ = const_cast< ::CMsgBotWorldState_Action_AttackTarget*>(
      ::CMsgBotWorldState_Action_AttackTarget::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.castlocation_ = const_cast< ::CMsgBotWorldState_Action_CastLocation*>(
      ::CMsgBotWorldState_Action_CastLocation::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.casttarget_ = const_cast< ::CMsgBotWorldState_Action_CastTarget*>(
      ::CMsgBotWorldState_Action_CastTarget::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.casttree_ = const_cast< ::CMsgBotWorldState_Action_CastTree*>(
      ::CMsgBotWorldState_Action_CastTree::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.cast_ = const_cast< ::CMsgBotWorldState_Action_Cast*>(
      ::CMsgBotWorldState_Action_Cast::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.casttoggle_ = const_cast< ::CMsgBotWorldState_Action_CastToggle*>(
      ::CMsgBotWorldState_Action_CastToggle::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.holdlocation_ = const_cast< ::CMsgBotWorldState_Action_HoldLocation*>(
      ::CMsgBotWorldState_Action_HoldLocation::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.trainability_ = const_cast< ::CMsgBotWorldState_Action_TrainAbility*>(
      ::CMsgBotWorldState_Action_TrainAbility::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.dropitem_ = const_cast< ::CMsgBotWorldState_Action_DropItem*>(
      ::CMsgBotWorldState_Action_DropItem::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.pickupitem_ = const_cast< ::CMsgBotWorldState_Action_PickUpItem*>(
      ::CMsgBotWorldState_Action_PickUpItem::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.pickuprune_ = const_cast< ::CMsgBotWorldState_Action_PickupRune*>(
      ::CMsgBotWorldState_Action_PickupRune::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.purchaseitem_ = const_cast< ::CMsgBotWorldState_Action_PurchaseItem*>(
      ::CMsgBotWorldState_Action_PurchaseItem::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.sellitem_ = const_cast< ::CMsgBotWorldState_Action_SellItem*>(
      ::CMsgBotWorldState_Action_SellItem::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.disassembleitem_ = const_cast< ::CMsgBotWorldState_Action_DisassembleItem*>(
      ::CMsgBotWorldState_Action_DisassembleItem::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.setcombinelockitem_ = const_cast< ::CMsgBotWorldState_Action_SetCombineLockItem*>(
      ::CMsgBotWorldState_Action_SetCombineLockItem::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.stop_ = const_cast< ::CMsgBotWorldState_Action_Stop*>(
      ::CMsgBotWorldState_Action_Stop::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.chat_ = const_cast< ::CMsgBotWorldState_Action_Chat*>(
      ::CMsgBotWorldState_Action_Chat::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.swapitems_ = const_cast< ::CMsgBotWorldState_Action_SwapItems*>(
      ::CMsgBotWorldState_Action_SwapItems::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.useshrine_ = const_cast< ::CMsgBotWorldState_Action_UseShrine*>(
      ::CMsgBotWorldState_Action_UseShrine::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.courier_ = const_cast< ::CMsgBotWorldState_Action_Courier*>(
      ::CMsgBotWorldState_Action_Courier::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.getactualincomingdamage_ = const_cast< ::CMsgBotWorldState_Action_GetActualIncomingDamage*>(
      ::CMsgBotWorldState_Action_GetActualIncomingDamage::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.getestimateddamagetotarget_ = const_cast< ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget*>(
      ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.glyph_ = const_cast< ::CMsgBotWorldState_Action_Glyph*>(
      ::CMsgBotWorldState_Action_Glyph::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.softreset_ = const_cast< ::CMsgBotWorldState_Action_SoftReset*>(
      ::CMsgBotWorldState_Action_SoftReset::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.buyback_ = const_cast< ::CMsgBotWorldState_Action_Buyback*>(
      ::CMsgBotWorldState_Action_Buyback::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.scriptingdebugdrawtext_ = const_cast< ::CMsgBotWorldState_Action_ScriptingDebugDrawText*>(
      ::CMsgBotWorldState_Action_ScriptingDebugDrawText::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.scriptingdebugdrawline_ = const_cast< ::CMsgBotWorldState_Action_ScriptingDebugDrawLine*>(
      ::CMsgBotWorldState_Action_ScriptingDebugDrawLine::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.scriptingdebugdrawscreentext_ = const_cast< ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText*>(
      ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.scriptingdebugdrawbox_ = const_cast< ::CMsgBotWorldState_Action_ScriptingDebugDrawBox*>(
      ::CMsgBotWorldState_Action_ScriptingDebugDrawBox::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.scriptingdebugdrawcircle_ = const_cast< ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle*>(
      ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.scriptingdebugdrawclear_ = const_cast< ::CMsgBotWorldState_Action_ScriptingDebugDrawClear*>(
      ::CMsgBotWorldState_Action_ScriptingDebugDrawClear::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.scriptingdebugscreentextpretty_ = const_cast< ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty*>(
      ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.movedirectly_ = const_cast< ::CMsgBotWorldState_Action_MoveToLocation*>(
      ::CMsgBotWorldState_Action_MoveToLocation::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.oceanwingame_ = const_cast< ::CMsgBotWorldState_Action_OceanWinGame*>(
      ::CMsgBotWorldState_Action_OceanWinGame::internal_default_instance());
  ::_CMsgBotWorldState_Action_default_instance_.oceanreplaycorrecttime_ = const_cast< ::CMsgBotWorldState_Action_OceanReplayCorrectTime*>(
      ::CMsgBotWorldState_Action_OceanReplayCorrectTime::internal_default_instance());
}
void CMsgBotWorldState_Action::set_allocated_movetolocation(::CMsgBotWorldState_Action_MoveToLocation* movetolocation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (movetolocation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      movetolocation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, movetolocation, submessage_arena);
    }
    set_has_movetolocation();
    ActionData_.movetolocation_ = movetolocation;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.moveToLocation)
}
void CMsgBotWorldState_Action::set_allocated_movetotarget(::CMsgBotWorldState_Action_MoveToTarget* movetotarget) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (movetotarget) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      movetotarget = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, movetotarget, submessage_arena);
    }
    set_has_movetotarget();
    ActionData_.movetotarget_ = movetotarget;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.moveToTarget)
}
void CMsgBotWorldState_Action::set_allocated_attackmove(::CMsgBotWorldState_Action_AttackMove* attackmove) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (attackmove) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attackmove = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attackmove, submessage_arena);
    }
    set_has_attackmove();
    ActionData_.attackmove_ = attackmove;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.attackMove)
}
void CMsgBotWorldState_Action::set_allocated_attacktarget(::CMsgBotWorldState_Action_AttackTarget* attacktarget) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (attacktarget) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attacktarget = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attacktarget, submessage_arena);
    }
    set_has_attacktarget();
    ActionData_.attacktarget_ = attacktarget;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.attackTarget)
}
void CMsgBotWorldState_Action::set_allocated_castlocation(::CMsgBotWorldState_Action_CastLocation* castlocation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (castlocation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      castlocation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, castlocation, submessage_arena);
    }
    set_has_castlocation();
    ActionData_.castlocation_ = castlocation;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.castLocation)
}
void CMsgBotWorldState_Action::set_allocated_casttarget(::CMsgBotWorldState_Action_CastTarget* casttarget) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (casttarget) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      casttarget = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, casttarget, submessage_arena);
    }
    set_has_casttarget();
    ActionData_.casttarget_ = casttarget;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.castTarget)
}
void CMsgBotWorldState_Action::set_allocated_casttree(::CMsgBotWorldState_Action_CastTree* casttree) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (casttree) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      casttree = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, casttree, submessage_arena);
    }
    set_has_casttree();
    ActionData_.casttree_ = casttree;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.castTree)
}
void CMsgBotWorldState_Action::set_allocated_cast(::CMsgBotWorldState_Action_Cast* cast) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (cast) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cast = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cast, submessage_arena);
    }
    set_has_cast();
    ActionData_.cast_ = cast;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.cast)
}
void CMsgBotWorldState_Action::set_allocated_casttoggle(::CMsgBotWorldState_Action_CastToggle* casttoggle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (casttoggle) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      casttoggle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, casttoggle, submessage_arena);
    }
    set_has_casttoggle();
    ActionData_.casttoggle_ = casttoggle;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.castToggle)
}
void CMsgBotWorldState_Action::set_allocated_holdlocation(::CMsgBotWorldState_Action_HoldLocation* holdlocation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (holdlocation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      holdlocation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, holdlocation, submessage_arena);
    }
    set_has_holdlocation();
    ActionData_.holdlocation_ = holdlocation;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.holdLocation)
}
void CMsgBotWorldState_Action::set_allocated_trainability(::CMsgBotWorldState_Action_TrainAbility* trainability) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (trainability) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      trainability = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, trainability, submessage_arena);
    }
    set_has_trainability();
    ActionData_.trainability_ = trainability;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.trainAbility)
}
void CMsgBotWorldState_Action::set_allocated_dropitem(::CMsgBotWorldState_Action_DropItem* dropitem) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (dropitem) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dropitem = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dropitem, submessage_arena);
    }
    set_has_dropitem();
    ActionData_.dropitem_ = dropitem;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.dropItem)
}
void CMsgBotWorldState_Action::set_allocated_pickupitem(::CMsgBotWorldState_Action_PickUpItem* pickupitem) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (pickupitem) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pickupitem = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pickupitem, submessage_arena);
    }
    set_has_pickupitem();
    ActionData_.pickupitem_ = pickupitem;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.pickUpItem)
}
void CMsgBotWorldState_Action::set_allocated_pickuprune(::CMsgBotWorldState_Action_PickupRune* pickuprune) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (pickuprune) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pickuprune = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pickuprune, submessage_arena);
    }
    set_has_pickuprune();
    ActionData_.pickuprune_ = pickuprune;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.pickupRune)
}
void CMsgBotWorldState_Action::set_allocated_purchaseitem(::CMsgBotWorldState_Action_PurchaseItem* purchaseitem) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (purchaseitem) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      purchaseitem = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, purchaseitem, submessage_arena);
    }
    set_has_purchaseitem();
    ActionData_.purchaseitem_ = purchaseitem;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.purchaseItem)
}
void CMsgBotWorldState_Action::set_allocated_sellitem(::CMsgBotWorldState_Action_SellItem* sellitem) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (sellitem) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sellitem = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sellitem, submessage_arena);
    }
    set_has_sellitem();
    ActionData_.sellitem_ = sellitem;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.sellItem)
}
void CMsgBotWorldState_Action::set_allocated_disassembleitem(::CMsgBotWorldState_Action_DisassembleItem* disassembleitem) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (disassembleitem) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      disassembleitem = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, disassembleitem, submessage_arena);
    }
    set_has_disassembleitem();
    ActionData_.disassembleitem_ = disassembleitem;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.disassembleItem)
}
void CMsgBotWorldState_Action::set_allocated_setcombinelockitem(::CMsgBotWorldState_Action_SetCombineLockItem* setcombinelockitem) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (setcombinelockitem) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      setcombinelockitem = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, setcombinelockitem, submessage_arena);
    }
    set_has_setcombinelockitem();
    ActionData_.setcombinelockitem_ = setcombinelockitem;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.setCombineLockItem)
}
void CMsgBotWorldState_Action::set_allocated_stop(::CMsgBotWorldState_Action_Stop* stop) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (stop) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stop = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stop, submessage_arena);
    }
    set_has_stop();
    ActionData_.stop_ = stop;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.stop)
}
void CMsgBotWorldState_Action::set_allocated_chat(::CMsgBotWorldState_Action_Chat* chat) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (chat) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      chat = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, chat, submessage_arena);
    }
    set_has_chat();
    ActionData_.chat_ = chat;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.chat)
}
void CMsgBotWorldState_Action::set_allocated_swapitems(::CMsgBotWorldState_Action_SwapItems* swapitems) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (swapitems) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      swapitems = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, swapitems, submessage_arena);
    }
    set_has_swapitems();
    ActionData_.swapitems_ = swapitems;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.swapItems)
}
void CMsgBotWorldState_Action::set_allocated_useshrine(::CMsgBotWorldState_Action_UseShrine* useshrine) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (useshrine) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      useshrine = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, useshrine, submessage_arena);
    }
    set_has_useshrine();
    ActionData_.useshrine_ = useshrine;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.useShrine)
}
void CMsgBotWorldState_Action::set_allocated_courier(::CMsgBotWorldState_Action_Courier* courier) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (courier) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      courier = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, courier, submessage_arena);
    }
    set_has_courier();
    ActionData_.courier_ = courier;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.courier)
}
void CMsgBotWorldState_Action::set_allocated_getactualincomingdamage(::CMsgBotWorldState_Action_GetActualIncomingDamage* getactualincomingdamage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (getactualincomingdamage) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getactualincomingdamage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getactualincomingdamage, submessage_arena);
    }
    set_has_getactualincomingdamage();
    ActionData_.getactualincomingdamage_ = getactualincomingdamage;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.getActualIncomingDamage)
}
void CMsgBotWorldState_Action::set_allocated_getestimateddamagetotarget(::CMsgBotWorldState_Action_GetEstimatedDamageToTarget* getestimateddamagetotarget) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (getestimateddamagetotarget) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getestimateddamagetotarget = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getestimateddamagetotarget, submessage_arena);
    }
    set_has_getestimateddamagetotarget();
    ActionData_.getestimateddamagetotarget_ = getestimateddamagetotarget;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.getEstimatedDamageToTarget)
}
void CMsgBotWorldState_Action::set_allocated_glyph(::CMsgBotWorldState_Action_Glyph* glyph) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (glyph) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      glyph = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, glyph, submessage_arena);
    }
    set_has_glyph();
    ActionData_.glyph_ = glyph;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.glyph)
}
void CMsgBotWorldState_Action::set_allocated_softreset(::CMsgBotWorldState_Action_SoftReset* softreset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (softreset) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      softreset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, softreset, submessage_arena);
    }
    set_has_softreset();
    ActionData_.softreset_ = softreset;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.softReset)
}
void CMsgBotWorldState_Action::set_allocated_buyback(::CMsgBotWorldState_Action_Buyback* buyback) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (buyback) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      buyback = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, buyback, submessage_arena);
    }
    set_has_buyback();
    ActionData_.buyback_ = buyback;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.buyback)
}
void CMsgBotWorldState_Action::set_allocated_scriptingdebugdrawtext(::CMsgBotWorldState_Action_ScriptingDebugDrawText* scriptingdebugdrawtext) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (scriptingdebugdrawtext) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scriptingdebugdrawtext = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scriptingdebugdrawtext, submessage_arena);
    }
    set_has_scriptingdebugdrawtext();
    ActionData_.scriptingdebugdrawtext_ = scriptingdebugdrawtext;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.scriptingDebugDrawText)
}
void CMsgBotWorldState_Action::set_allocated_scriptingdebugdrawline(::CMsgBotWorldState_Action_ScriptingDebugDrawLine* scriptingdebugdrawline) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (scriptingdebugdrawline) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scriptingdebugdrawline = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scriptingdebugdrawline, submessage_arena);
    }
    set_has_scriptingdebugdrawline();
    ActionData_.scriptingdebugdrawline_ = scriptingdebugdrawline;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.scriptingDebugDrawLine)
}
void CMsgBotWorldState_Action::set_allocated_scriptingdebugdrawscreentext(::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* scriptingdebugdrawscreentext) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (scriptingdebugdrawscreentext) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scriptingdebugdrawscreentext = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scriptingdebugdrawscreentext, submessage_arena);
    }
    set_has_scriptingdebugdrawscreentext();
    ActionData_.scriptingdebugdrawscreentext_ = scriptingdebugdrawscreentext;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.scriptingDebugDrawScreenText)
}
void CMsgBotWorldState_Action::set_allocated_scriptingdebugdrawbox(::CMsgBotWorldState_Action_ScriptingDebugDrawBox* scriptingdebugdrawbox) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (scriptingdebugdrawbox) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scriptingdebugdrawbox = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scriptingdebugdrawbox, submessage_arena);
    }
    set_has_scriptingdebugdrawbox();
    ActionData_.scriptingdebugdrawbox_ = scriptingdebugdrawbox;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.scriptingDebugDrawBox)
}
void CMsgBotWorldState_Action::set_allocated_scriptingdebugdrawcircle(::CMsgBotWorldState_Action_ScriptingDebugDrawCircle* scriptingdebugdrawcircle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (scriptingdebugdrawcircle) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scriptingdebugdrawcircle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scriptingdebugdrawcircle, submessage_arena);
    }
    set_has_scriptingdebugdrawcircle();
    ActionData_.scriptingdebugdrawcircle_ = scriptingdebugdrawcircle;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.scriptingDebugDrawCircle)
}
void CMsgBotWorldState_Action::set_allocated_scriptingdebugdrawclear(::CMsgBotWorldState_Action_ScriptingDebugDrawClear* scriptingdebugdrawclear) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (scriptingdebugdrawclear) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scriptingdebugdrawclear = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scriptingdebugdrawclear, submessage_arena);
    }
    set_has_scriptingdebugdrawclear();
    ActionData_.scriptingdebugdrawclear_ = scriptingdebugdrawclear;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.scriptingDebugDrawClear)
}
void CMsgBotWorldState_Action::set_allocated_scriptingdebugscreentextpretty(::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* scriptingdebugscreentextpretty) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (scriptingdebugscreentextpretty) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scriptingdebugscreentextpretty = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scriptingdebugscreentextpretty, submessage_arena);
    }
    set_has_scriptingdebugscreentextpretty();
    ActionData_.scriptingdebugscreentextpretty_ = scriptingdebugscreentextpretty;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.scriptingDebugScreenTextPretty)
}
void CMsgBotWorldState_Action::set_allocated_movedirectly(::CMsgBotWorldState_Action_MoveToLocation* movedirectly) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (movedirectly) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      movedirectly = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, movedirectly, submessage_arena);
    }
    set_has_movedirectly();
    ActionData_.movedirectly_ = movedirectly;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.moveDirectly)
}
void CMsgBotWorldState_Action::set_allocated_oceanwingame(::CMsgBotWorldState_Action_OceanWinGame* oceanwingame) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (oceanwingame) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      oceanwingame = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, oceanwingame, submessage_arena);
    }
    set_has_oceanwingame();
    ActionData_.oceanwingame_ = oceanwingame;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.oceanWinGame)
}
void CMsgBotWorldState_Action::set_allocated_oceanreplaycorrecttime(::CMsgBotWorldState_Action_OceanReplayCorrectTime* oceanreplaycorrecttime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ActionData();
  if (oceanreplaycorrecttime) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      oceanreplaycorrecttime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, oceanreplaycorrecttime, submessage_arena);
    }
    set_has_oceanreplaycorrecttime();
    ActionData_.oceanreplaycorrecttime_ = oceanreplaycorrecttime;
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.oceanReplayCorrectTime)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState_Action::kActionTypeFieldNumber;
const int CMsgBotWorldState_Action::kPlayerFieldNumber;
const int CMsgBotWorldState_Action::kActionIDFieldNumber;
const int CMsgBotWorldState_Action::kActionDelayFieldNumber;
const int CMsgBotWorldState_Action::kMoveToLocationFieldNumber;
const int CMsgBotWorldState_Action::kMoveToTargetFieldNumber;
const int CMsgBotWorldState_Action::kAttackMoveFieldNumber;
const int CMsgBotWorldState_Action::kAttackTargetFieldNumber;
const int CMsgBotWorldState_Action::kCastLocationFieldNumber;
const int CMsgBotWorldState_Action::kCastTargetFieldNumber;
const int CMsgBotWorldState_Action::kCastTreeFieldNumber;
const int CMsgBotWorldState_Action::kCastFieldNumber;
const int CMsgBotWorldState_Action::kCastToggleFieldNumber;
const int CMsgBotWorldState_Action::kHoldLocationFieldNumber;
const int CMsgBotWorldState_Action::kTrainAbilityFieldNumber;
const int CMsgBotWorldState_Action::kDropItemFieldNumber;
const int CMsgBotWorldState_Action::kPickUpItemFieldNumber;
const int CMsgBotWorldState_Action::kPickupRuneFieldNumber;
const int CMsgBotWorldState_Action::kPurchaseItemFieldNumber;
const int CMsgBotWorldState_Action::kSellItemFieldNumber;
const int CMsgBotWorldState_Action::kDisassembleItemFieldNumber;
const int CMsgBotWorldState_Action::kSetCombineLockItemFieldNumber;
const int CMsgBotWorldState_Action::kStopFieldNumber;
const int CMsgBotWorldState_Action::kChatFieldNumber;
const int CMsgBotWorldState_Action::kSwapItemsFieldNumber;
const int CMsgBotWorldState_Action::kUseShrineFieldNumber;
const int CMsgBotWorldState_Action::kCourierFieldNumber;
const int CMsgBotWorldState_Action::kGetActualIncomingDamageFieldNumber;
const int CMsgBotWorldState_Action::kGetEstimatedDamageToTargetFieldNumber;
const int CMsgBotWorldState_Action::kGlyphFieldNumber;
const int CMsgBotWorldState_Action::kSoftResetFieldNumber;
const int CMsgBotWorldState_Action::kBuybackFieldNumber;
const int CMsgBotWorldState_Action::kScriptingDebugDrawTextFieldNumber;
const int CMsgBotWorldState_Action::kScriptingDebugDrawLineFieldNumber;
const int CMsgBotWorldState_Action::kScriptingDebugDrawScreenTextFieldNumber;
const int CMsgBotWorldState_Action::kScriptingDebugDrawBoxFieldNumber;
const int CMsgBotWorldState_Action::kScriptingDebugDrawCircleFieldNumber;
const int CMsgBotWorldState_Action::kScriptingDebugDrawClearFieldNumber;
const int CMsgBotWorldState_Action::kScriptingDebugScreenTextPrettyFieldNumber;
const int CMsgBotWorldState_Action::kMoveDirectlyFieldNumber;
const int CMsgBotWorldState_Action::kOceanWinGameFieldNumber;
const int CMsgBotWorldState_Action::kOceanReplayCorrectTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState_Action::CMsgBotWorldState_Action()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState.Action)
}
CMsgBotWorldState_Action::CMsgBotWorldState_Action(const CMsgBotWorldState_Action& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&actiontype_, &from.actiontype_,
    static_cast<size_t>(reinterpret_cast<char*>(&actionid_) -
    reinterpret_cast<char*>(&actiontype_)) + sizeof(actionid_));
  clear_has_ActionData();
  switch (from.ActionData_case()) {
    case kMoveToLocation: {
      mutable_movetolocation()->::CMsgBotWorldState_Action_MoveToLocation::MergeFrom(from.movetolocation());
      break;
    }
    case kMoveToTarget: {
      mutable_movetotarget()->::CMsgBotWorldState_Action_MoveToTarget::MergeFrom(from.movetotarget());
      break;
    }
    case kAttackMove: {
      mutable_attackmove()->::CMsgBotWorldState_Action_AttackMove::MergeFrom(from.attackmove());
      break;
    }
    case kAttackTarget: {
      mutable_attacktarget()->::CMsgBotWorldState_Action_AttackTarget::MergeFrom(from.attacktarget());
      break;
    }
    case kCastLocation: {
      mutable_castlocation()->::CMsgBotWorldState_Action_CastLocation::MergeFrom(from.castlocation());
      break;
    }
    case kCastTarget: {
      mutable_casttarget()->::CMsgBotWorldState_Action_CastTarget::MergeFrom(from.casttarget());
      break;
    }
    case kCastTree: {
      mutable_casttree()->::CMsgBotWorldState_Action_CastTree::MergeFrom(from.casttree());
      break;
    }
    case kCast: {
      mutable_cast()->::CMsgBotWorldState_Action_Cast::MergeFrom(from.cast());
      break;
    }
    case kCastToggle: {
      mutable_casttoggle()->::CMsgBotWorldState_Action_CastToggle::MergeFrom(from.casttoggle());
      break;
    }
    case kHoldLocation: {
      mutable_holdlocation()->::CMsgBotWorldState_Action_HoldLocation::MergeFrom(from.holdlocation());
      break;
    }
    case kTrainAbility: {
      mutable_trainability()->::CMsgBotWorldState_Action_TrainAbility::MergeFrom(from.trainability());
      break;
    }
    case kDropItem: {
      mutable_dropitem()->::CMsgBotWorldState_Action_DropItem::MergeFrom(from.dropitem());
      break;
    }
    case kPickUpItem: {
      mutable_pickupitem()->::CMsgBotWorldState_Action_PickUpItem::MergeFrom(from.pickupitem());
      break;
    }
    case kPickupRune: {
      mutable_pickuprune()->::CMsgBotWorldState_Action_PickupRune::MergeFrom(from.pickuprune());
      break;
    }
    case kPurchaseItem: {
      mutable_purchaseitem()->::CMsgBotWorldState_Action_PurchaseItem::MergeFrom(from.purchaseitem());
      break;
    }
    case kSellItem: {
      mutable_sellitem()->::CMsgBotWorldState_Action_SellItem::MergeFrom(from.sellitem());
      break;
    }
    case kDisassembleItem: {
      mutable_disassembleitem()->::CMsgBotWorldState_Action_DisassembleItem::MergeFrom(from.disassembleitem());
      break;
    }
    case kSetCombineLockItem: {
      mutable_setcombinelockitem()->::CMsgBotWorldState_Action_SetCombineLockItem::MergeFrom(from.setcombinelockitem());
      break;
    }
    case kStop: {
      mutable_stop()->::CMsgBotWorldState_Action_Stop::MergeFrom(from.stop());
      break;
    }
    case kChat: {
      mutable_chat()->::CMsgBotWorldState_Action_Chat::MergeFrom(from.chat());
      break;
    }
    case kSwapItems: {
      mutable_swapitems()->::CMsgBotWorldState_Action_SwapItems::MergeFrom(from.swapitems());
      break;
    }
    case kUseShrine: {
      mutable_useshrine()->::CMsgBotWorldState_Action_UseShrine::MergeFrom(from.useshrine());
      break;
    }
    case kCourier: {
      mutable_courier()->::CMsgBotWorldState_Action_Courier::MergeFrom(from.courier());
      break;
    }
    case kGetActualIncomingDamage: {
      mutable_getactualincomingdamage()->::CMsgBotWorldState_Action_GetActualIncomingDamage::MergeFrom(from.getactualincomingdamage());
      break;
    }
    case kGetEstimatedDamageToTarget: {
      mutable_getestimateddamagetotarget()->::CMsgBotWorldState_Action_GetEstimatedDamageToTarget::MergeFrom(from.getestimateddamagetotarget());
      break;
    }
    case kGlyph: {
      mutable_glyph()->::CMsgBotWorldState_Action_Glyph::MergeFrom(from.glyph());
      break;
    }
    case kSoftReset: {
      mutable_softreset()->::CMsgBotWorldState_Action_SoftReset::MergeFrom(from.softreset());
      break;
    }
    case kBuyback: {
      mutable_buyback()->::CMsgBotWorldState_Action_Buyback::MergeFrom(from.buyback());
      break;
    }
    case kScriptingDebugDrawText: {
      mutable_scriptingdebugdrawtext()->::CMsgBotWorldState_Action_ScriptingDebugDrawText::MergeFrom(from.scriptingdebugdrawtext());
      break;
    }
    case kScriptingDebugDrawLine: {
      mutable_scriptingdebugdrawline()->::CMsgBotWorldState_Action_ScriptingDebugDrawLine::MergeFrom(from.scriptingdebugdrawline());
      break;
    }
    case kScriptingDebugDrawScreenText: {
      mutable_scriptingdebugdrawscreentext()->::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::MergeFrom(from.scriptingdebugdrawscreentext());
      break;
    }
    case kScriptingDebugDrawBox: {
      mutable_scriptingdebugdrawbox()->::CMsgBotWorldState_Action_ScriptingDebugDrawBox::MergeFrom(from.scriptingdebugdrawbox());
      break;
    }
    case kScriptingDebugDrawCircle: {
      mutable_scriptingdebugdrawcircle()->::CMsgBotWorldState_Action_ScriptingDebugDrawCircle::MergeFrom(from.scriptingdebugdrawcircle());
      break;
    }
    case kScriptingDebugDrawClear: {
      mutable_scriptingdebugdrawclear()->::CMsgBotWorldState_Action_ScriptingDebugDrawClear::MergeFrom(from.scriptingdebugdrawclear());
      break;
    }
    case kScriptingDebugScreenTextPretty: {
      mutable_scriptingdebugscreentextpretty()->::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::MergeFrom(from.scriptingdebugscreentextpretty());
      break;
    }
    case kMoveDirectly: {
      mutable_movedirectly()->::CMsgBotWorldState_Action_MoveToLocation::MergeFrom(from.movedirectly());
      break;
    }
    case kOceanWinGame: {
      mutable_oceanwingame()->::CMsgBotWorldState_Action_OceanWinGame::MergeFrom(from.oceanwingame());
      break;
    }
    case kOceanReplayCorrectTime: {
      mutable_oceanreplaycorrecttime()->::CMsgBotWorldState_Action_OceanReplayCorrectTime::MergeFrom(from.oceanreplaycorrecttime());
      break;
    }
    case ACTIONDATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState.Action)
}

void CMsgBotWorldState_Action::SharedCtor() {
  ::memset(&actiontype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&actiondelay_) -
      reinterpret_cast<char*>(&actiontype_)) + sizeof(actiondelay_));
  player_ = -1;
  actionid_ = -1;
  clear_has_ActionData();
}

CMsgBotWorldState_Action::~CMsgBotWorldState_Action() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState.Action)
  SharedDtor();
}

void CMsgBotWorldState_Action::SharedDtor() {
  if (has_ActionData()) {
    clear_ActionData();
  }
}

void CMsgBotWorldState_Action::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState_Action::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState_Action& CMsgBotWorldState_Action::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState_Action.base);
  return *internal_default_instance();
}


void CMsgBotWorldState_Action::clear_ActionData() {
// @@protoc_insertion_point(one_of_clear_start:CMsgBotWorldState.Action)
  switch (ActionData_case()) {
    case kMoveToLocation: {
      delete ActionData_.movetolocation_;
      break;
    }
    case kMoveToTarget: {
      delete ActionData_.movetotarget_;
      break;
    }
    case kAttackMove: {
      delete ActionData_.attackmove_;
      break;
    }
    case kAttackTarget: {
      delete ActionData_.attacktarget_;
      break;
    }
    case kCastLocation: {
      delete ActionData_.castlocation_;
      break;
    }
    case kCastTarget: {
      delete ActionData_.casttarget_;
      break;
    }
    case kCastTree: {
      delete ActionData_.casttree_;
      break;
    }
    case kCast: {
      delete ActionData_.cast_;
      break;
    }
    case kCastToggle: {
      delete ActionData_.casttoggle_;
      break;
    }
    case kHoldLocation: {
      delete ActionData_.holdlocation_;
      break;
    }
    case kTrainAbility: {
      delete ActionData_.trainability_;
      break;
    }
    case kDropItem: {
      delete ActionData_.dropitem_;
      break;
    }
    case kPickUpItem: {
      delete ActionData_.pickupitem_;
      break;
    }
    case kPickupRune: {
      delete ActionData_.pickuprune_;
      break;
    }
    case kPurchaseItem: {
      delete ActionData_.purchaseitem_;
      break;
    }
    case kSellItem: {
      delete ActionData_.sellitem_;
      break;
    }
    case kDisassembleItem: {
      delete ActionData_.disassembleitem_;
      break;
    }
    case kSetCombineLockItem: {
      delete ActionData_.setcombinelockitem_;
      break;
    }
    case kStop: {
      delete ActionData_.stop_;
      break;
    }
    case kChat: {
      delete ActionData_.chat_;
      break;
    }
    case kSwapItems: {
      delete ActionData_.swapitems_;
      break;
    }
    case kUseShrine: {
      delete ActionData_.useshrine_;
      break;
    }
    case kCourier: {
      delete ActionData_.courier_;
      break;
    }
    case kGetActualIncomingDamage: {
      delete ActionData_.getactualincomingdamage_;
      break;
    }
    case kGetEstimatedDamageToTarget: {
      delete ActionData_.getestimateddamagetotarget_;
      break;
    }
    case kGlyph: {
      delete ActionData_.glyph_;
      break;
    }
    case kSoftReset: {
      delete ActionData_.softreset_;
      break;
    }
    case kBuyback: {
      delete ActionData_.buyback_;
      break;
    }
    case kScriptingDebugDrawText: {
      delete ActionData_.scriptingdebugdrawtext_;
      break;
    }
    case kScriptingDebugDrawLine: {
      delete ActionData_.scriptingdebugdrawline_;
      break;
    }
    case kScriptingDebugDrawScreenText: {
      delete ActionData_.scriptingdebugdrawscreentext_;
      break;
    }
    case kScriptingDebugDrawBox: {
      delete ActionData_.scriptingdebugdrawbox_;
      break;
    }
    case kScriptingDebugDrawCircle: {
      delete ActionData_.scriptingdebugdrawcircle_;
      break;
    }
    case kScriptingDebugDrawClear: {
      delete ActionData_.scriptingdebugdrawclear_;
      break;
    }
    case kScriptingDebugScreenTextPretty: {
      delete ActionData_.scriptingdebugscreentextpretty_;
      break;
    }
    case kMoveDirectly: {
      delete ActionData_.movedirectly_;
      break;
    }
    case kOceanWinGame: {
      delete ActionData_.oceanwingame_;
      break;
    }
    case kOceanReplayCorrectTime: {
      delete ActionData_.oceanreplaycorrecttime_;
      break;
    }
    case ACTIONDATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ACTIONDATA_NOT_SET;
}


void CMsgBotWorldState_Action::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&actiontype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&actiondelay_) -
        reinterpret_cast<char*>(&actiontype_)) + sizeof(actiondelay_));
    player_ = -1;
    actionid_ = -1;
  }
  clear_ActionData();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState_Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState.Action)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CMsgBotWorldState.Action.Type actionType = 1 [default = DOTA_UNIT_ORDER_NONE];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgBotWorldState_Action_Type_IsValid(value)) {
            set_actiontype(static_cast< ::CMsgBotWorldState_Action_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 player = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_player();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 actionID = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_actionid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 actionDelay = 10 [default = 0];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_actiondelay();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actiondelay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.MoveToLocation moveToLocation = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_movetolocation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.MoveToTarget moveToTarget = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_movetotarget()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.AttackMove attackMove = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attackmove()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.AttackTarget attackTarget = 104;
      case 104: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 834 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attacktarget()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.CastLocation castLocation = 105;
      case 105: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 842 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_castlocation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.CastTarget castTarget = 106;
      case 106: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 850 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_casttarget()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.CastTree castTree = 107;
      case 107: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 858 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_casttree()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.Cast cast = 108;
      case 108: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 866 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cast()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.CastToggle castToggle = 109;
      case 109: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 874 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_casttoggle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.HoldLocation holdLocation = 110;
      case 110: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 882 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_holdlocation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.TrainAbility trainAbility = 111;
      case 111: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 890 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_trainability()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.DropItem dropItem = 112;
      case 112: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 898 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dropitem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.PickUpItem pickUpItem = 114;
      case 114: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pickupitem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.PickupRune pickupRune = 115;
      case 115: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 922 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pickuprune()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.PurchaseItem purchaseItem = 116;
      case 116: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 930 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_purchaseitem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.SellItem sellItem = 117;
      case 117: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 938 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sellitem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.DisassembleItem disassembleItem = 118;
      case 118: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 946 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_disassembleitem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.Stop stop = 121;
      case 121: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 970 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.SetCombineLockItem setCombineLockItem = 132;
      case 132: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 1058 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_setcombinelockitem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.Chat chat = 140;
      case 140: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 1122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_chat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.SwapItems swapItems = 141;
      case 141: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 1130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_swapitems()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.UseShrine useShrine = 142;
      case 142: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 1138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_useshrine()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.Courier courier = 143;
      case 143: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 1146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_courier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.GetActualIncomingDamage getActualIncomingDamage = 144;
      case 144: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 1154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getactualincomingdamage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.GetEstimatedDamageToTarget getEstimatedDamageToTarget = 145;
      case 145: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 1162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getestimateddamagetotarget()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.Glyph glyph = 146;
      case 146: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 1170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_glyph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.SoftReset softReset = 148;
      case 148: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 1186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_softreset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.Buyback buyback = 149;
      case 149: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 1194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_buyback()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.ScriptingDebugDrawText scriptingDebugDrawText = 150;
      case 150: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 1202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scriptingdebugdrawtext()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.ScriptingDebugDrawLine scriptingDebugDrawLine = 151;
      case 151: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 1210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scriptingdebugdrawline()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.ScriptingDebugDrawScreenText scriptingDebugDrawScreenText = 152;
      case 152: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 1218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scriptingdebugdrawscreentext()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.ScriptingDebugDrawBox scriptingDebugDrawBox = 153;
      case 153: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 1226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scriptingdebugdrawbox()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.ScriptingDebugDrawCircle scriptingDebugDrawCircle = 154;
      case 154: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 1234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scriptingdebugdrawcircle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.ScriptingDebugDrawClear scriptingDebugDrawClear = 155;
      case 155: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 1242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scriptingdebugdrawclear()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.MoveToLocation moveDirectly = 156;
      case 156: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 1250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_movedirectly()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.OceanWinGame oceanWinGame = 157;
      case 157: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 1258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_oceanwingame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.OceanReplayCorrectTime oceanReplayCorrectTime = 158;
      case 158: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 1266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_oceanreplaycorrecttime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty scriptingDebugScreenTextPretty = 159;
      case 159: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 1274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scriptingdebugscreentextpretty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState.Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState.Action)
  return false;
#undef DO_
}

void CMsgBotWorldState_Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CMsgBotWorldState.Action.Type actionType = 1 [default = DOTA_UNIT_ORDER_NONE];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->actiontype(), output);
  }

  // optional int32 player = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->player(), output);
  }

  // optional int32 actionID = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->actionid(), output);
  }

  // optional int32 actionDelay = 10 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->actiondelay(), output);
  }

  switch (ActionData_case()) {
    case kMoveToLocation:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        101, this->_internal_movetolocation(), output);
      break;
    case kMoveToTarget:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        102, this->_internal_movetotarget(), output);
      break;
    case kAttackMove:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        103, this->_internal_attackmove(), output);
      break;
    case kAttackTarget:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        104, this->_internal_attacktarget(), output);
      break;
    case kCastLocation:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        105, this->_internal_castlocation(), output);
      break;
    case kCastTarget:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        106, this->_internal_casttarget(), output);
      break;
    case kCastTree:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        107, this->_internal_casttree(), output);
      break;
    case kCast:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        108, this->_internal_cast(), output);
      break;
    case kCastToggle:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        109, this->_internal_casttoggle(), output);
      break;
    case kHoldLocation:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        110, this->_internal_holdlocation(), output);
      break;
    case kTrainAbility:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        111, this->_internal_trainability(), output);
      break;
    case kDropItem:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        112, this->_internal_dropitem(), output);
      break;
    case kPickUpItem:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        114, this->_internal_pickupitem(), output);
      break;
    case kPickupRune:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        115, this->_internal_pickuprune(), output);
      break;
    case kPurchaseItem:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        116, this->_internal_purchaseitem(), output);
      break;
    case kSellItem:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        117, this->_internal_sellitem(), output);
      break;
    case kDisassembleItem:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        118, this->_internal_disassembleitem(), output);
      break;
    case kStop:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        121, this->_internal_stop(), output);
      break;
    case kSetCombineLockItem:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        132, this->_internal_setcombinelockitem(), output);
      break;
    case kChat:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        140, this->_internal_chat(), output);
      break;
    case kSwapItems:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        141, this->_internal_swapitems(), output);
      break;
    case kUseShrine:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        142, this->_internal_useshrine(), output);
      break;
    case kCourier:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        143, this->_internal_courier(), output);
      break;
    case kGetActualIncomingDamage:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        144, this->_internal_getactualincomingdamage(), output);
      break;
    case kGetEstimatedDamageToTarget:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        145, this->_internal_getestimateddamagetotarget(), output);
      break;
    case kGlyph:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        146, this->_internal_glyph(), output);
      break;
    case kSoftReset:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        148, this->_internal_softreset(), output);
      break;
    case kBuyback:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        149, this->_internal_buyback(), output);
      break;
    case kScriptingDebugDrawText:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        150, this->_internal_scriptingdebugdrawtext(), output);
      break;
    case kScriptingDebugDrawLine:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        151, this->_internal_scriptingdebugdrawline(), output);
      break;
    case kScriptingDebugDrawScreenText:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        152, this->_internal_scriptingdebugdrawscreentext(), output);
      break;
    case kScriptingDebugDrawBox:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        153, this->_internal_scriptingdebugdrawbox(), output);
      break;
    case kScriptingDebugDrawCircle:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        154, this->_internal_scriptingdebugdrawcircle(), output);
      break;
    case kScriptingDebugDrawClear:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        155, this->_internal_scriptingdebugdrawclear(), output);
      break;
    case kMoveDirectly:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        156, this->_internal_movedirectly(), output);
      break;
    case kOceanWinGame:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        157, this->_internal_oceanwingame(), output);
      break;
    case kOceanReplayCorrectTime:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        158, this->_internal_oceanreplaycorrecttime(), output);
      break;
    case kScriptingDebugScreenTextPretty:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        159, this->_internal_scriptingdebugscreentextpretty(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState.Action)
}

::google::protobuf::uint8* CMsgBotWorldState_Action::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CMsgBotWorldState.Action.Type actionType = 1 [default = DOTA_UNIT_ORDER_NONE];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->actiontype(), target);
  }

  // optional int32 player = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->player(), target);
  }

  // optional int32 actionID = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->actionid(), target);
  }

  // optional int32 actionDelay = 10 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->actiondelay(), target);
  }

  switch (ActionData_case()) {
    case kMoveToLocation:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          101, this->_internal_movetolocation(), deterministic, target);
      break;
    case kMoveToTarget:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          102, this->_internal_movetotarget(), deterministic, target);
      break;
    case kAttackMove:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          103, this->_internal_attackmove(), deterministic, target);
      break;
    case kAttackTarget:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          104, this->_internal_attacktarget(), deterministic, target);
      break;
    case kCastLocation:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          105, this->_internal_castlocation(), deterministic, target);
      break;
    case kCastTarget:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          106, this->_internal_casttarget(), deterministic, target);
      break;
    case kCastTree:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          107, this->_internal_casttree(), deterministic, target);
      break;
    case kCast:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          108, this->_internal_cast(), deterministic, target);
      break;
    case kCastToggle:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          109, this->_internal_casttoggle(), deterministic, target);
      break;
    case kHoldLocation:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          110, this->_internal_holdlocation(), deterministic, target);
      break;
    case kTrainAbility:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          111, this->_internal_trainability(), deterministic, target);
      break;
    case kDropItem:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          112, this->_internal_dropitem(), deterministic, target);
      break;
    case kPickUpItem:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          114, this->_internal_pickupitem(), deterministic, target);
      break;
    case kPickupRune:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          115, this->_internal_pickuprune(), deterministic, target);
      break;
    case kPurchaseItem:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          116, this->_internal_purchaseitem(), deterministic, target);
      break;
    case kSellItem:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          117, this->_internal_sellitem(), deterministic, target);
      break;
    case kDisassembleItem:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          118, this->_internal_disassembleitem(), deterministic, target);
      break;
    case kStop:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          121, this->_internal_stop(), deterministic, target);
      break;
    case kSetCombineLockItem:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          132, this->_internal_setcombinelockitem(), deterministic, target);
      break;
    case kChat:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          140, this->_internal_chat(), deterministic, target);
      break;
    case kSwapItems:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          141, this->_internal_swapitems(), deterministic, target);
      break;
    case kUseShrine:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          142, this->_internal_useshrine(), deterministic, target);
      break;
    case kCourier:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          143, this->_internal_courier(), deterministic, target);
      break;
    case kGetActualIncomingDamage:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          144, this->_internal_getactualincomingdamage(), deterministic, target);
      break;
    case kGetEstimatedDamageToTarget:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          145, this->_internal_getestimateddamagetotarget(), deterministic, target);
      break;
    case kGlyph:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          146, this->_internal_glyph(), deterministic, target);
      break;
    case kSoftReset:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          148, this->_internal_softreset(), deterministic, target);
      break;
    case kBuyback:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          149, this->_internal_buyback(), deterministic, target);
      break;
    case kScriptingDebugDrawText:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          150, this->_internal_scriptingdebugdrawtext(), deterministic, target);
      break;
    case kScriptingDebugDrawLine:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          151, this->_internal_scriptingdebugdrawline(), deterministic, target);
      break;
    case kScriptingDebugDrawScreenText:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          152, this->_internal_scriptingdebugdrawscreentext(), deterministic, target);
      break;
    case kScriptingDebugDrawBox:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          153, this->_internal_scriptingdebugdrawbox(), deterministic, target);
      break;
    case kScriptingDebugDrawCircle:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          154, this->_internal_scriptingdebugdrawcircle(), deterministic, target);
      break;
    case kScriptingDebugDrawClear:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          155, this->_internal_scriptingdebugdrawclear(), deterministic, target);
      break;
    case kMoveDirectly:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          156, this->_internal_movedirectly(), deterministic, target);
      break;
    case kOceanWinGame:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          157, this->_internal_oceanwingame(), deterministic, target);
      break;
    case kOceanReplayCorrectTime:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          158, this->_internal_oceanreplaycorrecttime(), deterministic, target);
      break;
    case kScriptingDebugScreenTextPretty:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          159, this->_internal_scriptingdebugscreentextpretty(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState.Action)
  return target;
}

size_t CMsgBotWorldState_Action::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState.Action)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .CMsgBotWorldState.Action.Type actionType = 1 [default = DOTA_UNIT_ORDER_NONE];
  if (has_actiontype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->actiontype());
  }
  if (_has_bits_[0 / 32] & 14u) {
    // optional int32 actionDelay = 10 [default = 0];
    if (has_actiondelay()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->actiondelay());
    }

    // optional int32 player = 2 [default = -1];
    if (has_player()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player());
    }

    // optional int32 actionID = 4 [default = -1];
    if (has_actionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->actionid());
    }

  }
  switch (ActionData_case()) {
    // optional .CMsgBotWorldState.Action.MoveToLocation moveToLocation = 101;
    case kMoveToLocation: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.movetolocation_);
      break;
    }
    // optional .CMsgBotWorldState.Action.MoveToTarget moveToTarget = 102;
    case kMoveToTarget: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.movetotarget_);
      break;
    }
    // optional .CMsgBotWorldState.Action.AttackMove attackMove = 103;
    case kAttackMove: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.attackmove_);
      break;
    }
    // optional .CMsgBotWorldState.Action.AttackTarget attackTarget = 104;
    case kAttackTarget: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.attacktarget_);
      break;
    }
    // optional .CMsgBotWorldState.Action.CastLocation castLocation = 105;
    case kCastLocation: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.castlocation_);
      break;
    }
    // optional .CMsgBotWorldState.Action.CastTarget castTarget = 106;
    case kCastTarget: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.casttarget_);
      break;
    }
    // optional .CMsgBotWorldState.Action.CastTree castTree = 107;
    case kCastTree: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.casttree_);
      break;
    }
    // optional .CMsgBotWorldState.Action.Cast cast = 108;
    case kCast: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.cast_);
      break;
    }
    // optional .CMsgBotWorldState.Action.CastToggle castToggle = 109;
    case kCastToggle: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.casttoggle_);
      break;
    }
    // optional .CMsgBotWorldState.Action.HoldLocation holdLocation = 110;
    case kHoldLocation: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.holdlocation_);
      break;
    }
    // optional .CMsgBotWorldState.Action.TrainAbility trainAbility = 111;
    case kTrainAbility: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.trainability_);
      break;
    }
    // optional .CMsgBotWorldState.Action.DropItem dropItem = 112;
    case kDropItem: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.dropitem_);
      break;
    }
    // optional .CMsgBotWorldState.Action.PickUpItem pickUpItem = 114;
    case kPickUpItem: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.pickupitem_);
      break;
    }
    // optional .CMsgBotWorldState.Action.PickupRune pickupRune = 115;
    case kPickupRune: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.pickuprune_);
      break;
    }
    // optional .CMsgBotWorldState.Action.PurchaseItem purchaseItem = 116;
    case kPurchaseItem: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.purchaseitem_);
      break;
    }
    // optional .CMsgBotWorldState.Action.SellItem sellItem = 117;
    case kSellItem: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.sellitem_);
      break;
    }
    // optional .CMsgBotWorldState.Action.DisassembleItem disassembleItem = 118;
    case kDisassembleItem: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.disassembleitem_);
      break;
    }
    // optional .CMsgBotWorldState.Action.SetCombineLockItem setCombineLockItem = 132;
    case kSetCombineLockItem: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.setcombinelockitem_);
      break;
    }
    // optional .CMsgBotWorldState.Action.Stop stop = 121;
    case kStop: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.stop_);
      break;
    }
    // optional .CMsgBotWorldState.Action.Chat chat = 140;
    case kChat: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.chat_);
      break;
    }
    // optional .CMsgBotWorldState.Action.SwapItems swapItems = 141;
    case kSwapItems: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.swapitems_);
      break;
    }
    // optional .CMsgBotWorldState.Action.UseShrine useShrine = 142;
    case kUseShrine: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.useshrine_);
      break;
    }
    // optional .CMsgBotWorldState.Action.Courier courier = 143;
    case kCourier: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.courier_);
      break;
    }
    // optional .CMsgBotWorldState.Action.GetActualIncomingDamage getActualIncomingDamage = 144;
    case kGetActualIncomingDamage: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.getactualincomingdamage_);
      break;
    }
    // optional .CMsgBotWorldState.Action.GetEstimatedDamageToTarget getEstimatedDamageToTarget = 145;
    case kGetEstimatedDamageToTarget: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.getestimateddamagetotarget_);
      break;
    }
    // optional .CMsgBotWorldState.Action.Glyph glyph = 146;
    case kGlyph: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.glyph_);
      break;
    }
    // optional .CMsgBotWorldState.Action.SoftReset softReset = 148;
    case kSoftReset: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.softreset_);
      break;
    }
    // optional .CMsgBotWorldState.Action.Buyback buyback = 149;
    case kBuyback: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.buyback_);
      break;
    }
    // optional .CMsgBotWorldState.Action.ScriptingDebugDrawText scriptingDebugDrawText = 150;
    case kScriptingDebugDrawText: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.scriptingdebugdrawtext_);
      break;
    }
    // optional .CMsgBotWorldState.Action.ScriptingDebugDrawLine scriptingDebugDrawLine = 151;
    case kScriptingDebugDrawLine: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.scriptingdebugdrawline_);
      break;
    }
    // optional .CMsgBotWorldState.Action.ScriptingDebugDrawScreenText scriptingDebugDrawScreenText = 152;
    case kScriptingDebugDrawScreenText: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.scriptingdebugdrawscreentext_);
      break;
    }
    // optional .CMsgBotWorldState.Action.ScriptingDebugDrawBox scriptingDebugDrawBox = 153;
    case kScriptingDebugDrawBox: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.scriptingdebugdrawbox_);
      break;
    }
    // optional .CMsgBotWorldState.Action.ScriptingDebugDrawCircle scriptingDebugDrawCircle = 154;
    case kScriptingDebugDrawCircle: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.scriptingdebugdrawcircle_);
      break;
    }
    // optional .CMsgBotWorldState.Action.ScriptingDebugDrawClear scriptingDebugDrawClear = 155;
    case kScriptingDebugDrawClear: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.scriptingdebugdrawclear_);
      break;
    }
    // optional .CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty scriptingDebugScreenTextPretty = 159;
    case kScriptingDebugScreenTextPretty: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.scriptingdebugscreentextpretty_);
      break;
    }
    // optional .CMsgBotWorldState.Action.MoveToLocation moveDirectly = 156;
    case kMoveDirectly: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.movedirectly_);
      break;
    }
    // optional .CMsgBotWorldState.Action.OceanWinGame oceanWinGame = 157;
    case kOceanWinGame: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.oceanwingame_);
      break;
    }
    // optional .CMsgBotWorldState.Action.OceanReplayCorrectTime oceanReplayCorrectTime = 158;
    case kOceanReplayCorrectTime: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ActionData_.oceanreplaycorrecttime_);
      break;
    }
    case ACTIONDATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState_Action::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState.Action)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState_Action* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState_Action>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState.Action)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState.Action)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState_Action::MergeFrom(const CMsgBotWorldState_Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState.Action)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      actiontype_ = from.actiontype_;
    }
    if (cached_has_bits & 0x00000002u) {
      actiondelay_ = from.actiondelay_;
    }
    if (cached_has_bits & 0x00000004u) {
      player_ = from.player_;
    }
    if (cached_has_bits & 0x00000008u) {
      actionid_ = from.actionid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.ActionData_case()) {
    case kMoveToLocation: {
      mutable_movetolocation()->::CMsgBotWorldState_Action_MoveToLocation::MergeFrom(from.movetolocation());
      break;
    }
    case kMoveToTarget: {
      mutable_movetotarget()->::CMsgBotWorldState_Action_MoveToTarget::MergeFrom(from.movetotarget());
      break;
    }
    case kAttackMove: {
      mutable_attackmove()->::CMsgBotWorldState_Action_AttackMove::MergeFrom(from.attackmove());
      break;
    }
    case kAttackTarget: {
      mutable_attacktarget()->::CMsgBotWorldState_Action_AttackTarget::MergeFrom(from.attacktarget());
      break;
    }
    case kCastLocation: {
      mutable_castlocation()->::CMsgBotWorldState_Action_CastLocation::MergeFrom(from.castlocation());
      break;
    }
    case kCastTarget: {
      mutable_casttarget()->::CMsgBotWorldState_Action_CastTarget::MergeFrom(from.casttarget());
      break;
    }
    case kCastTree: {
      mutable_casttree()->::CMsgBotWorldState_Action_CastTree::MergeFrom(from.casttree());
      break;
    }
    case kCast: {
      mutable_cast()->::CMsgBotWorldState_Action_Cast::MergeFrom(from.cast());
      break;
    }
    case kCastToggle: {
      mutable_casttoggle()->::CMsgBotWorldState_Action_CastToggle::MergeFrom(from.casttoggle());
      break;
    }
    case kHoldLocation: {
      mutable_holdlocation()->::CMsgBotWorldState_Action_HoldLocation::MergeFrom(from.holdlocation());
      break;
    }
    case kTrainAbility: {
      mutable_trainability()->::CMsgBotWorldState_Action_TrainAbility::MergeFrom(from.trainability());
      break;
    }
    case kDropItem: {
      mutable_dropitem()->::CMsgBotWorldState_Action_DropItem::MergeFrom(from.dropitem());
      break;
    }
    case kPickUpItem: {
      mutable_pickupitem()->::CMsgBotWorldState_Action_PickUpItem::MergeFrom(from.pickupitem());
      break;
    }
    case kPickupRune: {
      mutable_pickuprune()->::CMsgBotWorldState_Action_PickupRune::MergeFrom(from.pickuprune());
      break;
    }
    case kPurchaseItem: {
      mutable_purchaseitem()->::CMsgBotWorldState_Action_PurchaseItem::MergeFrom(from.purchaseitem());
      break;
    }
    case kSellItem: {
      mutable_sellitem()->::CMsgBotWorldState_Action_SellItem::MergeFrom(from.sellitem());
      break;
    }
    case kDisassembleItem: {
      mutable_disassembleitem()->::CMsgBotWorldState_Action_DisassembleItem::MergeFrom(from.disassembleitem());
      break;
    }
    case kSetCombineLockItem: {
      mutable_setcombinelockitem()->::CMsgBotWorldState_Action_SetCombineLockItem::MergeFrom(from.setcombinelockitem());
      break;
    }
    case kStop: {
      mutable_stop()->::CMsgBotWorldState_Action_Stop::MergeFrom(from.stop());
      break;
    }
    case kChat: {
      mutable_chat()->::CMsgBotWorldState_Action_Chat::MergeFrom(from.chat());
      break;
    }
    case kSwapItems: {
      mutable_swapitems()->::CMsgBotWorldState_Action_SwapItems::MergeFrom(from.swapitems());
      break;
    }
    case kUseShrine: {
      mutable_useshrine()->::CMsgBotWorldState_Action_UseShrine::MergeFrom(from.useshrine());
      break;
    }
    case kCourier: {
      mutable_courier()->::CMsgBotWorldState_Action_Courier::MergeFrom(from.courier());
      break;
    }
    case kGetActualIncomingDamage: {
      mutable_getactualincomingdamage()->::CMsgBotWorldState_Action_GetActualIncomingDamage::MergeFrom(from.getactualincomingdamage());
      break;
    }
    case kGetEstimatedDamageToTarget: {
      mutable_getestimateddamagetotarget()->::CMsgBotWorldState_Action_GetEstimatedDamageToTarget::MergeFrom(from.getestimateddamagetotarget());
      break;
    }
    case kGlyph: {
      mutable_glyph()->::CMsgBotWorldState_Action_Glyph::MergeFrom(from.glyph());
      break;
    }
    case kSoftReset: {
      mutable_softreset()->::CMsgBotWorldState_Action_SoftReset::MergeFrom(from.softreset());
      break;
    }
    case kBuyback: {
      mutable_buyback()->::CMsgBotWorldState_Action_Buyback::MergeFrom(from.buyback());
      break;
    }
    case kScriptingDebugDrawText: {
      mutable_scriptingdebugdrawtext()->::CMsgBotWorldState_Action_ScriptingDebugDrawText::MergeFrom(from.scriptingdebugdrawtext());
      break;
    }
    case kScriptingDebugDrawLine: {
      mutable_scriptingdebugdrawline()->::CMsgBotWorldState_Action_ScriptingDebugDrawLine::MergeFrom(from.scriptingdebugdrawline());
      break;
    }
    case kScriptingDebugDrawScreenText: {
      mutable_scriptingdebugdrawscreentext()->::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::MergeFrom(from.scriptingdebugdrawscreentext());
      break;
    }
    case kScriptingDebugDrawBox: {
      mutable_scriptingdebugdrawbox()->::CMsgBotWorldState_Action_ScriptingDebugDrawBox::MergeFrom(from.scriptingdebugdrawbox());
      break;
    }
    case kScriptingDebugDrawCircle: {
      mutable_scriptingdebugdrawcircle()->::CMsgBotWorldState_Action_ScriptingDebugDrawCircle::MergeFrom(from.scriptingdebugdrawcircle());
      break;
    }
    case kScriptingDebugDrawClear: {
      mutable_scriptingdebugdrawclear()->::CMsgBotWorldState_Action_ScriptingDebugDrawClear::MergeFrom(from.scriptingdebugdrawclear());
      break;
    }
    case kScriptingDebugScreenTextPretty: {
      mutable_scriptingdebugscreentextpretty()->::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::MergeFrom(from.scriptingdebugscreentextpretty());
      break;
    }
    case kMoveDirectly: {
      mutable_movedirectly()->::CMsgBotWorldState_Action_MoveToLocation::MergeFrom(from.movedirectly());
      break;
    }
    case kOceanWinGame: {
      mutable_oceanwingame()->::CMsgBotWorldState_Action_OceanWinGame::MergeFrom(from.oceanwingame());
      break;
    }
    case kOceanReplayCorrectTime: {
      mutable_oceanreplaycorrecttime()->::CMsgBotWorldState_Action_OceanReplayCorrectTime::MergeFrom(from.oceanreplaycorrecttime());
      break;
    }
    case ACTIONDATA_NOT_SET: {
      break;
    }
  }
}

void CMsgBotWorldState_Action::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState_Action::CopyFrom(const CMsgBotWorldState_Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState_Action::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  switch (ActionData_case()) {
    case kMoveToLocation: {
      if (has_movetolocation()) {
        if (!this->movetolocation().IsInitialized()) return false;
      }
      break;
    }
    case kMoveToTarget: {
      if (has_movetotarget()) {
        if (!this->movetotarget().IsInitialized()) return false;
      }
      break;
    }
    case kAttackMove: {
      if (has_attackmove()) {
        if (!this->attackmove().IsInitialized()) return false;
      }
      break;
    }
    case kAttackTarget: {
      if (has_attacktarget()) {
        if (!this->attacktarget().IsInitialized()) return false;
      }
      break;
    }
    case kCastLocation: {
      if (has_castlocation()) {
        if (!this->castlocation().IsInitialized()) return false;
      }
      break;
    }
    case kCastTarget: {
      if (has_casttarget()) {
        if (!this->casttarget().IsInitialized()) return false;
      }
      break;
    }
    case kCastTree: {
      if (has_casttree()) {
        if (!this->casttree().IsInitialized()) return false;
      }
      break;
    }
    case kCast: {
      if (has_cast()) {
        if (!this->cast().IsInitialized()) return false;
      }
      break;
    }
    case kCastToggle: {
      if (has_casttoggle()) {
        if (!this->casttoggle().IsInitialized()) return false;
      }
      break;
    }
    case kHoldLocation: {
      break;
    }
    case kTrainAbility: {
      if (has_trainability()) {
        if (!this->trainability().IsInitialized()) return false;
      }
      break;
    }
    case kDropItem: {
      if (has_dropitem()) {
        if (!this->dropitem().IsInitialized()) return false;
      }
      break;
    }
    case kPickUpItem: {
      break;
    }
    case kPickupRune: {
      if (has_pickuprune()) {
        if (!this->pickuprune().IsInitialized()) return false;
      }
      break;
    }
    case kPurchaseItem: {
      break;
    }
    case kSellItem: {
      break;
    }
    case kDisassembleItem: {
      if (has_disassembleitem()) {
        if (!this->disassembleitem().IsInitialized()) return false;
      }
      break;
    }
    case kSetCombineLockItem: {
      if (has_setcombinelockitem()) {
        if (!this->setcombinelockitem().IsInitialized()) return false;
      }
      break;
    }
    case kStop: {
      break;
    }
    case kChat: {
      if (has_chat()) {
        if (!this->chat().IsInitialized()) return false;
      }
      break;
    }
    case kSwapItems: {
      if (has_swapitems()) {
        if (!this->swapitems().IsInitialized()) return false;
      }
      break;
    }
    case kUseShrine: {
      if (has_useshrine()) {
        if (!this->useshrine().IsInitialized()) return false;
      }
      break;
    }
    case kCourier: {
      if (has_courier()) {
        if (!this->courier().IsInitialized()) return false;
      }
      break;
    }
    case kGetActualIncomingDamage: {
      if (has_getactualincomingdamage()) {
        if (!this->getactualincomingdamage().IsInitialized()) return false;
      }
      break;
    }
    case kGetEstimatedDamageToTarget: {
      if (has_getestimateddamagetotarget()) {
        if (!this->getestimateddamagetotarget().IsInitialized()) return false;
      }
      break;
    }
    case kGlyph: {
      if (has_glyph()) {
        if (!this->glyph().IsInitialized()) return false;
      }
      break;
    }
    case kSoftReset: {
      break;
    }
    case kBuyback: {
      if (has_buyback()) {
        if (!this->buyback().IsInitialized()) return false;
      }
      break;
    }
    case kScriptingDebugDrawText: {
      if (has_scriptingdebugdrawtext()) {
        if (!this->scriptingdebugdrawtext().IsInitialized()) return false;
      }
      break;
    }
    case kScriptingDebugDrawLine: {
      if (has_scriptingdebugdrawline()) {
        if (!this->scriptingdebugdrawline().IsInitialized()) return false;
      }
      break;
    }
    case kScriptingDebugDrawScreenText: {
      if (has_scriptingdebugdrawscreentext()) {
        if (!this->scriptingdebugdrawscreentext().IsInitialized()) return false;
      }
      break;
    }
    case kScriptingDebugDrawBox: {
      if (has_scriptingdebugdrawbox()) {
        if (!this->scriptingdebugdrawbox().IsInitialized()) return false;
      }
      break;
    }
    case kScriptingDebugDrawCircle: {
      if (has_scriptingdebugdrawcircle()) {
        if (!this->scriptingdebugdrawcircle().IsInitialized()) return false;
      }
      break;
    }
    case kScriptingDebugDrawClear: {
      break;
    }
    case kScriptingDebugScreenTextPretty: {
      if (has_scriptingdebugscreentextpretty()) {
        if (!this->scriptingdebugscreentextpretty().IsInitialized()) return false;
      }
      break;
    }
    case kMoveDirectly: {
      if (has_movedirectly()) {
        if (!this->movedirectly().IsInitialized()) return false;
      }
      break;
    }
    case kOceanWinGame: {
      if (has_oceanwingame()) {
        if (!this->oceanwingame().IsInitialized()) return false;
      }
      break;
    }
    case kOceanReplayCorrectTime: {
      if (has_oceanreplaycorrecttime()) {
        if (!this->oceanreplaycorrecttime().IsInitialized()) return false;
      }
      break;
    }
    case ACTIONDATA_NOT_SET: {
      break;
    }
  }
  return true;
}

void CMsgBotWorldState_Action::Swap(CMsgBotWorldState_Action* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState_Action::InternalSwap(CMsgBotWorldState_Action* other) {
  using std::swap;
  swap(actiontype_, other->actiontype_);
  swap(actiondelay_, other->actiondelay_);
  swap(player_, other->player_);
  swap(actionid_, other->actionid_);
  swap(ActionData_, other->ActionData_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState_Action::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgBotWorldState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBotWorldState::kTeamIdFieldNumber;
const int CMsgBotWorldState::kGameTimeFieldNumber;
const int CMsgBotWorldState::kDotaTimeFieldNumber;
const int CMsgBotWorldState::kGameStateFieldNumber;
const int CMsgBotWorldState::kHeroPickStateFieldNumber;
const int CMsgBotWorldState::kTimeOfDayFieldNumber;
const int CMsgBotWorldState::kGlyphCooldownFieldNumber;
const int CMsgBotWorldState::kGlyphCooldownEnemyFieldNumber;
const int CMsgBotWorldState::kPlayersFieldNumber;
const int CMsgBotWorldState::kUnitsFieldNumber;
const int CMsgBotWorldState::kDroppedItemsFieldNumber;
const int CMsgBotWorldState::kRuneInfosFieldNumber;
const int CMsgBotWorldState::kIncomingTeleportsFieldNumber;
const int CMsgBotWorldState::kLinearProjectilesFieldNumber;
const int CMsgBotWorldState::kAvoidanceZonesFieldNumber;
const int CMsgBotWorldState::kCouriersFieldNumber;
const int CMsgBotWorldState::kAbilityEventsFieldNumber;
const int CMsgBotWorldState::kDamageEventsFieldNumber;
const int CMsgBotWorldState::kCourierKilledEventsFieldNumber;
const int CMsgBotWorldState::kRoshanKilledEventsFieldNumber;
const int CMsgBotWorldState::kTreeEventsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBotWorldState::CMsgBotWorldState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgBotWorldState)
}
CMsgBotWorldState::CMsgBotWorldState(const CMsgBotWorldState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      players_(from.players_),
      units_(from.units_),
      dropped_items_(from.dropped_items_),
      rune_infos_(from.rune_infos_),
      incoming_teleports_(from.incoming_teleports_),
      linear_projectiles_(from.linear_projectiles_),
      avoidance_zones_(from.avoidance_zones_),
      couriers_(from.couriers_),
      ability_events_(from.ability_events_),
      damage_events_(from.damage_events_),
      courier_killed_events_(from.courier_killed_events_),
      roshan_killed_events_(from.roshan_killed_events_),
      tree_events_(from.tree_events_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&team_id_, &from.team_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&glyph_cooldown_enemy_) -
    reinterpret_cast<char*>(&team_id_)) + sizeof(glyph_cooldown_enemy_));
  // @@protoc_insertion_point(copy_constructor:CMsgBotWorldState)
}

void CMsgBotWorldState::SharedCtor() {
  ::memset(&team_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&glyph_cooldown_enemy_) -
      reinterpret_cast<char*>(&team_id_)) + sizeof(glyph_cooldown_enemy_));
}

CMsgBotWorldState::~CMsgBotWorldState() {
  // @@protoc_insertion_point(destructor:CMsgBotWorldState)
  SharedDtor();
}

void CMsgBotWorldState::SharedDtor() {
}

void CMsgBotWorldState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgBotWorldState::descriptor() {
  ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgBotWorldState& CMsgBotWorldState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::scc_info_CMsgBotWorldState.base);
  return *internal_default_instance();
}


void CMsgBotWorldState::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBotWorldState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  players_.Clear();
  units_.Clear();
  dropped_items_.Clear();
  rune_infos_.Clear();
  incoming_teleports_.Clear();
  linear_projectiles_.Clear();
  avoidance_zones_.Clear();
  couriers_.Clear();
  ability_events_.Clear();
  damage_events_.Clear();
  courier_killed_events_.Clear();
  roshan_killed_events_.Clear();
  tree_events_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&team_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&glyph_cooldown_enemy_) -
        reinterpret_cast<char*>(&team_id_)) + sizeof(glyph_cooldown_enemy_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgBotWorldState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgBotWorldState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 team_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_team_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float game_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_game_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &game_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float dota_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_dota_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dota_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_game_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 hero_pick_state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_hero_pick_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hero_pick_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float time_of_day = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_time_of_day();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_of_day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float glyph_cooldown = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_glyph_cooldown();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &glyph_cooldown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 glyph_cooldown_enemy = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_glyph_cooldown_enemy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &glyph_cooldown_enemy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgBotWorldState.Player players = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgBotWorldState.Unit units = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_units()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgBotWorldState.DroppedItem dropped_items = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dropped_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgBotWorldState.RuneInfo rune_infos = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rune_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgBotWorldState.TeleportInfo incoming_teleports = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_incoming_teleports()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgBotWorldState.LinearProjectile linear_projectiles = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_linear_projectiles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgBotWorldState.AvoidanceZone avoidance_zones = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_avoidance_zones()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgBotWorldState.Courier couriers = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_couriers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgBotWorldState.EventAbility ability_events = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ability_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgBotWorldState.EventDamage damage_events = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_damage_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgBotWorldState.EventCourierKilled courier_killed_events = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_courier_killed_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgBotWorldState.EventRoshanKilled roshan_killed_events = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_roshan_killed_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgBotWorldState.EventTree tree_events = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tree_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgBotWorldState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgBotWorldState)
  return false;
#undef DO_
}

void CMsgBotWorldState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgBotWorldState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 team_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->team_id(), output);
  }

  // optional float game_time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->game_time(), output);
  }

  // optional float dota_time = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->dota_time(), output);
  }

  // optional uint32 game_state = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->game_state(), output);
  }

  // optional uint32 hero_pick_state = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->hero_pick_state(), output);
  }

  // optional float time_of_day = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->time_of_day(), output);
  }

  // optional float glyph_cooldown = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->glyph_cooldown(), output);
  }

  // optional uint32 glyph_cooldown_enemy = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->glyph_cooldown_enemy(), output);
  }

  // repeated .CMsgBotWorldState.Player players = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->players(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgBotWorldState.Unit units = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->units_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->units(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgBotWorldState.DroppedItem dropped_items = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dropped_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->dropped_items(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgBotWorldState.RuneInfo rune_infos = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rune_infos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->rune_infos(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgBotWorldState.TeleportInfo incoming_teleports = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->incoming_teleports_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->incoming_teleports(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgBotWorldState.LinearProjectile linear_projectiles = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->linear_projectiles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->linear_projectiles(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgBotWorldState.AvoidanceZone avoidance_zones = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->avoidance_zones_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->avoidance_zones(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgBotWorldState.Courier couriers = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->couriers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17,
      this->couriers(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgBotWorldState.EventAbility ability_events = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ability_events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20,
      this->ability_events(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgBotWorldState.EventDamage damage_events = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->damage_events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21,
      this->damage_events(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgBotWorldState.EventCourierKilled courier_killed_events = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->courier_killed_events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22,
      this->courier_killed_events(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgBotWorldState.EventRoshanKilled roshan_killed_events = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roshan_killed_events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23,
      this->roshan_killed_events(static_cast<int>(i)),
      output);
  }

  // repeated .CMsgBotWorldState.EventTree tree_events = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tree_events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24,
      this->tree_events(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgBotWorldState)
}

::google::protobuf::uint8* CMsgBotWorldState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBotWorldState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 team_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->team_id(), target);
  }

  // optional float game_time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->game_time(), target);
  }

  // optional float dota_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->dota_time(), target);
  }

  // optional uint32 game_state = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->game_state(), target);
  }

  // optional uint32 hero_pick_state = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->hero_pick_state(), target);
  }

  // optional float time_of_day = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->time_of_day(), target);
  }

  // optional float glyph_cooldown = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->glyph_cooldown(), target);
  }

  // optional uint32 glyph_cooldown_enemy = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->glyph_cooldown_enemy(), target);
  }

  // repeated .CMsgBotWorldState.Player players = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->players(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgBotWorldState.Unit units = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->units_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->units(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgBotWorldState.DroppedItem dropped_items = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dropped_items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->dropped_items(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgBotWorldState.RuneInfo rune_infos = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rune_infos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->rune_infos(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgBotWorldState.TeleportInfo incoming_teleports = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->incoming_teleports_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->incoming_teleports(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgBotWorldState.LinearProjectile linear_projectiles = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->linear_projectiles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->linear_projectiles(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgBotWorldState.AvoidanceZone avoidance_zones = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->avoidance_zones_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->avoidance_zones(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgBotWorldState.Courier couriers = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->couriers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->couriers(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgBotWorldState.EventAbility ability_events = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ability_events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->ability_events(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgBotWorldState.EventDamage damage_events = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->damage_events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->damage_events(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgBotWorldState.EventCourierKilled courier_killed_events = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->courier_killed_events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->courier_killed_events(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgBotWorldState.EventRoshanKilled roshan_killed_events = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roshan_killed_events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->roshan_killed_events(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgBotWorldState.EventTree tree_events = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tree_events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->tree_events(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBotWorldState)
  return target;
}

size_t CMsgBotWorldState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBotWorldState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgBotWorldState.Player players = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->players_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->players(static_cast<int>(i)));
    }
  }

  // repeated .CMsgBotWorldState.Unit units = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->units_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->units(static_cast<int>(i)));
    }
  }

  // repeated .CMsgBotWorldState.DroppedItem dropped_items = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->dropped_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dropped_items(static_cast<int>(i)));
    }
  }

  // repeated .CMsgBotWorldState.RuneInfo rune_infos = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->rune_infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rune_infos(static_cast<int>(i)));
    }
  }

  // repeated .CMsgBotWorldState.TeleportInfo incoming_teleports = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->incoming_teleports_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->incoming_teleports(static_cast<int>(i)));
    }
  }

  // repeated .CMsgBotWorldState.LinearProjectile linear_projectiles = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->linear_projectiles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->linear_projectiles(static_cast<int>(i)));
    }
  }

  // repeated .CMsgBotWorldState.AvoidanceZone avoidance_zones = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->avoidance_zones_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->avoidance_zones(static_cast<int>(i)));
    }
  }

  // repeated .CMsgBotWorldState.Courier couriers = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->couriers_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->couriers(static_cast<int>(i)));
    }
  }

  // repeated .CMsgBotWorldState.EventAbility ability_events = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->ability_events_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ability_events(static_cast<int>(i)));
    }
  }

  // repeated .CMsgBotWorldState.EventDamage damage_events = 21;
  {
    unsigned int count = static_cast<unsigned int>(this->damage_events_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->damage_events(static_cast<int>(i)));
    }
  }

  // repeated .CMsgBotWorldState.EventCourierKilled courier_killed_events = 22;
  {
    unsigned int count = static_cast<unsigned int>(this->courier_killed_events_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->courier_killed_events(static_cast<int>(i)));
    }
  }

  // repeated .CMsgBotWorldState.EventRoshanKilled roshan_killed_events = 23;
  {
    unsigned int count = static_cast<unsigned int>(this->roshan_killed_events_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roshan_killed_events(static_cast<int>(i)));
    }
  }

  // repeated .CMsgBotWorldState.EventTree tree_events = 24;
  {
    unsigned int count = static_cast<unsigned int>(this->tree_events_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tree_events(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 team_id = 1;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->team_id());
    }

    // optional float game_time = 2;
    if (has_game_time()) {
      total_size += 1 + 4;
    }

    // optional float dota_time = 3;
    if (has_dota_time()) {
      total_size += 1 + 4;
    }

    // optional uint32 game_state = 4;
    if (has_game_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_state());
    }

    // optional uint32 hero_pick_state = 5;
    if (has_hero_pick_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hero_pick_state());
    }

    // optional float time_of_day = 6;
    if (has_time_of_day()) {
      total_size += 1 + 4;
    }

    // optional float glyph_cooldown = 7;
    if (has_glyph_cooldown()) {
      total_size += 1 + 4;
    }

    // optional uint32 glyph_cooldown_enemy = 8;
    if (has_glyph_cooldown_enemy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->glyph_cooldown_enemy());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBotWorldState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgBotWorldState)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBotWorldState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgBotWorldState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgBotWorldState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgBotWorldState)
    MergeFrom(*source);
  }
}

void CMsgBotWorldState::MergeFrom(const CMsgBotWorldState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgBotWorldState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  players_.MergeFrom(from.players_);
  units_.MergeFrom(from.units_);
  dropped_items_.MergeFrom(from.dropped_items_);
  rune_infos_.MergeFrom(from.rune_infos_);
  incoming_teleports_.MergeFrom(from.incoming_teleports_);
  linear_projectiles_.MergeFrom(from.linear_projectiles_);
  avoidance_zones_.MergeFrom(from.avoidance_zones_);
  couriers_.MergeFrom(from.couriers_);
  ability_events_.MergeFrom(from.ability_events_);
  damage_events_.MergeFrom(from.damage_events_);
  courier_killed_events_.MergeFrom(from.courier_killed_events_);
  roshan_killed_events_.MergeFrom(from.roshan_killed_events_);
  tree_events_.MergeFrom(from.tree_events_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      team_id_ = from.team_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      game_time_ = from.game_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      dota_time_ = from.dota_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      game_state_ = from.game_state_;
    }
    if (cached_has_bits & 0x00000010u) {
      hero_pick_state_ = from.hero_pick_state_;
    }
    if (cached_has_bits & 0x00000020u) {
      time_of_day_ = from.time_of_day_;
    }
    if (cached_has_bits & 0x00000040u) {
      glyph_cooldown_ = from.glyph_cooldown_;
    }
    if (cached_has_bits & 0x00000080u) {
      glyph_cooldown_enemy_ = from.glyph_cooldown_enemy_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgBotWorldState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgBotWorldState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBotWorldState::CopyFrom(const CMsgBotWorldState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBotWorldState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBotWorldState::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->units())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->dropped_items())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->rune_infos())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->incoming_teleports())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->linear_projectiles())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->avoidance_zones())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ability_events())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->tree_events())) return false;
  return true;
}

void CMsgBotWorldState::Swap(CMsgBotWorldState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBotWorldState::InternalSwap(CMsgBotWorldState* other) {
  using std::swap;
  CastToBase(&players_)->InternalSwap(CastToBase(&other->players_));
  CastToBase(&units_)->InternalSwap(CastToBase(&other->units_));
  CastToBase(&dropped_items_)->InternalSwap(CastToBase(&other->dropped_items_));
  CastToBase(&rune_infos_)->InternalSwap(CastToBase(&other->rune_infos_));
  CastToBase(&incoming_teleports_)->InternalSwap(CastToBase(&other->incoming_teleports_));
  CastToBase(&linear_projectiles_)->InternalSwap(CastToBase(&other->linear_projectiles_));
  CastToBase(&avoidance_zones_)->InternalSwap(CastToBase(&other->avoidance_zones_));
  CastToBase(&couriers_)->InternalSwap(CastToBase(&other->couriers_));
  CastToBase(&ability_events_)->InternalSwap(CastToBase(&other->ability_events_));
  CastToBase(&damage_events_)->InternalSwap(CastToBase(&other->damage_events_));
  CastToBase(&courier_killed_events_)->InternalSwap(CastToBase(&other->courier_killed_events_));
  CastToBase(&roshan_killed_events_)->InternalSwap(CastToBase(&other->roshan_killed_events_));
  CastToBase(&tree_events_)->InternalSwap(CastToBase(&other->tree_events_));
  swap(team_id_, other->team_id_);
  swap(game_time_, other->game_time_);
  swap(dota_time_, other->dota_time_);
  swap(game_state_, other->game_state_);
  swap(hero_pick_state_, other->hero_pick_state_);
  swap(time_of_day_, other->time_of_day_);
  swap(glyph_cooldown_, other->glyph_cooldown_);
  swap(glyph_cooldown_enemy_, other->glyph_cooldown_enemy_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgBotWorldState::GetMetadata() const {
  protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Vector* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Vector >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Vector >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Player* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Player >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Player >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Ability* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Ability >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Ability >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_DroppedItem* Arena::CreateMaybeMessage< ::CMsgBotWorldState_DroppedItem >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_DroppedItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_RuneInfo* Arena::CreateMaybeMessage< ::CMsgBotWorldState_RuneInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_RuneInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_TeleportInfo* Arena::CreateMaybeMessage< ::CMsgBotWorldState_TeleportInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_TeleportInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Modifier* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Modifier >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Modifier >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_LinearProjectile* Arena::CreateMaybeMessage< ::CMsgBotWorldState_LinearProjectile >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_LinearProjectile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_TrackingProjectile* Arena::CreateMaybeMessage< ::CMsgBotWorldState_TrackingProjectile >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_TrackingProjectile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_AvoidanceZone* Arena::CreateMaybeMessage< ::CMsgBotWorldState_AvoidanceZone >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_AvoidanceZone >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Courier* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Courier >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Courier >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_EventAbility* Arena::CreateMaybeMessage< ::CMsgBotWorldState_EventAbility >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_EventAbility >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_EventDamage* Arena::CreateMaybeMessage< ::CMsgBotWorldState_EventDamage >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_EventDamage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_EventCourierKilled* Arena::CreateMaybeMessage< ::CMsgBotWorldState_EventCourierKilled >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_EventCourierKilled >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_EventRoshanKilled* Arena::CreateMaybeMessage< ::CMsgBotWorldState_EventRoshanKilled >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_EventRoshanKilled >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_EventTree* Arena::CreateMaybeMessage< ::CMsgBotWorldState_EventTree >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_EventTree >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Unit* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Unit >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Unit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Actions_OceanAnnotation_Hero* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Actions_OceanAnnotation_Hero >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Actions_OceanAnnotation_Hero >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Actions_OceanAnnotation* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Actions_OceanAnnotation >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Actions_OceanAnnotation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Actions_Header* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Actions_Header >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Actions_Header >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Actions* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Actions >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Actions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_MoveToLocation* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_MoveToLocation >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_MoveToLocation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_MoveToTarget* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_MoveToTarget >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_MoveToTarget >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_AttackMove* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_AttackMove >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_AttackMove >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_AttackTarget* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_AttackTarget >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_AttackTarget >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_HoldLocation* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_HoldLocation >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_HoldLocation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_Stop* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_Stop >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_Stop >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_CastLocation* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_CastLocation >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_CastLocation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_CastTarget* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_CastTarget >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_CastTarget >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_CastTree* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_CastTree >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_CastTree >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_Cast* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_Cast >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_Cast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_CastToggle* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_CastToggle >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_CastToggle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_TrainAbility* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_TrainAbility >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_TrainAbility >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_DropItem* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_DropItem >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_DropItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_PickUpItem* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_PickUpItem >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_PickUpItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_PurchaseItem* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_PurchaseItem >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_PurchaseItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_SellItem* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_SellItem >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_SellItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_SwapItems* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_SwapItems >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_SwapItems >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_DisassembleItem* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_DisassembleItem >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_DisassembleItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_SetCombineLockItem* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_SetCombineLockItem >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_SetCombineLockItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_PickupRune* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_PickupRune >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_PickupRune >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_Chat* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_Chat >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_Chat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_UseShrine* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_UseShrine >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_UseShrine >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_Courier* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_Courier >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_Courier >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_GetActualIncomingDamage* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_GetActualIncomingDamage >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_GetActualIncomingDamage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_Glyph* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_Glyph >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_Glyph >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_SoftReset* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_SoftReset >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_SoftReset >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_Buyback* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_Buyback >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_Buyback >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_ScriptingDebugDrawText* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_ScriptingDebugDrawText >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_ScriptingDebugDrawText >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_ScriptingDebugDrawLine* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_ScriptingDebugDrawLine >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_ScriptingDebugDrawLine >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_ScriptingDebugDrawBox* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_ScriptingDebugDrawBox >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_ScriptingDebugDrawBox >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_ScriptingDebugDrawClear* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_ScriptingDebugDrawClear >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_ScriptingDebugDrawClear >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_OceanWinGame* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_OceanWinGame >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_OceanWinGame >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action_OceanReplayCorrectTime* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action_OceanReplayCorrectTime >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action_OceanReplayCorrectTime >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState_Action* Arena::CreateMaybeMessage< ::CMsgBotWorldState_Action >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState_Action >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgBotWorldState* Arena::CreateMaybeMessage< ::CMsgBotWorldState >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgBotWorldState >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
